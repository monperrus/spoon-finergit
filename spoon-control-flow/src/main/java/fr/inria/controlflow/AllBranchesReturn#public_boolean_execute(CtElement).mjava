/** 
 * Finds if all branches returns
 * @param element   starting point
 * @return True if all branches return or none return
 */
public
boolean
execute
(
CtElement
element
)
{
ControlFlowBuilder
builder
=
new
ControlFlowBuilder
(
)
;
ControlFlowGraph
graph
=
builder
.
build
(
element
)
;
graph
.
simplify
(
)
;
List
<
ControlFlowNode
>
exits
=
graph
.
findNodesOfKind
(
BranchKind
.
EXIT
)
;
int
returnCount
=
0
;
int
incomingCount
=
-
1
;
for
(
ControlFlowNode
n
:
exits
)
{
Set
<
ControlFlowEdge
>
edges
=
graph
.
incomingEdgesOf
(
n
)
;
incomingCount
=
edges
.
size
(
)
;
for
(
ControlFlowEdge
in
:
edges
)
{
if
(
in
.
getSourceNode
(
)
.
getStatement
(
)
!=
null
&&
in
.
getSourceNode
(
)
.
getStatement
(
)
instanceof
CtReturn
)
{
returnCount
++
;
}
}
}
return
returnCount
==
incomingCount
||
returnCount
==
0
;
}
