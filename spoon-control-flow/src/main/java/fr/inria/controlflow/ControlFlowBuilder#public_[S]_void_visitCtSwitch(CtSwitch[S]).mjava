@Override
public
<
S
>
void
visitCtSwitch
(
CtSwitch
<
S
>
switchStatement
)
{
registerStatementLabel
(
switchStatement
)
;
ControlFlowNode
switchNode
=
new
ControlFlowNode
(
switchStatement
.
getSelector
(
)
,
result
,
BranchKind
.
BRANCH
)
;
tryAddEdge
(
lastNode
,
switchNode
)
;
ControlFlowNode
convergenceNode
=
new
ControlFlowNode
(
null
,
result
,
BranchKind
.
CONVERGE
)
;
breakingBad
.
push
(
convergenceNode
)
;
lastNode
=
switchNode
;
for
(
CtCase
caseStatement
:
switchStatement
.
getCases
(
)
)
{
registerStatementLabel
(
caseStatement
)
;
ControlFlowNode
cn
=
new
ControlFlowNode
(
caseStatement
.
getCaseExpression
(
)
,
result
,
BranchKind
.
STATEMENT
)
;
tryAddEdge
(
lastNode
,
cn
)
;
if
(
lastNode
!=
switchNode
)
{
tryAddEdge
(
switchNode
,
cn
)
;
}
lastNode
=
cn
;
travelStatementList
(
caseStatement
.
getStatements
(
)
)
;
if
(
lastNode
.
getStatement
(
)
instanceof
CtBreak
)
{
lastNode
=
switchNode
;
}
}
lastNode
=
convergenceNode
;
breakingBad
.
pop
(
)
;
}
