@Override
public
void
visitCtFor
(
CtFor
forLoop
)
{
registerStatementLabel
(
forLoop
)
;
if
(
forLoop
.
getForInit
(
)
!=
null
)
{
if
(
forLoop
.
getForInit
(
)
.
size
(
)
>
1
)
{
travelStatementList
(
forLoop
.
getForInit
(
)
)
;
}
else
if
(
forLoop
.
getForInit
(
)
.
size
(
)
>
0
)
{
forLoop
.
getForInit
(
)
.
get
(
0
)
.
accept
(
this
)
;
}
}
ControlFlowNode
convergence
=
new
ControlFlowNode
(
forLoop
.
getExpression
(
)
,
result
,
BranchKind
.
CONVERGE
)
;
breakingBad
.
push
(
convergence
)
;
ControlFlowNode
branch
=
new
ControlFlowNode
(
forLoop
.
getExpression
(
)
,
result
,
BranchKind
.
BRANCH
)
;
tryAddEdge
(
lastNode
,
branch
)
;
continueBad
.
push
(
branch
)
;
lastNode
=
branch
;
if
(
forLoop
.
getBody
(
)
!=
null
)
{
forLoop
.
getBody
(
)
.
accept
(
this
)
;
}
if
(
forLoop
.
getForUpdate
(
)
!=
null
)
{
if
(
forLoop
.
getForUpdate
(
)
.
size
(
)
>
1
)
{
travelStatementList
(
forLoop
.
getForUpdate
(
)
)
;
}
else
if
(
forLoop
.
getForUpdate
(
)
.
size
(
)
>
0
)
{
forLoop
.
getForUpdate
(
)
.
get
(
0
)
.
accept
(
this
)
;
}
}
tryAddEdge
(
lastNode
,
branch
,
true
,
false
)
;
lastNode
=
convergence
;
tryAddEdge
(
branch
,
lastNode
)
;
continueBad
.
pop
(
)
;
breakingBad
.
pop
(
)
;
}
