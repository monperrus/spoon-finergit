public
String
print
(
)
{
StringBuilder
sb
=
new
StringBuilder
(
"digraph "
)
.
append
(
graph
.
getName
(
)
)
.
append
(
" { \n"
)
;
sb
.
append
(
"node [fontsize = 8];\n"
)
;
int
i
=
0
;
HashMap
<
ControlFlowNode
,
Integer
>
nodeIds
=
new
HashMap
<
ControlFlowNode
,
Integer
>
(
)
;
for
(
ControlFlowNode
n
:
graph
.
vertexSet
(
)
)
{
printNode
(
++
i
,
n
,
sb
)
;
nodeIds
.
put
(
n
,
i
)
;
}
for
(
ControlFlowEdge
e
:
graph
.
edgeSet
(
)
)
{
if
(
e
.
isBackEdge
(
)
)
{
sb
.
append
(
nodeIds
.
get
(
e
.
getSourceNode
(
)
)
)
.
append
(
" -> "
)
.
append
(
nodeIds
.
get
(
e
.
getTargetNode
(
)
)
)
.
append
(
"[style=dashed];\n "
)
;
}
else
{
sb
.
append
(
nodeIds
.
get
(
e
.
getSourceNode
(
)
)
)
.
append
(
" -> "
)
.
append
(
nodeIds
.
get
(
e
.
getTargetNode
(
)
)
)
.
append
(
" ;\n "
)
;
}
}
sb
.
append
(
"\n }"
)
;
return
sb
.
toString
(
)
;
}
