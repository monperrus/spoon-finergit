public
Factory
buildNewFactory
(
Collection
<
String
>
srcDirectory
,
int
javaVersion
)
throws
ClassNotFoundException
,
IllegalAccessException
,
InstantiationException
{
StandardEnvironment
env
=
new
StandardEnvironment
(
)
;
env
.
setComplianceLevel
(
javaVersion
)
;
env
.
setVerbose
(
true
)
;
env
.
setDebug
(
true
)
;
DefaultCoreFactory
f
=
new
DefaultCoreFactory
(
)
;
Factory
factory
=
new
FactoryImpl
(
f
,
env
)
;
JDTBasedSpoonCompiler
compiler
=
new
JDTBasedSpoonCompiler
(
factory
)
;
for
(
String
s
:
srcDirectory
)
{
for
(
String
dir
:
s
.
split
(
System
.
getProperty
(
"path.separator"
)
)
)
{
File
dirFile
=
new
File
(
dir
)
;
if
(
dirFile
.
isDirectory
(
)
)
{
compiler
.
addInputSource
(
dirFile
)
;
}
}
}
try
{
compiler
.
build
(
)
;
}
catch
(
Exception
e
)
{
throw
new
RuntimeException
(
e
)
;
}
return
factory
;
}
