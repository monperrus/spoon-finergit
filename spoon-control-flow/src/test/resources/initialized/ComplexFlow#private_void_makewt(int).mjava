/** 
 * Status: Solved.
 * @param nw
 */
private
void
makewt
(
int
nw
)
{
int
j
,
nwh
,
nw0
,
nw1
;
double
delta
,
wn4r
,
wk1r
,
wk1i
,
wk3r
,
wk3i
;
double
delta2
,
deltaj
,
deltaj3
;
ip
[
0
]
=
nw
;
ip
[
1
]
=
1
;
if
(
nw
>
2
)
{
nwh
=
nw
>>
1
;
delta
=
0.785398163397448278999490867136046290
/
nwh
;
delta2
=
delta
*
2
;
wn4r
=
Math
.
cos
(
delta
*
nwh
)
;
w
[
0
]
=
1
;
w
[
1
]
=
wn4r
;
if
(
nwh
==
4
)
{
w
[
2
]
=
Math
.
cos
(
delta2
)
;
w
[
3
]
=
Math
.
sin
(
delta2
)
;
}
else
if
(
nwh
>
4
)
{
makeipt
(
nw
)
;
w
[
2
]
=
0.5
/
Math
.
cos
(
delta2
)
;
w
[
3
]
=
0.5
/
Math
.
cos
(
delta
*
6
)
;
for
(
j
=
4
;
j
<
nwh
;
j
=
4
)
{
deltaj
=
delta
*
j
;
deltaj3
=
3
*
deltaj
;
w
[
j
]
=
Math
.
cos
(
deltaj
)
;
w
[
j
+
1
]
=
Math
.
sin
(
deltaj
)
;
w
[
j
+
2
]
=
Math
.
cos
(
deltaj3
)
;
w
[
j
+
3
]
=
-
Math
.
sin
(
deltaj3
)
;
}
}
nw0
=
0
;
while
(
nwh
>
2
)
{
nw1
=
nw0
+
nwh
;
nwh
=
1
;
w
[
nw1
]
=
1
;
w
[
nw1
+
1
]
=
wn4r
;
if
(
nwh
==
4
)
{
wk1r
=
w
[
nw0
+
4
]
;
wk1i
=
w
[
nw0
+
5
]
;
w
[
nw1
+
2
]
=
wk1r
;
w
[
nw1
+
3
]
=
wk1i
;
}
else
if
(
nwh
>
4
)
{
wk1r
=
w
[
nw0
+
4
]
;
wk3r
=
w
[
nw0
+
6
]
;
w
[
nw1
+
2
]
=
0.5
/
wk1r
;
w
[
nw1
+
3
]
=
0.5
/
wk3r
;
for
(
j
=
4
;
j
<
nwh
;
j
=
4
)
{
int
idx1
=
nw0
+
2
*
j
;
int
idx2
=
nw1
+
j
;
wk1r
=
w
[
idx1
]
;
wk1i
=
w
[
idx1
+
1
]
;
wk3r
=
w
[
idx1
+
2
]
;
wk3i
=
w
[
idx1
+
3
]
;
w
[
idx2
]
=
wk1r
;
w
[
idx2
+
1
]
=
wk1i
;
w
[
idx2
+
2
]
=
wk3r
;
w
[
idx2
+
3
]
=
wk3i
;
}
}
nw0
=
nw1
;
}
}
}
