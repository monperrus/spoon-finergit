private
BranchData
visitBranch
(
BoolExpr
branchCond
,
CtElement
...
branchBody
)
{
Map
<
CtReference
,
Expr
>
oldValues
=
new
HashMap
<
>
(
variablesMap
)
;
BoolExpr
oldConditions
=
currentConditions
;
Memory
oldMemory
=
new
Memory
(
memory
)
;
currentConditions
=
currentConditions
==
null
?
branchCond
:
context
.
mkAnd
(
currentConditions
,
branchCond
)
;
for
(
CtElement
element
:
branchBody
)
{
scan
(
element
)
;
}
Map
<
CtReference
,
Expr
>
newValues
=
variablesMap
;
Memory
newMemory
=
memory
;
currentConditions
=
oldConditions
;
variablesMap
=
oldValues
;
memory
=
oldMemory
;
return
new
BranchData
(
newValues
,
newMemory
)
;
}
