@Override
public
<
T
>
void
visitCtLambda
(
CtLambda
<
T
>
lambda
)
{
CtElement
lambdaBody
=
lambda
.
getBody
(
)
!=
null
?
lambda
.
getBody
(
)
:
lambda
.
getExpression
(
)
;
solver
.
push
(
)
;
Map
<
CtReference
,
Expr
>
oldValues
=
new
HashMap
<
>
(
variablesMap
)
;
Memory
oldMemory
=
new
Memory
(
memory
)
;
memory
.
resetMutable
(
)
;
visitMethod
(
lambdaBody
,
lambda
.
getParameters
(
)
)
;
variablesMap
=
oldValues
;
memory
=
oldMemory
;
solver
.
pop
(
)
;
int
nextPointer
=
memory
.
nextPointer
(
)
;
IntExpr
lambdaValue
=
context
.
mkInt
(
nextPointer
)
;
currentResult
=
applyCasts
(
lambdaValue
,
lambda
.
getType
(
)
,
lambda
.
getTypeCasts
(
)
)
;
lambda
.
putMetadata
(
"value"
,
currentResult
)
;
}
