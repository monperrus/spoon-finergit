@Override
public
<
T
>
void
visitCtLocalVariable
(
CtLocalVariable
<
T
>
localVariable
)
{
CtExpression
<
T
>
defaultExpression
=
localVariable
.
getDefaultExpression
(
)
;
if
(
defaultExpression
!=
null
)
{
CtAssignment
<
T
,
T
>
assignment
=
factory
.
createAssignment
(
)
;
assignment
.
setAssignment
(
defaultExpression
)
;
CtVariableWrite
<
T
>
variableWrite
=
factory
.
createVariableWrite
(
)
;
variableWrite
.
setVariable
(
localVariable
.
getReference
(
)
)
;
variableWrite
.
setType
(
localVariable
.
getType
(
)
)
;
assignment
.
setAssigned
(
variableWrite
)
;
assignment
.
setType
(
localVariable
.
getType
(
)
)
;
visitCtAssignment
(
assignment
)
;
}
else
{
variablesMap
.
put
(
localVariable
.
getReference
(
)
,
makeFreshConstFromType
(
context
,
localVariable
.
getType
(
)
)
)
;
}
}
