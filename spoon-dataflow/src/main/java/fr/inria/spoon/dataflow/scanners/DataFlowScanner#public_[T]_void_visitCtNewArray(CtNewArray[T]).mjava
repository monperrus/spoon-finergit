@Override
public
<
T
>
void
visitCtNewArray
(
CtNewArray
<
T
>
newArray
)
{
int
nextPointer
=
memory
.
nextPointer
(
)
;
IntExpr
arrayValue
=
context
.
mkInt
(
nextPointer
)
;
for
(
CtExpression
<
Integer
>
dimensionExpression
:
newArray
.
getDimensionExpressions
(
)
)
{
scan
(
dimensionExpression
)
;
}
CtTypeReference
<
?
>
componentType
=
(
(
CtArrayTypeReference
)
(
newArray
.
getType
(
)
)
)
.
getComponentType
(
)
;
int
i
=
0
;
for
(
CtExpression
<
?
>
arrayElement
:
newArray
.
getElements
(
)
)
{
scan
(
arrayElement
)
;
Expr
arrayElementExpr
=
currentResult
;
if
(
arrayElementExpr
instanceof
BitVecExpr
)
{
arrayElementExpr
=
castBV
(
(
BitVecExpr
)
arrayElementExpr
,
getActualType
(
arrayElement
)
,
componentType
)
;
}
memory
.
writeArray
(
(
CtArrayTypeReference
)
newArray
.
getType
(
)
,
arrayValue
,
context
.
mkBV
(
i
,
32
)
,
arrayElementExpr
)
;
i
++
;
}
currentResult
=
applyCasts
(
arrayValue
,
newArray
.
getType
(
)
,
newArray
.
getTypeCasts
(
)
)
;
}
