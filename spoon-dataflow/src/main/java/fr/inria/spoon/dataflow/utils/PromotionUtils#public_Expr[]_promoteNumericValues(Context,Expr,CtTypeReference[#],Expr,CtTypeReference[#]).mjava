/** 
 * Performs Binary Numeric Promotion: If either operand is of type long, the other is converted to long. Otherwise, both operands are converted to type int.
 */
public
static
Expr
[
]
promoteNumericValues
(
Context
context
,
Expr
leftValue
,
CtTypeReference
<
?
>
leftType
,
Expr
rightValue
,
CtTypeReference
<
?
>
rightType
)
{
if
(
TypeUtils
.
isLong
(
leftType
)
||
TypeUtils
.
isLong
(
rightType
)
)
{
leftValue
=
extendToLong
(
context
,
(
BitVecExpr
)
leftValue
,
!
TypeUtils
.
isChar
(
leftType
)
)
;
rightValue
=
extendToLong
(
context
,
(
BitVecExpr
)
rightValue
,
!
TypeUtils
.
isChar
(
rightType
)
)
;
}
else
{
leftValue
=
extendToInteger
(
context
,
(
BitVecExpr
)
leftValue
,
!
TypeUtils
.
isChar
(
leftType
)
)
;
rightValue
=
extendToInteger
(
context
,
(
BitVecExpr
)
rightValue
,
!
TypeUtils
.
isChar
(
rightType
)
)
;
}
return
new
Expr
[
]
{
leftValue
,
rightValue
}
;
}
