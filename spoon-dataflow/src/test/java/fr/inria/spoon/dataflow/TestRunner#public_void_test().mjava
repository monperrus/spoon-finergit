@Test
public
void
test
(
)
throws
IOException
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
false
)
;
launcher
.
getEnvironment
(
)
.
setCommentEnabled
(
false
)
;
launcher
.
getEnvironment
(
)
.
setComplianceLevel
(
10
)
;
launcher
.
addInputResource
(
file
.
getAbsolutePath
(
)
)
;
CtModel
model
=
launcher
.
buildModel
(
)
;
List
<
String
>
lines
=
Files
.
readAllLines
(
file
.
toPath
(
)
,
Charset
.
defaultCharset
(
)
)
;
CheckersScanner
scanner
=
new
CheckersScanner
(
launcher
.
getFactory
(
)
)
;
model
.
getAllTypes
(
)
.
forEach
(
scanner
::
scan
)
;
List
<
Warning
>
warnings
=
scanner
.
getWarnings
(
)
;
for
(
Warning
warn
:
warnings
)
{
if
(
!
lines
.
get
(
warn
.
position
.
getLine
(
)
-
1
)
.
contains
(
"//@"
+
warn
.
kind
.
name
(
)
)
)
{
fail
(
String
.
format
(
"ADDITIONAL WARNING '%s' AT (%s:%d)"
,
warn
.
kind
.
name
(
)
,
warn
.
position
.
getFile
(
)
.
getAbsolutePath
(
)
,
warn
.
position
.
getLine
(
)
)
)
;
}
}
for
(
int
i
=
0
;
i
<
lines
.
size
(
)
;
i
++
)
{
String
line
=
lines
.
get
(
i
)
;
List
<
String
>
commentWarnings
=
getCommentWarnings
(
line
)
;
int
lineNumber
=
i
+
1
;
for
(
String
commentWarning
:
commentWarnings
)
{
boolean
isMissing
=
warnings
.
stream
(
)
.
noneMatch
(
w
->
w
.
position
.
getLine
(
)
==
lineNumber
&&
w
.
kind
.
name
(
)
.
equals
(
commentWarning
)
)
;
if
(
isMissing
)
{
fail
(
String
.
format
(
"MISSING WARNING '%s' AT (%s:%d)"
,
commentWarning
,
file
.
getAbsolutePath
(
)
,
lineNumber
)
)
;
}
}
}
}
