private
Writer
createWriter
(
TypeDefinition
type
,
DecompilerSettings
settings
,
String
outputDirectory
)
throws
IOException
{
if
(
StringUtilities
.
isNullOrWhitespace
(
outputDirectory
)
)
{
return
new
OutputStreamWriter
(
System
.
out
,
settings
.
isUnicodeOutputEnabled
(
)
?
Charset
.
forName
(
"UTF-8"
)
:
Charset
.
defaultCharset
(
)
)
;
}
String
outputPath
;
String
fileName
=
type
.
getName
(
)
+
settings
.
getLanguage
(
)
.
getFileExtension
(
)
;
String
packageName
=
type
.
getPackageName
(
)
;
if
(
StringUtilities
.
isNullOrWhitespace
(
packageName
)
)
{
outputPath
=
PathHelper
.
combine
(
outputDirectory
,
fileName
)
;
}
else
{
outputPath
=
PathHelper
.
combine
(
outputDirectory
,
packageName
.
replace
(
'.'
,
PathHelper
.
DirectorySeparator
)
,
fileName
)
;
}
File
outputFile
=
new
File
(
outputPath
)
;
File
parentFile
=
outputFile
.
getParentFile
(
)
;
if
(
parentFile
!=
null
&&
!
parentFile
.
exists
(
)
&&
!
parentFile
.
mkdirs
(
)
)
{
throw
new
IllegalStateException
(
String
.
format
(
"Could not create output directory for file \"%s\"."
,
outputPath
)
)
;
}
if
(
!
outputFile
.
exists
(
)
&&
!
outputFile
.
createNewFile
(
)
)
{
throw
new
IllegalStateException
(
String
.
format
(
"Could not create output file \"%s\"."
,
outputPath
)
)
;
}
return
new
FileOutputWriter
(
outputFile
,
settings
)
;
}
