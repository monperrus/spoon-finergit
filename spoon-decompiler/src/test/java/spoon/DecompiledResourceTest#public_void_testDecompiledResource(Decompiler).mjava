public
void
testDecompiledResource
(
Decompiler
decompiler
)
throws
IOException
{
File
baseDir
=
new
File
(
"src/test/resources/jarLauncher"
)
;
File
pathToDecompiledRoot
=
new
File
(
System
.
getProperty
(
"java.io.tmpdir"
)
+
System
.
getProperty
(
"file.separator"
)
+
"spoon-tmp"
)
;
if
(
pathToDecompiledRoot
.
exists
(
)
)
{
FileUtils
.
deleteDirectory
(
pathToDecompiledRoot
)
;
pathToDecompiledRoot
.
delete
(
)
;
}
File
pathToDecompile
=
new
File
(
pathToDecompiledRoot
,
"src/main/java"
)
;
pathToDecompile
.
mkdirs
(
)
;
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
new
DecompiledResource
(
baseDir
.
getAbsolutePath
(
)
,
new
String
[
]
{
}
,
decompiler
,
pathToDecompiledRoot
.
getPath
(
)
)
)
;
launcher
.
getEnvironment
(
)
.
setAutoImports
(
true
)
;
launcher
.
buildModel
(
)
;
CtModel
model
=
launcher
.
getModel
(
)
;
assertEquals
(
5
,
model
.
getAllTypes
(
)
.
size
(
)
)
;
CtConstructor
constructor
=
(
CtConstructor
)
model
.
getRootPackage
(
)
.
getFactory
(
)
.
Type
(
)
.
get
(
"se.kth.castor.UseJson"
)
.
getTypeMembers
(
)
.
get
(
0
)
;
CtTry
tryStmt
=
(
CtTry
)
constructor
.
getBody
(
)
.
getStatement
(
1
)
;
CtLocalVariable
var
=
(
CtLocalVariable
)
tryStmt
.
getBody
(
)
.
getStatement
(
0
)
;
assertEquals
(
"org.json.JSONObject"
,
var
.
getType
(
)
.
getQualifiedName
(
)
)
;
}
