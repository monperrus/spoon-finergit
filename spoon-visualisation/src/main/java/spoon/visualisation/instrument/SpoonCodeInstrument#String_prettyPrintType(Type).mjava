/** 
 * Gets a short pretty print of the given type by considering its generics
 * @param type The type to analyse
 * @return A string corresponding to the name of the type plus potential generics
 */
String
prettyPrintType
(
final
Type
type
)
{
if
(
type
instanceof
Class
)
{
return
(
(
Class
<
?
>
)
type
)
.
getSimpleName
(
)
;
}
if
(
type
instanceof
ParameterizedType
)
{
final
ParameterizedType
paramType
=
(
ParameterizedType
)
type
;
return
getUnqualifiedClassName
(
paramType
.
getRawType
(
)
.
getTypeName
(
)
)
+
Arrays
.
stream
(
paramType
.
getActualTypeArguments
(
)
)
.
map
(
arg
->
prettyPrintType
(
arg
)
)
.
collect
(
Collectors
.
joining
(
", "
,
"<"
,
">"
)
)
;
}
return
type
.
getTypeName
(
)
;
}
