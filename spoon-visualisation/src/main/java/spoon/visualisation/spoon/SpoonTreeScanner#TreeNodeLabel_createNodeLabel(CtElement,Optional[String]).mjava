/** 
 * Create an initial text flow for naming the nodes of the Spoon AST.
 * @param elt The Spoon element to analyse.
 * @return The created text flow that can be completed with other text elements.
 */
TreeNodeLabel
createNodeLabel
(
final
CtElement
elt
,
final
Optional
<
String
>
adds
)
{
final
String
simpleName
=
elt
.
getClass
(
)
.
getSimpleName
(
)
;
final
Class
<
?
>
cl
=
Arrays
.
stream
(
elt
.
getClass
(
)
.
getInterfaces
(
)
)
.
filter
(
interf
->
simpleName
.
equals
(
interf
.
getSimpleName
(
)
+
"Impl"
)
)
.
findFirst
(
)
.
orElse
(
elt
.
getClass
(
)
)
;
final
Optional
<
String
>
implicit
=
elt
.
isImplicit
(
)
?
Optional
.
of
(
"(implicit)"
)
:
Optional
.
empty
(
)
;
final
Optional
<
String
>
role
=
currRole
==
null
?
Optional
.
empty
(
)
:
Optional
.
of
(
"(role: "
+
currRole
+
")"
)
;
return
new
TreeNodeLabel
(
cl
.
getSimpleName
(
)
,
cl
.
getName
(
)
,
implicit
,
role
,
adds
)
;
}
