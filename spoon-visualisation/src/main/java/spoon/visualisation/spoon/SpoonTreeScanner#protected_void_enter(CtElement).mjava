@Override
protected
void
enter
(
final
CtElement
elt
)
{
level
++
;
String
label
=
elt
.
getClass
(
)
.
getSimpleName
(
)
.
replaceAll
(
"Impl$"
,
""
)
;
final
SourcePosition
pos
=
elt
.
getPosition
(
)
;
final
List
<
Integer
>
lines
;
if
(
pos
.
isValidPosition
(
)
)
{
lines
=
List
.
of
(
pos
.
getSourceStart
(
)
,
pos
.
getSourceEnd
(
)
)
;
}
else
{
lines
=
List
.
of
(
)
;
}
if
(
elt
.
isImplicit
(
)
)
{
label
=
" (implicit)"
;
}
if
(
currRole
!=
null
)
{
label
=
" (role: "
+
currRole
+
")"
;
}
if
(
elt
instanceof
CtType
<
?
>
)
{
printer
.
accept
(
level
,
label
+
": "
+
(
(
CtType
<
?
>
)
elt
)
.
getSimpleName
(
)
,
lines
)
;
return
;
}
if
(
elt
instanceof
CtNamedElement
)
{
printer
.
accept
(
level
,
label
+
": "
+
(
(
CtNamedElement
)
elt
)
.
getSimpleName
(
)
,
lines
)
;
return
;
}
if
(
elt
instanceof
CtReference
)
{
printer
.
accept
(
level
,
label
+
": "
+
(
(
CtReference
)
elt
)
.
getSimpleName
(
)
,
lines
)
;
return
;
}
if
(
elt
instanceof
CtVariableAccess
<
?
>
)
{
final
CtVariableAccess
<
?
>
varaccess
=
(
CtVariableAccess
<
?
>
)
elt
;
final
String
txt
=
": "
+
(
(
varaccess
.
getVariable
(
)
!=
null
)
?
varaccess
.
getVariable
(
)
.
getSimpleName
(
)
:
"(null)"
)
;
printer
.
accept
(
level
,
label
+
txt
,
lines
)
;
return
;
}
if
(
elt
instanceof
CtTypeAccess
<
?
>
)
{
final
CtTypeAccess
<
?
>
typeaccess
=
(
CtTypeAccess
<
?
>
)
elt
;
final
String
txt
=
": "
+
(
(
typeaccess
.
getAccessedType
(
)
!=
null
)
?
typeaccess
.
getAccessedType
(
)
.
getSimpleName
(
)
:
"(null)"
)
;
printer
.
accept
(
level
,
label
+
txt
,
lines
)
;
return
;
}
if
(
elt
instanceof
CtLiteral
<
?
>
)
{
printer
.
accept
(
level
,
label
+
": "
+
(
(
CtLiteral
<
?
>
)
elt
)
.
getValue
(
)
,
lines
)
;
return
;
}
if
(
elt
instanceof
CtAbstractInvocation
<
?
>
)
{
final
CtAbstractInvocation
<
?
>
invoc
=
(
CtAbstractInvocation
<
?
>
)
elt
;
final
String
txt
=
": "
+
(
(
invoc
.
getExecutable
(
)
!=
null
)
?
invoc
.
getExecutable
(
)
.
getSimpleName
(
)
:
"(null)"
)
;
printer
.
accept
(
level
,
label
+
txt
,
lines
)
;
return
;
}
if
(
elt
instanceof
CtAnnotation
<
?
>
)
{
final
CtAnnotation
<
?
>
annot
=
(
CtAnnotation
<
?
>
)
elt
;
final
String
txt
=
": "
+
(
(
annot
.
getAnnotationType
(
)
!=
null
)
?
annot
.
getAnnotationType
(
)
.
getSimpleName
(
)
:
"(null)"
)
;
printer
.
accept
(
level
,
label
+
txt
,
lines
)
;
return
;
}
printer
.
accept
(
level
,
label
,
lines
)
;
}
