/** 
 * Create an initial text flow for naming the nodes of the Spoon AST.
 * @param label The Spoon element to analyse.
 * @return The created text flow that can be completed with other text elements.
 */
TextFlow
createStdTextFlow
(
final
TreeNodeLabel
label
)
{
final
Hyperlink
classLink
=
new
Hyperlink
(
label
.
className
)
;
final
TextFlow
flow
=
new
TextFlow
(
classLink
)
;
final
String
url
=
"http://spoon.gforge.inria.fr/mvnsites/spoon-core/apidocs/"
+
label
.
fullName
.
replace
(
'.'
,
'/'
)
+
".html"
;
Tooltip
.
install
(
classLink
,
new
Tooltip
(
url
)
)
;
classLink
.
setOnAction
(
evt
->
new
Thread
(
(
)
->
{
final
OpenWebPage
cmd
=
new
OpenWebPage
(
)
;
cmd
.
setUri
(
URI
.
create
(
url
)
)
;
if
(
cmd
.
canDo
(
)
)
{
cmd
.
doIt
(
)
;
}
}
,
"OPEN_SPOON_DOC_THREAD"
)
.
start
(
)
)
;
label
.
implicit
.
ifPresent
(
txt
->
flow
.
getChildren
(
)
.
add
(
new
Text
(
txt
)
)
)
;
label
.
role
.
ifPresent
(
txt
->
flow
.
getChildren
(
)
.
add
(
new
Text
(
txt
)
)
)
;
label
.
additionals
.
ifPresent
(
txt
->
flow
.
getChildren
(
)
.
add
(
new
Text
(
txt
)
)
)
;
return
flow
;
}
