private
void
init
(
String
pomPath
)
{
if
(
decompile
)
{
decompiler
.
decompile
(
jar
.
getAbsolutePath
(
)
)
;
}
if
(
pomPath
!=
null
)
{
File
srcPom
=
new
File
(
pomPath
)
;
if
(
!
srcPom
.
exists
(
)
||
!
srcPom
.
isFile
(
)
)
{
throw
new
SpoonException
(
"Pom "
+
srcPom
.
getPath
(
)
+
" not found."
)
;
}
try
{
pom
=
new
File
(
decompiledRoot
,
"pom.xml"
)
;
Files
.
copy
(
srcPom
.
toPath
(
)
,
pom
.
toPath
(
)
,
REPLACE_EXISTING
)
;
}
catch
(
IOException
e
)
{
throw
new
SpoonException
(
"Unable to write "
+
pom
.
getPath
(
)
)
;
}
try
{
SpoonPom
pomModel
=
new
SpoonPom
(
pom
.
getPath
(
)
,
null
,
MavenLauncher
.
SOURCE_TYPE
.
APP_SOURCE
,
getEnvironment
(
)
)
;
getEnvironment
(
)
.
setComplianceLevel
(
pomModel
.
getSourceVersion
(
)
)
;
String
[
]
classpath
=
pomModel
.
buildClassPath
(
null
,
MavenLauncher
.
SOURCE_TYPE
.
APP_SOURCE
,
LOGGER
,
false
)
;
this
.
getModelBuilder
(
)
.
setSourceClasspath
(
classpath
)
;
}
catch
(
IOException
|
XmlPullParserException
e
)
{
throw
new
SpoonException
(
"Failed to read classpath file."
)
;
}
addInputResource
(
decompiledSrc
.
getAbsolutePath
(
)
)
;
}
else
{
addInputResource
(
decompiledSrc
.
getAbsolutePath
(
)
)
;
}
}
