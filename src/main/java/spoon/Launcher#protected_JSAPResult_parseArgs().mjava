/** 
 * Parses the arguments given by the command line.
 * @param args the command-line arguments as a string array
 * @return the JSAP-presented arguments
 * @throws JSAPException when an error occurs in the argument parsing
 */
protected
JSAPResult
parseArgs
(
)
throws
JSAPException
{
if
(
args
==
null
)
{
throw
new
IllegalStateException
(
"no args, please call setArgs before"
)
;
}
JSAPResult
arguments
=
jsapArgs
.
parse
(
args
)
;
if
(
!
arguments
.
success
(
)
)
{
for
(
java
.
util
.
Iterator
<
?
>
errs
=
arguments
.
getErrorMessageIterator
(
)
;
errs
.
hasNext
(
)
;
)
{
System
.
err
.
println
(
"Error: "
+
errs
.
next
(
)
)
;
}
}
if
(
!
arguments
.
success
(
)
||
arguments
.
getBoolean
(
"help"
)
)
{
System
.
err
.
println
(
)
;
System
.
err
.
println
(
"Usage: java <launcher name> [option(s)]"
)
;
System
.
err
.
println
(
)
;
System
.
err
.
println
(
"Options : "
)
;
System
.
err
.
println
(
)
;
System
.
err
.
println
(
jsapArgs
.
getHelp
(
)
)
;
System
.
exit
(
-
1
)
;
}
return
arguments
;
}
