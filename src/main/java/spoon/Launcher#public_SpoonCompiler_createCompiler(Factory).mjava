/** 
 * Creates a new Spoon Java compiler in order to process and compile Java source code.
 * @param factory the factory this compiler works on
 */
public
SpoonCompiler
createCompiler
(
Factory
factory
)
{
SpoonCompiler
comp
=
new
JDTBasedSpoonCompiler
(
factory
)
;
Environment
env
=
getEnvironment
(
)
;
comp
.
setEncoding
(
getArguments
(
)
.
getString
(
"encoding"
)
)
;
comp
.
setBuildOnlyOutdatedFiles
(
jsapActualArgs
.
getBoolean
(
"buildOnlyOutdatedFiles"
)
)
;
comp
.
setBinaryOutputDirectory
(
jsapActualArgs
.
getFile
(
"destination"
)
)
;
comp
.
setSourceOutputDirectory
(
jsapActualArgs
.
getFile
(
"output"
)
)
;
comp
.
setEncoding
(
jsapActualArgs
.
getString
(
"encoding"
)
)
;
if
(
jsapActualArgs
.
contains
(
"source-classpath"
)
)
{
comp
.
setSourceClasspath
(
jsapActualArgs
.
getString
(
"source-classpath"
)
.
split
(
System
.
getProperty
(
"path.separator"
)
)
)
;
}
env
.
debugMessage
(
"output: "
+
comp
.
getSourceOutputDirectory
(
)
)
;
env
.
debugMessage
(
"destination: "
+
comp
.
getBinaryOutputDirectory
(
)
)
;
env
.
debugMessage
(
"source classpath: "
+
Arrays
.
toString
(
comp
.
getSourceClasspath
(
)
)
)
;
env
.
debugMessage
(
"template classpath: "
+
Arrays
.
toString
(
comp
.
getTemplateClasspath
(
)
)
)
;
return
comp
;
}
