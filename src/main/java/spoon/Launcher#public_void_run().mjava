/** 
 * Runs Spoon using the given compiler, with the given run options. A Spoon run will perform the following tasks: <ol> <li>Pre-compilation (optional): {@link SpoonCompiler#compileInputSources()}.</li> <li>Source model building in the given compiler: {@link SpoonCompiler#build()}.</li> <li>Template model building in the given factory (if any template source is given):  {@link SpoonCompiler#build()}.</li> <li>Model processing with the list of given processors if any: {@link SpoonCompiler#process(List)}.</li> <li>Processed Source code printing and generation (can be disabled with {@link OutputType#NO_OUTPUT}): {@link SpoonCompiler#generateProcessedSourceFiles(OutputType)}.</li> <li>Processed source code compilation (optional): {@link SpoonCompiler#compile()}.</li> </ol>
 */
@Override
public
void
run
(
)
{
Environment
env
=
modelBuilder
.
getFactory
(
)
.
getEnvironment
(
)
;
env
.
reportProgressMessage
(
"running Spoon..."
)
;
env
.
reportProgressMessage
(
"start processing..."
)
;
long
t
=
0
;
long
tstart
=
System
.
currentTimeMillis
(
)
;
buildModel
(
)
;
process
(
)
;
prettyprint
(
)
;
if
(
jsapActualArgs
.
getBoolean
(
"compile"
)
)
{
modelBuilder
.
compile
(
)
;
}
t
=
System
.
currentTimeMillis
(
)
;
env
.
debugMessage
(
"program spooning done in "
+
(
t
-
tstart
)
+
" ms"
)
;
env
.
reportEnd
(
)
;
}
