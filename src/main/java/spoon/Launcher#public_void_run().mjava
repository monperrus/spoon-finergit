/** 
 * Starts the Spoon processing.
 */
public
void
run
(
)
throws
Exception
{
JSAPResult
args
=
getArguments
(
)
;
Environment
env
=
Spoon
.
createEnvironment
(
)
;
Factory
factory
=
Spoon
.
createFactory
(
env
)
;
Spoon
.
initEnvironment
(
env
,
args
.
getInt
(
"compliance"
)
,
args
.
getBoolean
(
"verbose"
)
,
args
.
getBoolean
(
"debug"
)
,
args
.
getFile
(
"properties"
)
,
args
.
getBoolean
(
"imports"
)
,
args
.
getInt
(
"tabsize"
)
,
args
.
getBoolean
(
"tabs"
)
,
args
.
getBoolean
(
"fragments"
)
,
args
.
getFile
(
"output"
)
)
;
env
.
reportProgressMessage
(
"Spoon version 2.0"
)
;
env
.
debugMessage
(
"loading command-line arguments: "
+
Arrays
.
asList
(
this
.
args
)
)
;
processArguments
(
factory
)
;
SpoonCompiler
compiler
=
Spoon
.
run
(
factory
,
arguments
.
getBoolean
(
"precompile"
)
,
OutputType
.
valueOf
(
args
.
getString
(
"output-type"
)
)
,
args
.
getFile
(
"output"
)
,
getProcessorTypes
(
)
,
arguments
.
getBoolean
(
"compile"
)
,
args
.
getFile
(
"destination"
)
,
args
.
getBoolean
(
"buildOnlyOutdatedFiles"
)
,
args
.
getString
(
"source-classpath"
)
,
args
.
getString
(
"template-classpath"
)
,
getInputSources
(
)
,
getTemplateSources
(
)
)
;
if
(
getArguments
(
)
.
getBoolean
(
"gui"
)
)
{
new
SpoonModelTree
(
compiler
.
getFactory
(
)
)
;
}
}
