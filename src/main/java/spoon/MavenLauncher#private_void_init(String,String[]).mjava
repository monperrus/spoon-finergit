private
void
init
(
String
mavenProject
,
String
[
]
classpath
)
{
File
mavenProjectFile
=
new
File
(
mavenProject
)
;
if
(
!
mavenProjectFile
.
exists
(
)
)
{
throw
new
SpoonException
(
mavenProject
+
" does not exist."
)
;
}
try
{
model
=
InheritanceModel
.
readPOM
(
mavenProject
,
null
,
sourceType
,
getEnvironment
(
)
)
;
}
catch
(
Exception
e
)
{
throw
new
SpoonException
(
"Unable to read the pom"
,
e
)
;
}
if
(
model
==
null
)
{
throw
new
SpoonException
(
"Unable to create the model, pom not found?"
)
;
}
if
(
SOURCE_TYPE
.
APP_SOURCE
==
sourceType
||
SOURCE_TYPE
.
ALL_SOURCE
==
sourceType
)
{
List
<
File
>
sourceDirectories
=
model
.
getSourceDirectories
(
)
;
for
(
File
sourceDirectory
:
sourceDirectories
)
{
this
.
addInputResource
(
sourceDirectory
.
getAbsolutePath
(
)
)
;
}
}
if
(
SOURCE_TYPE
.
TEST_SOURCE
==
sourceType
||
SOURCE_TYPE
.
ALL_SOURCE
==
sourceType
)
{
List
<
File
>
testSourceDirectories
=
model
.
getTestDirectories
(
)
;
for
(
File
sourceDirectory
:
testSourceDirectories
)
{
this
.
addInputResource
(
sourceDirectory
.
getAbsolutePath
(
)
)
;
}
}
if
(
classpath
==
null
)
{
classpath
=
buildClassPath
(
mvnHome
,
mavenProject
,
sourceType
)
;
}
this
.
getModelBuilder
(
)
.
setSourceClasspath
(
classpath
)
;
this
.
getEnvironment
(
)
.
setComplianceLevel
(
model
.
getSourceVersion
(
)
)
;
}
