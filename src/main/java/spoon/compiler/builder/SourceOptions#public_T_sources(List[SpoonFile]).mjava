/** 
 * adds the given  {@link spoon.compiler.SpoonFile} as sources 
 */
public
T
sources
(
List
<
SpoonFile
>
sources
)
{
if
(
sources
==
null
||
sources
.
isEmpty
(
)
)
{
args
.
add
(
"."
)
;
return
myself
;
}
for
(
SpoonFile
source
:
sources
)
{
if
(
source
.
isActualFile
(
)
)
{
args
.
add
(
source
.
toString
(
)
)
;
}
else
{
try
{
File
file
=
File
.
createTempFile
(
source
.
getName
(
)
,
".java"
)
;
file
.
deleteOnExit
(
)
;
try
(
FileOutputStream
fileOutputStream
=
new
FileOutputStream
(
file
)
)
{
IOUtils
.
copy
(
source
.
getContent
(
)
,
fileOutputStream
)
;
}
args
.
add
(
file
.
toString
(
)
)
;
}
catch
(
IOException
e
)
{
throw
new
RuntimeException
(
e
.
getMessage
(
)
,
e
)
;
}
}
}
return
myself
;
}
