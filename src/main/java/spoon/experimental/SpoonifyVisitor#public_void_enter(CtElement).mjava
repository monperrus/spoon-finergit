public
void
enter
(
CtElement
element
)
{
if
(
element
instanceof
CtPackageReference
&&
isLeafTypeReference
(
element
.
getParent
(
)
)
)
{
return
;
}
tabs
++
;
String
elementClass
=
element
.
getClass
(
)
.
getSimpleName
(
)
;
if
(
elementClass
.
endsWith
(
"Impl"
)
)
{
elementClass
=
elementClass
.
replace
(
"Impl"
,
""
)
;
}
String
variableName
=
null
;
if
(
isLeafTypeReference
(
element
)
)
{
CtTypeReference
typeRef
=
(
CtTypeReference
)
element
;
if
(
typeRef
.
isPrimitive
(
)
)
{
switch
(
typeRef
.
getSimpleName
(
)
)
{
case
"int"
:
variableName
=
"factory.Type().INTEGER_PRIMITIVE"
;
break
;
case
"char"
:
variableName
=
"factory.Type().CHARACTER_PRIMITIVE"
;
break
;
default
:
variableName
=
"factory.Type()."
+
typeRef
.
getSimpleName
(
)
.
toUpperCase
(
)
+
"_PRIMITIVE"
;
}
}
else
if
(
typeRef
.
getSimpleName
(
)
.
equals
(
"<nulltype>"
)
)
{
variableName
=
"factory.Type().NULL_TYPE"
;
}
else
if
(
typeRef
.
getPackage
(
)
.
isImplicit
(
)
)
{
variableName
=
"factory.Type().createSimplyQualifiedReference(\""
+
typeRef
.
getQualifiedName
(
)
+
"\")"
;
}
else
{
variableName
=
"factory.Type().createReference(\""
+
typeRef
.
getQualifiedName
(
)
+
"\")"
;
}
}
else
{
variableName
=
getVariableName
(
elementClass
)
;
result
.
append
(
printTabs
(
)
+
elementClass
+
" "
+
variableName
+
" = factory.create"
+
elementClass
.
replaceFirst
(
"Ct"
,
""
)
+
"();"
)
;
result
.
append
(
"\n"
)
;
if
(
element
.
isImplicit
(
)
)
{
result
.
append
(
printTabs
(
)
+
variableName
+
".setImplicit(true);\n"
)
;
}
propertyScanner
.
variableName
=
variableName
;
element
.
accept
(
propertyScanner
)
;
}
if
(
element
.
isParentInitialized
(
)
&&
!
parentName
.
isEmpty
(
)
)
{
CtRole
elementRoleInParent
=
element
.
getRoleInParent
(
)
;
CtElement
parent
=
element
.
getParent
(
)
;
Object
o
=
parent
.
getValueByRole
(
elementRoleInParent
)
;
if
(
o
instanceof
Map
)
{
handleContainer
(
element
,
parent
,
elementRoleInParent
,
variableName
,
"Map"
)
;
}
else
if
(
o
instanceof
List
)
{
handleContainer
(
element
,
parent
,
elementRoleInParent
,
variableName
,
"List"
)
;
}
else
if
(
o
instanceof
Set
)
{
handleContainer
(
element
,
parent
,
elementRoleInParent
,
variableName
,
"Set"
)
;
}
else
{
result
.
append
(
printTabs
(
)
+
parentName
.
peek
(
)
+
".setValueByRole(CtRole."
+
elementRoleInParent
.
name
(
)
+
", "
+
variableName
+
");\n"
)
;
}
}
parentName
.
push
(
variableName
)
;
roleContainer
.
push
(
new
HashMap
<
>
(
)
)
;
}
