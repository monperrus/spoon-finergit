/** 
 * Get the list of dependencies available in the local maven repository
 * @param isLib: If false take dependency of the main project; if true, take dependencies of a library of the project
 * @return the list of  dependencies
 */
private
TreeDependency
getTreeDependency
(
boolean
isLib
,
Set
<
TreeDependency
>
hierarchy
)
{
String
groupId
=
extractVariable
(
model
.
getGroupId
(
)
)
;
String
artifactId
=
extractVariable
(
model
.
getArtifactId
(
)
)
;
String
version
=
extractVersion
(
groupId
,
artifactId
,
model
.
getVersion
(
)
)
;
TreeDependency
dependence
=
new
TreeDependency
(
groupId
,
artifactId
,
version
,
model
.
getPackaging
(
)
,
m2RepositoryPath
)
;
if
(
hierarchy
.
contains
(
dependence
)
)
{
return
dependence
;
}
hierarchy
.
add
(
dependence
)
;
if
(
this
.
parent
!=
null
)
{
dependence
.
addDependence
(
this
.
parent
.
getTreeDependency
(
isLib
,
hierarchy
)
)
;
}
List
<
Dependency
>
dependencies
=
model
.
getDependencies
(
)
;
for
(
Dependency
dependency
:
dependencies
)
{
dependence
.
addDependence
(
getTreeDependency
(
dependency
,
isLib
,
hierarchy
)
)
;
}
if
(
!
isLib
)
{
for
(
InheritanceModel
module
:
modules
)
{
if
(
module
.
model
.
getGroupId
(
)
==
null
)
{
module
.
model
.
setGroupId
(
groupId
)
;
}
if
(
module
.
model
.
getVersion
(
)
==
null
)
{
module
.
model
.
setVersion
(
version
)
;
}
dependence
.
addDependence
(
module
.
getTreeDependency
(
isLib
,
hierarchy
)
)
;
}
}
return
dependence
;
}
