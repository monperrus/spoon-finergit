private
void
init
(
Model
model
,
InheritanceModel
parent
,
File
directory
)
{
if
(
parent
==
null
&&
model
.
getParent
(
)
!=
null
)
{
try
{
File
parentPath
=
new
File
(
directory
,
model
.
getParent
(
)
.
getRelativePath
(
)
)
;
this
.
parent
=
readPOM
(
parentPath
.
getPath
(
)
,
null
,
m2RepositoryPath
,
sourceType
,
environment
)
;
if
(
this
.
parent
==
null
)
{
this
.
parent
=
this
.
readPom
(
model
.
getParent
(
)
.
getGroupId
(
)
,
model
.
getParent
(
)
.
getArtifactId
(
)
,
model
.
getParent
(
)
.
getVersion
(
)
)
;
if
(
this
.
model
.
getGroupId
(
)
==
null
&&
this
.
parent
!=
null
)
{
this
.
model
.
setGroupId
(
this
.
parent
.
model
.
getGroupId
(
)
)
;
}
if
(
this
.
model
.
getVersion
(
)
==
null
&&
this
.
parent
!=
null
)
{
this
.
model
.
setVersion
(
this
.
parent
.
model
.
getVersion
(
)
)
;
}
}
}
catch
(
Exception
e
)
{
Launcher
.
LOGGER
.
error
(
"Parent model cannot be resolved: "
+
e
.
getMessage
(
)
,
e
)
;
}
}
DependencyManagement
dependencyManagement
=
model
.
getDependencyManagement
(
)
;
if
(
dependencyManagement
!=
null
)
{
List
<
Dependency
>
dependencies
=
dependencyManagement
.
getDependencies
(
)
;
for
(
Dependency
dependency
:
dependencies
)
{
if
(
"import"
.
equals
(
dependency
.
getScope
(
)
)
)
{
InheritanceModel
pom
=
readPom
(
dependency
.
getGroupId
(
)
,
dependency
.
getArtifactId
(
)
,
dependency
.
getVersion
(
)
)
;
if
(
pom
!=
null
)
{
for
(
String
depKey
:
pom
.
dependencyManagements
.
keySet
(
)
)
{
if
(
!
dependencyManagements
.
containsKey
(
depKey
)
)
{
dependencyManagements
.
put
(
depKey
,
pom
.
dependencyManagements
.
get
(
depKey
)
)
;
}
}
}
}
else
{
String
depKey
=
dependency
.
getGroupId
(
)
+
":"
+
dependency
.
getArtifactId
(
)
;
if
(
!
dependencyManagements
.
containsKey
(
depKey
)
)
{
dependencyManagements
.
put
(
depKey
,
extractVersion
(
dependency
.
getGroupId
(
)
,
dependency
.
getArtifactId
(
)
,
dependency
.
getVersion
(
)
)
)
;
}
}
}
}
}
