/** 
 * @param factory already loaded factory with all Spoon model types
 */
protected
Metamodel
(
Factory
factory
)
{
for
(
String
apiPackage
:
MODEL_IFACE_PACKAGES
)
{
if
(
factory
.
Package
(
)
.
get
(
apiPackage
)
==
null
)
{
throw
new
SpoonException
(
"Spoon Factory model is missing API package "
+
apiPackage
)
;
}
String
implPackage
=
replaceApiToImplPackage
(
apiPackage
)
;
if
(
factory
.
Package
(
)
.
get
(
implPackage
)
==
null
)
{
throw
new
SpoonException
(
"Spoon Factory model is missing implementation package "
+
implPackage
)
;
}
}
factory
.
getModel
(
)
.
filterChildren
(
new
TypeFilter
<
>
(
CtInterface
.
class
)
)
.
forEach
(
(
CtInterface
<
?
>
iface
)
->
{
if
(
MODEL_IFACE_PACKAGES
.
contains
(
iface
.
getPackage
(
)
.
getQualifiedName
(
)
)
)
{
getOrCreateConcept
(
iface
)
;
}
}
)
;
}
