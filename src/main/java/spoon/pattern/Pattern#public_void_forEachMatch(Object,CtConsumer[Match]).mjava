/** 
 * Finds all target program sub-trees that correspond to a template and calls consumer.accept(Match)
 * @param input the root of to be searched AST
 * @param consumer the receiver of matches
 */
public
void
forEachMatch
(
Object
input
,
CtConsumer
<
Match
>
consumer
)
{
if
(
input
==
null
)
{
return
;
}
if
(
input
.
getClass
(
)
.
isArray
(
)
)
{
input
=
Arrays
.
asList
(
(
Object
[
]
)
input
)
;
}
MatchingScanner
scanner
=
new
MatchingScanner
(
modelValueResolver
,
consumer
)
;
if
(
input
instanceof
Collection
<
?
>
)
{
scanner
.
scan
(
null
,
(
Collection
<
CtElement
>
)
input
)
;
}
else
if
(
input
instanceof
Map
)
{
scanner
.
scan
(
null
,
(
Map
<
String
,
?
>
)
input
)
;
}
else
{
scanner
.
scan
(
null
,
(
CtElement
)
input
)
;
}
}
