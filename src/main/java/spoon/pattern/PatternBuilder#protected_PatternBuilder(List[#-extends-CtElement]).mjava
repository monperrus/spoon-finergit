protected
PatternBuilder
(
List
<
?
CtElement
>
template
)
{
if
(
template
==
null
)
{
throw
new
SpoonException
(
"Cannot create a Pattern from an null model"
)
;
}
this
.
templateTypeRef
=
getDeclaringTypeRef
(
template
)
;
this
.
patternModel
=
Collections
.
unmodifiableList
(
new
ArrayList
<
>
(
template
)
)
;
this
.
valueConvertor
=
new
ValueConvertorImpl
(
)
;
patternNodes
=
ElementNode
.
create
(
this
.
patternModel
,
patternElementToSubstRequests
)
;
patternQuery
=
new
PatternBuilder
.
PatternQuery
(
getFactory
(
)
.
Query
(
)
,
patternModel
)
;
if
(
this
.
templateTypeRef
!=
null
)
{
configurePatternParameters
(
pb
->
{
pb
.
parameter
(
TARGET_TYPE
)
.
byType
(
this
.
templateTypeRef
)
.
setValueType
(
CtTypeReference
.
class
)
;
}
)
;
}
}
