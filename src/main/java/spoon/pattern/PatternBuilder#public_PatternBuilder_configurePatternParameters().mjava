/** 
 * All the variable references, whose variables are out of the template model are automatically marked as pattern parameters
 * @return this to support fluent API
 */
public
PatternBuilder
configurePatternParameters
(
)
{
configurePatternParameters
(
pb
->
{
pb
.
setConflictResolutionMode
(
ConflictResolutionMode
.
KEEP_OLD_NODE
)
;
pb
.
queryModel
(
)
.
filterChildren
(
new
TypeFilter
<
>
(
CtVariableReference
.
class
)
)
.
forEach
(
(
CtVariableReference
<
?
>
varRef
)
->
{
CtVariable
<
?
>
var
=
varRef
.
getDeclaration
(
)
;
if
(
var
==
null
||
isInModel
(
var
)
==
false
)
{
ParameterInfo
parameter
=
pb
.
parameter
(
varRef
.
getSimpleName
(
)
)
.
getCurrentParameter
(
)
;
pb
.
addSubstitutionRequest
(
parameter
,
varRef
)
;
}
}
)
;
}
)
;
return
this
;
}
