void
modifyNodeOfAttributeOfElement
(
CtElement
element
,
CtRole
role
,
ConflictResolutionMode
conflictMode
,
Function
<
RootNode
,
RootNode
>
elementNodeChanger
)
{
modifyNodeOfElement
(
element
,
conflictMode
,
node
->
{
if
(
node
instanceof
ElementNode
)
{
ElementNode
elementNode
=
(
ElementNode
)
node
;
RootNode
oldAttrNode
=
elementNode
.
getNodeOfRole
(
role
)
;
RootNode
newAttrNode
=
elementNodeChanger
.
apply
(
oldAttrNode
)
;
if
(
newAttrNode
==
null
)
{
throw
new
SpoonException
(
"Removing of Node is not supported"
)
;
}
handleConflict
(
conflictMode
,
oldAttrNode
,
newAttrNode
,
(
tobeUsedNode
)
->
{
elementNode
.
setNodeOfRole
(
role
,
tobeUsedNode
)
;
}
)
;
return
node
;
}
if
(
conflictMode
==
ConflictResolutionMode
.
KEEP_OLD_NODE
)
{
return
node
;
}
throw
new
SpoonException
(
"The Node of atttribute of element cannot be set because element has a Node of class: "
+
node
.
getClass
(
)
.
getName
(
)
)
;
}
)
;
}
