void
modifyNodeOfElement
(
CtElement
element
,
ConflictResolutionMode
conflictMode
,
Function
<
RootNode
,
RootNode
>
elementNodeChanger
)
{
RootNode
oldNode
=
patternElementToSubstRequests
.
get
(
element
)
;
RootNode
newNode
=
elementNodeChanger
.
apply
(
oldNode
)
;
if
(
newNode
==
null
)
{
throw
new
SpoonException
(
"Removing of Node is not supported"
)
;
}
handleConflict
(
conflictMode
,
oldNode
,
newNode
,
(
tobeUsedNode
)
->
{
if
(
patternNodes
.
replaceNode
(
oldNode
,
tobeUsedNode
)
==
false
)
{
if
(
conflictMode
==
ConflictResolutionMode
.
KEEP_OLD_NODE
)
{
return
;
}
throw
new
SpoonException
(
"Old node was not found"
)
;
}
patternElementToSubstRequests
.
put
(
element
,
tobeUsedNode
)
;
}
)
;
}
