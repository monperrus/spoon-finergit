private
<
T
extends
CtElement
>
List
<
T
>
getByFilter
(
Filter
<
T
>
filter
)
{
List
<
T
>
elements
=
patternType
.
filterChildren
(
filter
)
.
list
(
)
;
if
(
elements
==
null
||
elements
.
isEmpty
(
)
)
{
throw
new
SpoonException
(
"Element not found in "
+
patternType
.
getShortRepresentation
(
)
)
;
}
return
elements
;
}
