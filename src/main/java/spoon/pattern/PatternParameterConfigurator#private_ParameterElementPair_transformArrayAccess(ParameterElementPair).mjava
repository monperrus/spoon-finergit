/** 
 * for input `element` expression `X` in expression `X[Y]` it returns expression `X[Y]` and registers extra  {@link ListParameterInfo} to the parameter assigned to `X`
 * @param pep pair of parameter and element which has to be transformed
 * @return
 */
private
ParameterElementPair
transformArrayAccess
(
ParameterElementPair
pep
)
{
CtElement
element
=
pep
.
element
;
if
(
element
.
isParentInitialized
(
)
)
{
CtElement
parent
=
element
.
getParent
(
)
;
if
(
parent
instanceof
CtArrayAccess
<
?
,
?
>
)
{
CtArrayAccess
<
?
,
?
>
arrayAccess
=
(
CtArrayAccess
<
?
,
?
>
)
parent
;
CtExpression
<
?
>
expr
=
arrayAccess
.
getIndexExpression
(
)
;
if
(
expr
instanceof
CtLiteral
<
?
>
)
{
CtLiteral
<
?
>
idxLiteral
=
(
CtLiteral
<
?
>
)
expr
;
Object
idx
=
idxLiteral
.
getValue
(
)
;
if
(
idx
instanceof
Number
)
{
return
new
ParameterElementPair
(
new
ListParameterInfo
(
(
(
Number
)
idx
)
.
intValue
(
)
,
pep
.
parameter
)
,
arrayAccess
)
;
}
}
}
}
return
pep
;
}
