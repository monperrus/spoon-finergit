/** 
 * @return an invocation of {@link TemplateParameter#S()} if it is parent of `element`
 */
private
ParameterElementPair
transformTemplateParameterInvocationOfS
(
ParameterElementPair
pep
)
{
CtElement
element
=
pep
.
element
;
if
(
element
.
isParentInitialized
(
)
)
{
CtElement
parent
=
element
.
getParent
(
)
;
if
(
parent
instanceof
CtInvocation
<
?
>
)
{
CtInvocation
<
?
>
invocation
=
(
CtInvocation
<
?
>
)
parent
;
CtExecutableReference
<
?
>
executableRef
=
invocation
.
getExecutable
(
)
;
if
(
executableRef
.
getSimpleName
(
)
.
equals
(
"S"
)
)
{
if
(
TemplateParameter
.
class
.
getName
(
)
.
equals
(
executableRef
.
getDeclaringType
(
)
.
getQualifiedName
(
)
)
)
{
return
pep
.
copyAndSet
(
invocation
)
;
}
}
}
}
return
pep
;
}
