/** 
 * each invocation of `method` will be replaces by parameter value
 * @param method the method whose invocation has to be substituted
 * @return {@link PatternParameterConfigurator} to support fluent API
 */
public
PatternParameterConfigurator
byInvocation
(
CtMethod
<
?
>
method
)
{
ParameterInfo
pi
=
getCurrentParameter
(
)
;
queryModel
(
)
.
filterChildren
(
new
InvocationFilter
(
method
)
)
.
forEach
(
(
CtInvocation
<
?
>
inv
)
->
{
addSubstitutionRequest
(
pi
,
inv
)
;
}
)
;
return
this
;
}
