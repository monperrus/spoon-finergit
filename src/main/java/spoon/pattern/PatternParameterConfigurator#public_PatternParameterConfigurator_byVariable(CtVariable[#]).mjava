/** 
 * variable read/write of `variable`
 * @param variable a variable whose references will be substituted
 * @return {@link PatternParameterConfigurator} to support fluent API
 */
public
PatternParameterConfigurator
byVariable
(
CtVariable
<
?
>
variable
)
{
ParameterInfo
pi
=
getCurrentParameter
(
)
;
CtQueryable
root
=
queryModel
(
)
;
if
(
patternBuilder
.
isInModel
(
variable
)
)
{
root
=
variable
;
}
root
.
map
(
new
VariableReferenceFunction
(
variable
)
)
.
forEach
(
(
CtVariableReference
<
?
>
varRef
)
->
{
addSubstitutionRequest
(
pi
,
varRef
)
;
}
)
;
return
this
;
}
