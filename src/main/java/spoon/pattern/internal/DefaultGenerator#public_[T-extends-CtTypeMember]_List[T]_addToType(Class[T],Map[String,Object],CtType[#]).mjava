@Override
public
<
T
extends
CtTypeMember
>
List
<
T
>
addToType
(
Class
<
T
>
valueType
,
Map
<
String
,
Object
>
params
,
CtType
<
?
>
targetType
)
{
List
<
T
>
results
=
generate
(
valueType
,
new
ImmutableMapImpl
(
params
,
PatternBuilder
.
TARGET_TYPE
,
targetType
.
getReference
(
)
)
)
;
for
(
T
result
:
results
)
{
if
(
result
instanceof
CtTypeMember
)
{
targetType
.
addTypeMember
(
(
CtTypeMember
)
result
)
;
}
}
return
results
;
}
