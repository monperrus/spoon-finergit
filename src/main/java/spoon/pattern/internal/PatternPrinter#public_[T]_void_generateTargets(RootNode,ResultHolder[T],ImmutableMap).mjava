@Override
public
<
T
>
void
generateTargets
(
RootNode
node
,
ResultHolder
<
T
>
result
,
ImmutableMap
parameters
)
{
int
firstResultIdx
=
result
.
getResults
(
)
.
size
(
)
;
if
(
node
instanceof
InlineNode
)
{
(
(
InlineNode
)
node
)
.
generateInlineTargets
(
this
,
result
,
parameters
)
;
}
else
{
super
.
generateTargets
(
node
,
result
,
parameters
)
;
}
T
firstResult
=
getFirstResult
(
result
,
firstResultIdx
)
;
if
(
firstResult
instanceof
CtElement
)
{
if
(
node
instanceof
ElementNode
)
{
ElementNode
elementNode
=
(
ElementNode
)
node
;
List
<
ParamOnElement
>
paramsOnElement
=
new
ArrayList
<
>
(
)
;
for
(
Map
.
Entry
<
MetamodelProperty
,
RootNode
>
e
:
elementNode
.
getRoleToNode
(
)
.
entrySet
(
)
)
{
MetamodelProperty
mmField
=
e
.
getKey
(
)
;
foreachNode
(
e
.
getValue
(
)
,
attrNode
->
{
if
(
attrNode
instanceof
ConstantNode
||
attrNode
instanceof
ElementNode
)
{
return
;
}
paramsOnElement
.
add
(
new
ParamOnElement
(
(
CtElement
)
firstResult
,
mmField
.
getRole
(
)
,
attrNode
)
)
;
}
)
;
}
addParameterCommentTo
(
(
CtElement
)
firstResult
,
paramsOnElement
.
toArray
(
new
ParamOnElement
[
]
)
)
;
}
else
if
(
node
instanceof
ParameterNode
)
{
addParameterCommentTo
(
(
CtElement
)
firstResult
,
new
ParamOnElement
(
(
CtElement
)
firstResult
,
node
)
)
;
}
}
}
