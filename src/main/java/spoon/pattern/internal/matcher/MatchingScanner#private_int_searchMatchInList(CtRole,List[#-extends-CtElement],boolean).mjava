private
int
searchMatchInList
(
CtRole
role
,
List
<
?
CtElement
>
list
,
boolean
scanChildren
)
{
int
matchCount
=
0
;
if
(
list
.
size
(
)
>
0
)
{
TobeMatched
tobeMatched
=
TobeMatched
.
create
(
new
ImmutableMapImpl
(
)
,
ContainerKind
.
LIST
,
list
)
;
while
(
tobeMatched
.
hasTargets
(
)
)
{
TobeMatched
nextTobeMatched
=
pattern
.
matchAllWith
(
tobeMatched
)
;
if
(
nextTobeMatched
!=
null
)
{
List
<
?
>
matchedTargets
=
tobeMatched
.
getMatchedTargets
(
nextTobeMatched
)
;
if
(
matchedTargets
.
size
(
)
>
0
)
{
matchCount
++
;
matchConsumer
.
accept
(
new
Match
(
matchedTargets
,
nextTobeMatched
.
getParameters
(
)
)
)
;
tobeMatched
=
nextTobeMatched
.
copyAndSetParams
(
new
ImmutableMapImpl
(
)
)
;
continue
;
}
}
if
(
scanChildren
)
{
super
.
scan
(
role
,
tobeMatched
.
getTargets
(
)
.
get
(
0
)
)
;
}
tobeMatched
=
tobeMatched
.
removeTarget
(
0
)
;
}
}
return
matchCount
;
}
