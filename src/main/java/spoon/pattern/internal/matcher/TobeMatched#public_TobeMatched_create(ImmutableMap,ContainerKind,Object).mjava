/** 
 * @param parameters to be matched parameters
 * @param containerKind the type of container in `target` value
 * @param target the to be matched target data. List, Set, Map or single value
 * @return new instance of {@link TobeMatched}, which contains `parameters` and `target` mapped using containerKind
 */
public
static
TobeMatched
create
(
ImmutableMap
parameters
,
ContainerKind
containerKind
,
Object
target
)
{
switch
(
containerKind
)
{
case
LIST
:
return
new
TobeMatched
(
parameters
,
(
List
<
Object
>
)
target
,
true
)
;
case
SET
:
return
new
TobeMatched
(
parameters
,
(
Set
<
Object
>
)
target
,
false
)
;
case
MAP
:
return
new
TobeMatched
(
parameters
,
(
Map
<
String
,
Object
>
)
target
)
;
case
SINGLE
:
return
new
TobeMatched
(
parameters
,
target
)
;
}
throw
new
SpoonException
(
"Unexpected RoleHandler containerKind: "
+
containerKind
)
;
}
