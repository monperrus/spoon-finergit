/** 
 * Same like  {@link #create(CtElement,Map)} but with {@link List} of elements or primitive objects
 * @param objects List of objects which has to be transformed to nodes
 * @param patternElementToSubstRequests mapping between {@link CtElement} from `objects` to created `node`
 * @return a list of trees of nodes, which reflects list of `objects`
 */
public
static
ListOfNodes
create
(
List
<
?
>
objects
,
Map
<
CtElement
,
RootNode
>
patternElementToSubstRequests
)
{
if
(
objects
==
null
)
{
objects
=
Collections
.
emptyList
(
)
;
}
return
listOfNodesToNode
(
objects
.
stream
(
)
.
map
(
i
->
create
(
i
,
patternElementToSubstRequests
)
)
.
collect
(
Collectors
.
toList
(
)
)
)
;
}
