@Override
public
<
T
>
void
generateInlineTargets
(
DefaultGenerator
generator
,
ResultHolder
<
T
>
result
,
ImmutableMap
parameters
)
{
CtStatement
resultStmt
=
null
;
CtStatement
lastElse
=
null
;
CtIf
lastIf
=
null
;
for
(
CaseNode
caseNode
:
cases
)
{
CtStatement
stmt
=
generator
.
generateSingleTarget
(
caseNode
,
parameters
,
CtStatement
.
class
)
;
if
(
stmt
instanceof
CtIf
)
{
CtIf
ifStmt
=
(
CtIf
)
stmt
;
if
(
lastIf
==
null
)
{
resultStmt
=
ifStmt
;
lastIf
=
ifStmt
;
}
else
{
lastIf
.
setElseStatement
(
ifStmt
)
;
lastIf
=
ifStmt
;
}
}
else
{
if
(
lastElse
!=
null
)
{
throw
new
SpoonException
(
"Only one SwitchNode can have no expression."
)
;
}
lastElse
=
stmt
;
}
}
if
(
lastIf
==
null
)
{
if
(
lastElse
!=
null
)
{
result
.
addResult
(
(
T
)
lastElse
)
;
}
return
;
}
if
(
lastElse
!=
null
)
{
lastIf
.
setElseStatement
(
lastElse
)
;
}
result
.
addResult
(
(
T
)
resultStmt
)
;
}
