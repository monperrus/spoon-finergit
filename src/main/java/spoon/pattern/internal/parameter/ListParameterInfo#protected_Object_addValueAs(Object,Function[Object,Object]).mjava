@Override
protected
Object
addValueAs
(
Object
container
,
Function
<
Object
,
Object
>
merger
)
{
List
<
Object
>
list
=
castTo
(
container
,
List
.
class
)
;
Object
existingValue
=
getExistingValue
(
list
)
;
Object
newValue
=
merger
.
apply
(
existingValue
)
;
if
(
newValue
==
NO_MERGE
)
{
return
NO_MERGE
;
}
if
(
existingValue
==
newValue
)
{
return
list
;
}
if
(
newValue
==
null
)
{
return
list
;
}
List
<
Object
>
newList
=
new
ArrayList
<
>
(
list
.
size
(
)
+
1
)
;
newList
.
addAll
(
list
)
;
if
(
idx
>=
0
)
{
while
(
idx
>=
newList
.
size
(
)
)
{
newList
.
add
(
null
)
;
}
newList
.
set
(
idx
,
newValue
)
;
}
else
{
if
(
newValue
instanceof
Collection
)
{
newList
.
addAll
(
(
Collection
)
newValue
)
;
}
else
{
newList
.
add
(
newValue
)
;
}
}
return
Collections
.
unmodifiableList
(
newList
)
;
}
