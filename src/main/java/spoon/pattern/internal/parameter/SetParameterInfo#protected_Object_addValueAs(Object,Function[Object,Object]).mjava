@Override
protected
Object
addValueAs
(
Object
container
,
Function
<
Object
,
Object
>
merger
)
{
Set
<
Object
>
set
=
castTo
(
container
,
Set
.
class
)
;
Object
newValue
=
merger
.
apply
(
null
)
;
if
(
newValue
==
NO_MERGE
)
{
return
NO_MERGE
;
}
if
(
newValue
==
null
)
{
return
set
;
}
if
(
set
.
contains
(
newValue
)
)
{
return
set
;
}
Set
<
Object
>
newSet
=
new
LinkedHashSet
<
>
(
set
.
size
(
)
+
1
)
;
newSet
.
addAll
(
set
)
;
if
(
newValue
instanceof
Collection
)
{
if
(
newSet
.
addAll
(
(
Collection
)
newValue
)
==
false
)
{
return
set
;
}
}
else
{
newSet
.
add
(
newValue
)
;
}
return
Collections
.
unmodifiableSet
(
newSet
)
;
}
