/** 
 * Empty constructor only for all processors (invoked by Spoon).
 */
@SuppressWarnings("unchecked")
public
AbstractAnnotationProcessor
(
)
{
super
(
)
;
clearProcessedElementType
(
)
;
for
(
Method
m
:
getClass
(
)
.
getMethods
(
)
)
{
if
(
m
.
getName
(
)
.
equals
(
"process"
)
&&
m
.
getParameterTypes
(
)
.
length
==
2
)
{
Class
c
=
m
.
getParameterTypes
(
)
[
0
]
;
if
(
inferConsumedAnnotationType
(
)
&&
Annotation
.
class
!=
c
)
{
addConsumedAnnotationType
(
(
Class
<
?
A
>
)
c
)
;
}
c
=
m
.
getParameterTypes
(
)
[
1
]
;
if
(
CtElement
.
class
!=
c
)
{
addProcessedElementType
(
(
Class
<
?
CtElement
>
)
c
)
;
}
}
}
if
(
inferConsumedAnnotationType
(
)
&&
processedAnnotationTypes
.
isEmpty
(
)
)
{
addProcessedAnnotationType
(
(
Class
<
?
A
>
)
Annotation
.
class
)
;
}
if
(
processedElementTypes
.
isEmpty
(
)
)
{
addProcessedElementType
(
CtElement
.
class
)
;
}
}
