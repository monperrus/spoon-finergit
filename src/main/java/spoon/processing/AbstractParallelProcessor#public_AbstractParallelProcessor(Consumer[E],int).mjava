/** 
 * Creates a new AbstractParallelProcessor from given consumer. The processors must follow the guidelines given in the class description.
 * @param processFunction    Represents an operation that accepts a singleelement E and returns no result.
 * @param numberOfProcessors number of concurrent running processors.
 * @throws IllegalArgumentException if numberOfProcessors is less than 1.
 */
public
AbstractParallelProcessor
(
Consumer
<
E
>
processFunction
,
int
numberOfProcessors
)
{
processorQueue
=
new
ArrayBlockingQueue
<
>
(
numberOfProcessors
)
;
for
(
int
i
=
0
;
i
<
numberOfProcessors
;
i
++
)
{
processorQueue
.
add
(
new
AbstractProcessor
<
E
>
(
)
{
@Override
public
void
process
(
E
element
)
{
processFunction
.
accept
(
element
)
;
}
}
)
;
}
service
=
Executors
.
newFixedThreadPool
(
numberOfProcessors
)
;
}
