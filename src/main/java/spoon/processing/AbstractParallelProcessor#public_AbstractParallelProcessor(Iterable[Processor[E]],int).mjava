/** 
 * Creates a new AbstractParallelProcessor from given iterable. The processors must follow the guidelines given in the class description.
 * @param processors         iterable of processors.
 * @param numberOfProcessors number consumed from the iterable added to theactive processors.
 * @throws SpoonException           if iterable has less values thennumberOfProcessors.
 * @throws IllegalArgumentException if numberOfProcessors is less than 1.
 */
public
AbstractParallelProcessor
(
Iterable
<
Processor
<
E
>
>
processors
,
int
numberOfProcessors
)
{
processorQueue
=
new
ArrayBlockingQueue
<
>
(
numberOfProcessors
)
;
service
=
Executors
.
newFixedThreadPool
(
numberOfProcessors
)
;
Iterator
<
Processor
<
E
>
>
it
=
processors
.
iterator
(
)
;
for
(
int
i
=
0
;
i
<
numberOfProcessors
;
i
++
)
{
if
(
!
it
.
hasNext
(
)
)
{
throw
new
SpoonException
(
"not enough elements provided, iterable is already empty"
)
;
}
processorQueue
.
add
(
it
.
next
(
)
)
;
}
}
