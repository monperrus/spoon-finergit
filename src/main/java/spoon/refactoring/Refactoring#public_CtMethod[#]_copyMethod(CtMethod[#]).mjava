/** 
 * See doc in  {@link CtMethod#copyMethod()} 
 */
public
static
CtMethod
<
?
>
copyMethod
(
final
CtMethod
<
?
>
method
)
{
CtMethod
<
?
>
clone
=
method
.
clone
(
)
;
String
tentativeTypeName
=
method
.
getSimpleName
(
)
+
"Copy"
;
CtType
parent
=
method
.
getParent
(
CtType
.
class
)
;
while
(
parent
.
getMethodsByName
(
tentativeTypeName
)
.
size
(
)
>
0
)
{
tentativeTypeName
=
"X"
;
}
final
String
cloneMethodName
=
tentativeTypeName
;
clone
.
setSimpleName
(
cloneMethodName
)
;
parent
.
addMethod
(
clone
)
;
new
CtScanner
(
)
{
@Override
public
<
T
>
void
visitCtExecutableReference
(
CtExecutableReference
<
T
>
reference
)
{
CtExecutable
<
T
>
declaration
=
reference
.
getDeclaration
(
)
;
if
(
declaration
==
null
)
{
return
;
}
if
(
declaration
==
method
)
{
reference
.
setSimpleName
(
cloneMethodName
)
;
}
if
(
reference
.
getDeclaration
(
)
!=
clone
)
{
throw
new
SpoonException
(
"post condition broken "
+
reference
)
;
}
super
.
visitCtExecutableReference
(
reference
)
;
}
}
.
scan
(
clone
)
;
return
clone
;
}
