/** 
 * Enters and creates a new  {@link SymbolicStackFrame}, which is pushed on the top of the stack.
 * @param caller the invocation that starts this new frame
 * @param target the target of the invocation (to be <code>this</code>, see {@link #getThis()})
 * @param executable the entered executable
 * @param variables the variables accessible from the frame (invocation's parameters)
 */
public
void
enterFrame
(
CtAbstractInvocation
<
?
>
caller
,
SymbolicInstance
<
?
>
target
,
CtExecutableReference
<
?
>
executable
,
List
<
SymbolicInstance
<
?
>
>
arguments
,
Map
<
CtVariableReference
<
?
>
,
SymbolicInstance
<
?
>
>
variables
)
{
frameStack
.
push
(
new
SymbolicStackFrame
(
caller
,
frameStack
.
isEmpty
(
)
?
null
:
frameStack
.
peek
(
)
.
getThis
(
)
,
target
,
executable
,
arguments
,
variables
)
)
;
}
