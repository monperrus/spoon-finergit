/** 
 * Gets/creates a symbolic value of a given type (automatically stored in the heap).
 * @param < T > the actual type if known
 * @param concreteType the type reference
 * @return the symbolic value for the type
 */
public
<
T
>
SymbolicInstance
<
T
>
getType
(
SymbolicEvaluator
evaluator
,
CtTypeReference
<
T
>
concreteType
)
{
SymbolicInstance
<
T
>
type
=
get
(
SymbolicInstance
.
getSymbolId
(
concreteType
,
"type"
)
)
;
if
(
type
==
null
)
{
type
=
new
SymbolicInstance
<
T
>
(
evaluator
,
concreteType
,
true
)
;
store
(
type
)
;
}
return
type
;
}
