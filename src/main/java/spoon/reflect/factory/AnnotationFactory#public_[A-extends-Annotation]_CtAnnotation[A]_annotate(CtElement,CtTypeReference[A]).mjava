/** 
 * Adds an annotation to an element.
 * @param element the program element to annotate
 * @param annotationType the annotation type
 * @return the concerned annotation
 */
public
<
A
extends
Annotation
>
CtAnnotation
<
A
>
annotate
(
CtElement
element
,
CtTypeReference
<
A
>
annotationType
)
{
CtAnnotationType
<
A
>
ctAnnotationType
=
(
(
CtAnnotationType
<
A
>
)
annotationType
.
getDeclaration
(
)
)
;
boolean
isRepeatable
=
false
;
if
(
ctAnnotationType
!=
null
)
{
isRepeatable
=
(
ctAnnotationType
.
getAnnotation
(
factory
.
Type
(
)
.
createReference
(
Repeatable
.
class
)
)
!=
null
)
;
}
CtAnnotation
<
A
>
annotation
=
element
.
getAnnotation
(
annotationType
)
;
if
(
annotation
==
null
||
isRepeatable
)
{
annotation
=
factory
.
Core
(
)
.
createAnnotation
(
)
;
annotation
.
setAnnotationType
(
factory
.
Core
(
)
.
clone
(
annotationType
)
)
;
element
.
addAnnotation
(
annotation
)
;
}
return
annotation
;
}
