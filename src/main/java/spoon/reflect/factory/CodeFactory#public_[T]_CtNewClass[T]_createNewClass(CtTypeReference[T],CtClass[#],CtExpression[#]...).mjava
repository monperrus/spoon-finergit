/** 
 * Creates a new class with an anonymous class.
 * @param type the decelerating type of the constructor.
 * @param anonymousClass Anonymous class in the new class.
 * @param parameters the arguments of the constructor call.
 * @param < T > the actual type of the decelerating type of the constructor if available/
 * @return the new class.
 */
public
<
T
>
CtNewClass
<
T
>
createNewClass
(
CtTypeReference
<
T
>
type
,
CtClass
<
?
>
anonymousClass
,
CtExpression
<
?
>
...
parameters
)
{
CtNewClass
<
T
>
ctNewClass
=
factory
.
Core
(
)
.
createNewClass
(
)
;
CtExecutableReference
<
T
>
executableReference
=
factory
.
Constructor
(
)
.
createReference
(
type
,
parameters
)
;
ctNewClass
.
setArguments
(
Arrays
.
asList
(
parameters
)
)
;
ctNewClass
.
setExecutable
(
executableReference
)
;
ctNewClass
.
setAnonymousClass
(
anonymousClass
)
;
anonymousClass
.
setSimpleName
(
"0"
)
;
return
ctNewClass
;
}
