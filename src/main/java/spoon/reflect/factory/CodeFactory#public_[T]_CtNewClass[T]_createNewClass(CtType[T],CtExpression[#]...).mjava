/** 
 * Creates a new anonymous class.
 */
public
<
T
>
CtNewClass
<
T
>
createNewClass
(
CtType
<
T
>
superClass
,
CtExpression
<
?
>
...
parameters
)
{
CtNewClass
<
T
>
ctNewClass
=
factory
.
Core
(
)
.
createNewClass
(
)
;
CtConstructor
<
T
>
constructor
=
(
(
CtClass
)
superClass
)
.
getConstructor
(
Arrays
.
stream
(
parameters
)
.
map
(
x
->
x
.
getType
(
)
)
.
toArray
(
CtTypeReference
[
]
::
new
)
)
;
if
(
constructor
==
null
)
{
throw
new
SpoonException
(
"no appropriate constructor for these parameters "
+
Arrays
.
toString
(
parameters
)
)
;
}
CtExecutableReference
<
T
>
executableReference
=
constructor
.
getReference
(
)
;
ctNewClass
.
setArguments
(
Arrays
.
asList
(
parameters
)
)
;
ctNewClass
.
setExecutable
(
executableReference
)
;
CtClass
c
=
superClass
.
getFactory
(
)
.
createClass
(
)
;
c
.
setSuperclass
(
superClass
.
getReference
(
)
)
;
c
.
setSimpleName
(
"0"
)
;
ctNewClass
.
setAnonymousClass
(
c
)
;
return
ctNewClass
;
}
