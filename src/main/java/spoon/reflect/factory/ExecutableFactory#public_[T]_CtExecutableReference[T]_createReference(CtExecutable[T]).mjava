/** 
 * Creates an executable reference from an existing executable.
 */
public
<
T
>
CtExecutableReference
<
T
>
createReference
(
CtExecutable
<
T
>
e
)
{
CtTypeReference
<
?
>
refs
=
new
CtTypeReference
[
]
;
int
i
=
0
;
for
(
CtParameter
<
?
>
param
:
e
.
getParameters
(
)
)
{
refs
[
i
++
]
=
param
.
getType
(
)
.
clone
(
)
;
}
if
(
e
instanceof
CtMethod
)
{
return
createReference
(
(
(
CtMethod
<
T
>
)
e
)
.
getDeclaringType
(
)
.
getReference
(
)
,
(
(
CtMethod
<
T
>
)
e
)
.
getType
(
)
.
clone
(
)
,
e
.
getSimpleName
(
)
,
refs
)
;
}
else
if
(
e
instanceof
CtLambda
)
{
return
createReference
(
null
,
e
.
getType
(
)
,
e
.
getSimpleName
(
)
,
refs
)
;
}
return
createReference
(
(
(
CtConstructor
<
T
>
)
e
)
.
getDeclaringType
(
)
.
getReference
(
)
,
(
(
CtConstructor
<
T
>
)
e
)
.
getType
(
)
.
clone
(
)
,
CtExecutableReference
.
CONSTRUCTOR_NAME
,
refs
)
;
}
