/** 
 * Creates an executable reference from its signature, as defined by the executable reference's toString.
 */
public
<
T
>
CtExecutableReference
<
T
>
createReference
(
String
signature
)
{
CtExecutableReference
<
T
>
executableRef
=
factory
.
Core
(
)
.
createExecutableReference
(
)
;
String
type
=
signature
.
substring
(
0
,
signature
.
indexOf
(
" "
)
)
;
String
declaringType
=
signature
.
substring
(
signature
.
indexOf
(
" "
)
+
1
,
signature
.
indexOf
(
CtExecutable
.
EXECUTABLE_SEPARATOR
)
)
;
String
executableName
=
signature
.
substring
(
signature
.
indexOf
(
CtExecutable
.
EXECUTABLE_SEPARATOR
)
+
1
,
signature
.
indexOf
(
"("
)
)
;
executableRef
.
setSimpleName
(
executableName
)
;
executableRef
.
setDeclaringType
(
factory
.
Type
(
)
.
createReference
(
declaringType
)
)
;
CtTypeReference
<
T
>
typeRef
=
factory
.
Type
(
)
.
createReference
(
type
)
;
executableRef
.
setType
(
typeRef
)
;
String
parameters
=
signature
.
substring
(
signature
.
indexOf
(
"("
)
+
1
,
signature
.
indexOf
(
")"
)
)
;
StringTokenizer
t
=
new
StringTokenizer
(
parameters
,
","
)
;
while
(
t
.
hasMoreTokens
(
)
)
{
String
paramType
=
t
.
nextToken
(
)
;
executableRef
.
addParameterType
(
factory
.
Type
(
)
.
createReference
(
paramType
)
)
;
}
return
executableRef
;
}
