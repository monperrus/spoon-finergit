/** 
 * Creates a reference to a simple type
 */
public
<
T
>
CtTypeReference
<
T
>
createReference
(
Class
<
T
>
type
,
boolean
includingFormalTypeParameter
)
{
if
(
type
==
null
)
{
return
null
;
}
if
(
type
.
isArray
(
)
)
{
CtArrayTypeReference
<
T
>
array
=
factory
.
Core
(
)
.
createArrayTypeReference
(
)
;
array
.
setComponentType
(
createReference
(
type
.
getComponentType
(
)
,
includingFormalTypeParameter
)
)
;
return
array
;
}
CtTypeReference
typeReference
=
createReference
(
type
.
getName
(
)
)
;
if
(
includingFormalTypeParameter
)
{
for
(
TypeVariable
<
Class
<
T
>
>
generic
:
type
.
getTypeParameters
(
)
)
{
typeReference
.
addActualTypeArgument
(
createTypeParameterReference
(
generic
.
getName
(
)
)
)
;
}
}
return
typeReference
;
}
