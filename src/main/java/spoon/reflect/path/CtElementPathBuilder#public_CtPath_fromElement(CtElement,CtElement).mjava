/** 
 * Build path to a CtElement el, from one of its parent.
 * @throws CtPathException is thrown when root is not a parent of el.
 * @param el : the element to which the CtPath leads to
 * @param root : Starting point of the CtPath
 * @return CtPath from root to el
 */
public
CtPath
fromElement
(
CtElement
el
,
CtElement
root
)
throws
CtPathException
{
CtPathImpl
path
=
new
CtPathImpl
(
)
;
CtElement
cur
=
el
;
while
(
cur
!=
root
)
{
CtElement
parent
=
cur
.
getParent
(
)
;
CtRole
role
=
cur
.
getRoleInParent
(
)
;
if
(
role
==
null
)
{
throw
new
CtPathException
(
)
;
}
RoleHandler
roleHandler
=
RoleHandlerHelper
.
getOptionalRoleHandler
(
parent
.
getClass
(
)
,
role
)
;
if
(
roleHandler
==
null
)
{
throw
new
CtPathException
(
)
;
}
CtPathElement
pathElement
=
new
CtRolePathElement
(
role
)
;
switch
(
roleHandler
.
getContainerKind
(
)
)
{
case
SINGLE
:
break
;
case
LIST
:
{
if
(
useNamesInPath
)
{
String
[
]
pair
=
getArg
(
cur
)
;
String
attrName
=
pair
[
0
]
;
String
name
=
pair
[
1
]
;
if
(
name
!=
null
)
{
if
(
role
.
getSubRoles
(
)
.
size
(
)
>
0
)
{
role
=
role
.
getMatchingSubRoleFor
(
cur
)
;
pathElement
=
new
CtRolePathElement
(
role
)
;
}
pathElement
.
addArgument
(
attrName
,
name
)
;
List
<
CtElement
>
list
=
roleHandler
.
asList
(
parent
)
;
List
<
CtElement
>
filteredList
=
new
ArrayList
<
>
(
)
;
int
index
=
-
1
;
for
(
CtElement
item
:
list
)
{
String
[
]
pair2
=
getArg
(
item
)
;
String
attrName2
=
pair2
[
0
]
;
String
name2
=
pair2
[
1
]
;
if
(
Objects
.
equals
(
name
,
name2
)
&&
Objects
.
equals
(
attrName
,
attrName2
)
)
{
if
(
item
==
cur
)
{
index
=
filteredList
.
size
(
)
;
}
filteredList
.
add
(
item
)
;
}
}
if
(
filteredList
.
size
(
)
>
1
&&
index
>=
0
)
{
pathElement
.
addArgument
(
"index"
,
String
.
valueOf
(
index
)
)
;
}
break
;
}
}
List
list
=
roleHandler
.
asList
(
parent
)
;
int
index
=
0
;
for
(
Object
o
:
list
)
{
if
(
o
==
cur
)
{
break
;
}
index
++
;
}
pathElement
.
addArgument
(
"index"
,
index
+
""
)
;
break
;
}
case
SET
:
{
String
name
;
if
(
cur
instanceof
CtNamedElement
)
{
name
=
(
(
CtNamedElement
)
cur
)
.
getSimpleName
(
)
;
}
else
if
(
cur
instanceof
CtReference
)
{
name
=
(
(
CtReference
)
cur
)
.
getSimpleName
(
)
;
}
else
{
throw
new
CtPathException
(
)
;
}
pathElement
.
addArgument
(
"name"
,
name
)
;
break
;
}
case
MAP
:
{
Map
map
=
roleHandler
.
asMap
(
parent
)
;
String
key
=
null
;
for
(
Object
o
:
map
.
keySet
(
)
)
{
if
(
map
.
get
(
o
)
==
cur
)
{
key
=
(
String
)
o
;
break
;
}
}
if
(
key
==
null
)
{
throw
new
CtPathException
(
)
;
}
else
{
pathElement
.
addArgument
(
"key"
,
key
)
;
}
break
;
}
}
cur
=
parent
;
path
.
addFirst
(
pathElement
)
;
}
return
path
;
}
