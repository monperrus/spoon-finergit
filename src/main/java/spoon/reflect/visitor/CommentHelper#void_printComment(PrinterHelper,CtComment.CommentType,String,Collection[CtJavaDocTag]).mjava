static
void
printComment
(
PrinterHelper
printer
,
CtComment
.
CommentType
commentType
,
String
content
,
Collection
<
CtJavaDocTag
>
javaDocTags
)
{
switch
(
commentType
)
{
case
FILE
:
printer
.
write
(
JAVADOC_START
)
.
writeln
(
)
;
break
;
case
JAVADOC
:
printer
.
write
(
JAVADOC_START
)
.
writeln
(
)
;
break
;
case
INLINE
:
printer
.
write
(
INLINE_COMMENT_START
)
;
break
;
case
BLOCK
:
printer
.
write
(
BLOCK_COMMENT_START
)
;
break
;
}
switch
(
commentType
)
{
case
INLINE
:
printer
.
write
(
content
)
;
break
;
default
:
String
[
]
lines
=
LINE_SEPARATORS_RE
.
split
(
content
)
;
for
(
int
i
=
0
;
i
<
lines
.
length
;
i
++
)
{
String
com
=
lines
[
i
]
;
if
(
commentType
==
CtComment
.
CommentType
.
BLOCK
)
{
printer
.
write
(
com
)
;
if
(
lines
.
length
>
1
)
{
printer
.
writeln
(
)
;
}
}
else
{
if
(
!
com
.
isEmpty
(
)
)
{
printer
.
write
(
COMMENT_STAR
+
com
)
.
writeln
(
)
;
}
else
{
printer
.
write
(
" *"
+
com
)
.
writeln
(
)
;
}
}
}
if
(
javaDocTags
!=
null
&&
javaDocTags
.
isEmpty
(
)
==
false
)
{
printer
.
write
(
" *"
)
.
writeln
(
)
;
for
(
CtJavaDocTag
docTag
:
javaDocTags
)
{
printJavaDocTag
(
printer
,
docTag
)
;
}
}
break
;
}
switch
(
commentType
)
{
case
BLOCK
:
printer
.
write
(
BLOCK_COMMENT_END
)
;
break
;
case
FILE
:
printer
.
write
(
BLOCK_COMMENT_END
)
;
break
;
case
JAVADOC
:
printer
.
write
(
BLOCK_COMMENT_END
)
;
break
;
}
}
