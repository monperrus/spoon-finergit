public
<
T
,
A
extends
T
>
void
visitCtOperatorAssignment
(
final
spoon
.
reflect
.
code
.
CtOperatorAssignment
<
T
,
A
>
assignment
)
{
spoon
.
reflect
.
code
.
CtOperatorAssignment
other
=
(
(
spoon
.
reflect
.
code
.
CtOperatorAssignment
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
assignment
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
assignment
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE
,
assignment
.
getType
(
)
,
other
.
getType
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
CAST
,
assignment
.
getTypeCasts
(
)
,
other
.
getTypeCasts
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ASSIGNED
,
assignment
.
getAssigned
(
)
,
other
.
getAssigned
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ASSIGNMENT
,
assignment
.
getAssignment
(
)
,
other
.
getAssignment
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
assignment
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
assignment
)
;
}
