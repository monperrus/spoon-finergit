@java.lang.Override
public
<
T
>
void
visitCtArrayWrite
(
final
spoon
.
reflect
.
code
.
CtArrayWrite
<
T
>
arrayWrite
)
{
spoon
.
reflect
.
code
.
CtArrayWrite
other
=
(
(
spoon
.
reflect
.
code
.
CtArrayWrite
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
arrayWrite
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
arrayWrite
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE
,
arrayWrite
.
getType
(
)
,
other
.
getType
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
CAST
,
arrayWrite
.
getTypeCasts
(
)
,
other
.
getTypeCasts
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TARGET
,
arrayWrite
.
getTarget
(
)
,
other
.
getTarget
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
EXPRESSION
,
arrayWrite
.
getIndexExpression
(
)
,
other
.
getIndexExpression
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
arrayWrite
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
arrayWrite
)
;
}
