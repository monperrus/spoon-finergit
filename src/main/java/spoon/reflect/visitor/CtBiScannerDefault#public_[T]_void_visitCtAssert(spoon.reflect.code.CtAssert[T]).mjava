public
<
T
>
void
visitCtAssert
(
final
spoon
.
reflect
.
code
.
CtAssert
<
T
>
asserted
)
{
spoon
.
reflect
.
code
.
CtAssert
other
=
(
(
spoon
.
reflect
.
code
.
CtAssert
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
asserted
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
asserted
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
CONDITION
,
asserted
.
getAssertExpression
(
)
,
other
.
getAssertExpression
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
EXPRESSION
,
asserted
.
getExpression
(
)
,
other
.
getExpression
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
asserted
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
asserted
)
;
}
