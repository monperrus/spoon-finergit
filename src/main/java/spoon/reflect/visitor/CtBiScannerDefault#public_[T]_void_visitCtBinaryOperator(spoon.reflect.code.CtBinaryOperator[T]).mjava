public
<
T
>
void
visitCtBinaryOperator
(
final
spoon
.
reflect
.
code
.
CtBinaryOperator
<
T
>
operator
)
{
spoon
.
reflect
.
code
.
CtBinaryOperator
other
=
(
(
spoon
.
reflect
.
code
.
CtBinaryOperator
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
operator
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
operator
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE
,
operator
.
getType
(
)
,
other
.
getType
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
CAST
,
operator
.
getTypeCasts
(
)
,
other
.
getTypeCasts
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
LEFT_OPERAND
,
operator
.
getLeftHandOperand
(
)
,
other
.
getLeftHandOperand
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
RIGHT_OPERAND
,
operator
.
getRightHandOperand
(
)
,
other
.
getRightHandOperand
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
operator
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
operator
)
;
}
