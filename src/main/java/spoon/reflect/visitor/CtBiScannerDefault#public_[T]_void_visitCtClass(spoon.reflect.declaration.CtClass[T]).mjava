public
<
T
>
void
visitCtClass
(
final
spoon
.
reflect
.
declaration
.
CtClass
<
T
>
ctClass
)
{
spoon
.
reflect
.
declaration
.
CtClass
other
=
(
(
spoon
.
reflect
.
declaration
.
CtClass
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
ctClass
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
ctClass
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
SUPER_TYPE
,
ctClass
.
getSuperclass
(
)
,
other
.
getSuperclass
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
INTERFACE
,
ctClass
.
getSuperInterfaces
(
)
,
other
.
getSuperInterfaces
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE_PARAMETER
,
ctClass
.
getFormalCtTypeParameters
(
)
,
other
.
getFormalCtTypeParameters
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE_MEMBER
,
ctClass
.
getTypeMembers
(
)
,
other
.
getTypeMembers
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
ctClass
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
ctClass
)
;
}
