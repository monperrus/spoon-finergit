@java.lang.Override
public
<
T
>
void
visitCtFieldWrite
(
final
spoon
.
reflect
.
code
.
CtFieldWrite
<
T
>
fieldWrite
)
{
spoon
.
reflect
.
code
.
CtFieldWrite
other
=
(
(
spoon
.
reflect
.
code
.
CtFieldWrite
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
fieldWrite
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
fieldWrite
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
CAST
,
fieldWrite
.
getTypeCasts
(
)
,
other
.
getTypeCasts
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TARGET
,
fieldWrite
.
getTarget
(
)
,
other
.
getTarget
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
VARIABLE
,
fieldWrite
.
getVariable
(
)
,
other
.
getVariable
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
fieldWrite
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
fieldWrite
)
;
}
