public
<
T
>
void
visitCtInterface
(
final
spoon
.
reflect
.
declaration
.
CtInterface
<
T
>
intrface
)
{
spoon
.
reflect
.
declaration
.
CtInterface
other
=
(
(
spoon
.
reflect
.
declaration
.
CtInterface
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
intrface
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
intrface
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
INTERFACE
,
intrface
.
getSuperInterfaces
(
)
,
other
.
getSuperInterfaces
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE_PARAMETER
,
intrface
.
getFormalCtTypeParameters
(
)
,
other
.
getFormalCtTypeParameters
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE_MEMBER
,
intrface
.
getTypeMembers
(
)
,
other
.
getTypeMembers
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
intrface
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
intrface
)
;
}
