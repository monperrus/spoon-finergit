public
<
T
>
void
visitCtInvocation
(
final
spoon
.
reflect
.
code
.
CtInvocation
<
T
>
invocation
)
{
spoon
.
reflect
.
code
.
CtInvocation
other
=
(
(
spoon
.
reflect
.
code
.
CtInvocation
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
invocation
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
invocation
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
CAST
,
invocation
.
getTypeCasts
(
)
,
other
.
getTypeCasts
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TARGET
,
invocation
.
getTarget
(
)
,
other
.
getTarget
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
EXECUTABLE_REF
,
invocation
.
getExecutable
(
)
,
other
.
getExecutable
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ARGUMENT
,
invocation
.
getArguments
(
)
,
other
.
getArguments
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
invocation
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
invocation
)
;
}
