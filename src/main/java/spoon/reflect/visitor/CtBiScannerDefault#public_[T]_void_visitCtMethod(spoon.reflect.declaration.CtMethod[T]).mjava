public
<
T
>
void
visitCtMethod
(
final
spoon
.
reflect
.
declaration
.
CtMethod
<
T
>
m
)
{
spoon
.
reflect
.
declaration
.
CtMethod
other
=
(
(
spoon
.
reflect
.
declaration
.
CtMethod
)
(
this
.
stack
.
peek
(
)
)
)
;
enter
(
m
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
ANNOTATION
,
m
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE_PARAMETER
,
m
.
getFormalCtTypeParameters
(
)
,
other
.
getFormalCtTypeParameters
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
TYPE
,
m
.
getType
(
)
,
other
.
getType
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
PARAMETER
,
m
.
getParameters
(
)
,
other
.
getParameters
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
THROWN
,
m
.
getThrownTypes
(
)
,
other
.
getThrownTypes
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
BODY
,
m
.
getBody
(
)
,
other
.
getBody
(
)
)
;
biScan
(
spoon
.
reflect
.
path
.
CtRole
.
COMMENT
,
m
.
getComments
(
)
,
other
.
getComments
(
)
)
;
exit
(
m
)
;
}
