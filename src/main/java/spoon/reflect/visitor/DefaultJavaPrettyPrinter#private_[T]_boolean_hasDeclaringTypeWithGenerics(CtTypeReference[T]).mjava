private
<
T
>
boolean
hasDeclaringTypeWithGenerics
(
CtTypeReference
<
T
>
reference
)
{
if
(
reference
.
getDeclaration
(
)
==
null
)
{
return
false
;
}
if
(
reference
.
getDeclaration
(
)
.
getParent
(
CtMethod
.
class
)
!=
null
)
{
return
false
;
}
if
(
reference
.
getDeclaringType
(
)
==
null
)
{
return
false
;
}
if
(
reference
.
getActualTypeArguments
(
)
.
size
(
)
!=
0
&&
reference
.
getDeclaringType
(
)
.
getActualTypeArguments
(
)
.
size
(
)
==
0
)
{
return
false
;
}
final
CtElement
declaration
=
reference
.
getDeclaringType
(
)
.
getDeclaration
(
)
;
if
(
declaration
==
null
)
{
return
false
;
}
if
(
!
(
declaration
instanceof
CtType
)
)
{
return
false
;
}
return
(
(
CtType
<
?
>
)
declaration
)
.
getFormalTypeParameters
(
)
.
size
(
)
!=
0
;
}
