/** 
 * Check if the this access expression is a target of a private final field in a constructor.
 */
private
<
T
>
boolean
tryToInitializeFinalFieldInConstructor
(
CtThisAccess
<
T
>
thisAccess
)
{
try
{
final
CtElement
parent
=
thisAccess
.
getParent
(
)
;
if
(
!
(
parent
instanceof
CtFieldWrite
)
||
!
thisAccess
.
equals
(
(
(
CtFieldWrite
)
parent
)
.
getTarget
(
)
)
||
thisAccess
.
getParent
(
CtConstructor
.
class
)
==
null
)
{
return
false
;
}
final
CtFieldReference
variable
=
(
(
CtFieldWrite
)
parent
)
.
getVariable
(
)
;
if
(
variable
==
null
)
{
return
false
;
}
final
CtField
declaration
=
variable
.
getDeclaration
(
)
;
if
(
declaration
==
null
)
{
return
true
;
}
return
declaration
.
getModifiers
(
)
.
contains
(
ModifierKind
.
FINAL
)
;
}
catch
(
ParentNotInitializedException
e
)
{
return
false
;
}
}
