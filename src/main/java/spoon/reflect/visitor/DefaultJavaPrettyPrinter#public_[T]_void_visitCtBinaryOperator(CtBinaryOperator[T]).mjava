public
<
T
>
void
visitCtBinaryOperator
(
CtBinaryOperator
<
T
>
operator
)
{
enterCtExpression
(
operator
)
;
boolean
paren
=
false
;
try
{
paren
=
(
operator
.
getParent
(
)
instanceof
CtBinaryOperator
)
||
(
operator
.
getParent
(
)
instanceof
CtUnaryOperator
)
;
}
catch
(
ParentNotInitializedException
ex
)
{
}
if
(
paren
)
{
write
(
"("
)
;
}
scan
(
operator
.
getLeftHandOperand
(
)
)
;
write
(
" "
)
.
writeOperator
(
operator
.
getKind
(
)
)
.
write
(
" "
)
;
scan
(
operator
.
getRightHandOperand
(
)
)
;
if
(
paren
)
{
write
(
")"
)
;
}
exitCtExpression
(
operator
)
;
}
