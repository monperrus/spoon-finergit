@Override
public
<
T
>
void
visitCtClass
(
CtClass
<
T
>
ctClass
)
{
context
.
pushCurrentThis
(
ctClass
.
getReference
(
)
)
;
if
(
ctClass
.
getSimpleName
(
)
!=
null
&&
!
CtType
.
NAME_UNKNOWN
.
equals
(
ctClass
.
getSimpleName
(
)
)
&&
!
ctClass
.
isAnonymous
(
)
)
{
visitCtType
(
ctClass
)
;
if
(
ctClass
.
isLocalType
(
)
)
{
printer
.
write
(
"class "
+
ctClass
.
getSimpleName
(
)
.
replaceAll
(
"^[0-9]*"
,
""
)
)
;
}
else
{
printer
.
write
(
"class "
+
ctClass
.
getSimpleName
(
)
)
;
}
elementPrinterHelper
.
writeFormalTypeParameters
(
ctClass
)
;
elementPrinterHelper
.
writeExtendsClause
(
ctClass
)
;
elementPrinterHelper
.
writeImplementsClause
(
ctClass
)
;
}
printer
.
write
(
" {"
)
.
incTab
(
)
;
elementPrinterHelper
.
writeElementList
(
ctClass
.
getTypeMembers
(
)
)
;
printer
.
decTab
(
)
.
writeTabs
(
)
.
write
(
"}"
)
;
context
.
popCurrentThis
(
)
;
}
