@Override
public
<
T
>
void
visitCtConditional
(
CtConditional
<
T
>
conditional
)
{
enterCtExpression
(
conditional
)
;
CtExpression
<
Boolean
>
condition
=
conditional
.
getCondition
(
)
;
boolean
parent
;
try
{
parent
=
conditional
.
getParent
(
)
instanceof
CtAssignment
||
conditional
.
getParent
(
)
instanceof
CtVariable
;
}
catch
(
ParentNotInitializedException
ex
)
{
parent
=
false
;
}
if
(
parent
)
{
printer
.
writeSeparator
(
"("
)
;
}
scan
(
condition
)
;
if
(
parent
)
{
printer
.
writeSeparator
(
")"
)
;
}
printer
.
writeSpace
(
)
.
writeOperator
(
"?"
)
.
writeSpace
(
)
;
CtExpression
<
T
>
thenExpression
=
conditional
.
getThenExpression
(
)
;
scan
(
thenExpression
)
;
printer
.
writeSpace
(
)
.
writeOperator
(
":"
)
.
writeSpace
(
)
;
CtExpression
<
T
>
elseExpression
=
conditional
.
getElseExpression
(
)
;
boolean
isAssign
;
if
(
(
isAssign
=
elseExpression
instanceof
CtAssignment
)
)
{
printer
.
writeSeparator
(
"("
)
;
}
scan
(
elseExpression
)
;
if
(
isAssign
)
{
printer
.
writeSeparator
(
")"
)
;
}
exitCtExpression
(
conditional
)
;
}
