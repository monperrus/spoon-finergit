@Override
public
<
T
>
void
visitCtEnumValue
(
CtEnumValue
<
T
>
enumValue
)
{
elementPrinterHelper
.
visitCtNamedElement
(
enumValue
,
sourceCompilationUnit
)
;
elementPrinterHelper
.
writeComment
(
enumValue
,
CommentOffset
.
BEFORE
)
;
printer
.
writeIdentifier
(
enumValue
.
getSimpleName
(
)
)
;
if
(
enumValue
.
getDefaultExpression
(
)
!=
null
)
{
CtConstructorCall
<
?
>
constructorCall
=
(
CtConstructorCall
<
?
>
)
enumValue
.
getDefaultExpression
(
)
;
if
(
!
constructorCall
.
isImplicit
(
)
)
{
elementPrinterHelper
.
printList
(
constructorCall
.
getArguments
(
)
,
null
,
false
,
"("
,
false
,
false
,
","
,
true
,
false
,
")"
,
expr
->
scan
(
expr
)
)
;
}
if
(
constructorCall
instanceof
CtNewClass
)
{
scan
(
(
(
CtNewClass
<
?
>
)
constructorCall
)
.
getAnonymousClass
(
)
)
;
}
}
}
