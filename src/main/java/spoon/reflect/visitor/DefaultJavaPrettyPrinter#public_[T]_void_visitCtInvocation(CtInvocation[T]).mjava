public
<
T
>
void
visitCtInvocation
(
CtInvocation
<
T
>
invocation
)
{
enterCtStatement
(
invocation
)
;
enterCtExpression
(
invocation
)
;
if
(
invocation
.
getExecutable
(
)
.
getSimpleName
(
)
.
equals
(
"<init>"
)
)
{
CtType
<
?
>
parentType
=
invocation
.
getParent
(
CtType
.
class
)
;
if
(
parentType
!=
null
&&
parentType
.
getQualifiedName
(
)
!=
null
&&
parentType
.
getQualifiedName
(
)
.
equals
(
invocation
.
getExecutable
(
)
.
getDeclaringType
(
)
.
getQualifiedName
(
)
)
)
{
write
(
"this"
)
;
}
else
{
write
(
"super"
)
;
}
}
else
{
if
(
invocation
.
getExecutable
(
)
.
isStatic
(
)
)
{
CtTypeReference
<
?
>
type
=
invocation
.
getExecutable
(
)
.
getDeclaringType
(
)
;
if
(
isHiddenByField
(
invocation
.
getParent
(
CtType
.
class
)
,
type
)
)
{
importsContext
.
imports
.
remove
(
type
.
getSimpleName
(
)
)
;
}
context
.
ignoreGenerics
=
true
;
scan
(
type
)
;
context
.
ignoreGenerics
=
false
;
write
(
"."
)
;
}
else
if
(
invocation
.
getTarget
(
)
!=
null
)
{
context
.
enterTarget
(
)
;
scan
(
invocation
.
getTarget
(
)
)
;
context
.
exitTarget
(
)
;
write
(
"."
)
;
}
write
(
invocation
.
getExecutable
(
)
.
getSimpleName
(
)
)
;
}
write
(
"("
)
;
boolean
remove
=
false
;
for
(
CtExpression
e
:
invocation
.
getArguments
(
)
)
{
scan
(
e
)
;
write
(
" ,"
)
;
remove
=
true
;
}
if
(
remove
)
removeLastChar
(
)
;
write
(
")"
)
;
exitCtExpression
(
invocation
)
;
}
