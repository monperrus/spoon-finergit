@Override
public
<
T
>
void
visitCtInvocation
(
CtInvocation
<
T
>
invocation
)
{
enterCtStatement
(
invocation
)
;
enterCtExpression
(
invocation
)
;
if
(
invocation
.
getExecutable
(
)
.
isConstructor
(
)
)
{
elementPrinterHelper
.
writeActualTypeArguments
(
invocation
.
getExecutable
(
)
)
;
CtType
<
?
>
parentType
;
try
{
parentType
=
invocation
.
getParent
(
CtType
.
class
)
;
}
catch
(
ParentNotInitializedException
e
)
{
parentType
=
null
;
}
if
(
parentType
==
null
||
parentType
.
getQualifiedName
(
)
!=
null
&&
parentType
.
getQualifiedName
(
)
.
equals
(
invocation
.
getExecutable
(
)
.
getDeclaringType
(
)
.
getQualifiedName
(
)
)
)
{
printer
.
writeKeyword
(
"this"
)
;
}
else
{
if
(
invocation
.
getTarget
(
)
!=
null
&&
!
invocation
.
getTarget
(
)
.
isImplicit
(
)
)
{
scan
(
invocation
.
getTarget
(
)
)
;
printer
.
writeSeparator
(
"."
)
;
}
printer
.
writeKeyword
(
"super"
)
;
}
}
else
{
if
(
invocation
.
getTarget
(
)
!=
null
&&
(
ignoreImplicit
||
!
invocation
.
getTarget
(
)
.
isImplicit
(
)
)
)
{
try
(
Writable
_context
=
context
.
modify
(
)
)
{
if
(
invocation
.
getTarget
(
)
instanceof
CtTypeAccess
)
{
_context
.
ignoreGenerics
(
true
)
;
}
if
(
shouldPrintTarget
(
invocation
.
getTarget
(
)
)
)
{
scan
(
invocation
.
getTarget
(
)
)
;
printer
.
writeSeparator
(
"."
)
;
}
}
}
elementPrinterHelper
.
writeActualTypeArguments
(
invocation
)
;
if
(
env
.
isPreserveLineNumbers
(
)
)
{
getPrinterHelper
(
)
.
adjustStartPosition
(
invocation
)
;
}
printer
.
writeIdentifier
(
invocation
.
getExecutable
(
)
.
getSimpleName
(
)
)
;
}
elementPrinterHelper
.
printList
(
invocation
.
getArguments
(
)
,
null
,
false
,
"("
,
false
,
false
,
","
,
true
,
false
,
")"
,
e
->
scan
(
e
)
)
;
exitCtExpression
(
invocation
)
;
exitCtStatement
(
invocation
)
;
}
