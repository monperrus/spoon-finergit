public
<
T
>
void
visitCtNewClass
(
CtNewClass
<
T
>
newClass
)
{
enterCtStatement
(
newClass
)
;
enterCtExpression
(
newClass
)
;
if
(
newClass
.
getTarget
(
)
!=
null
)
{
scan
(
newClass
.
getTarget
(
)
)
.
write
(
"."
)
;
}
write
(
"new "
)
;
if
(
newClass
.
getAnonymousClass
(
)
.
getSuperclass
(
)
!=
null
)
{
if
(
hasDeclaringTypeWithGenerics
(
newClass
.
getAnonymousClass
(
)
.
getSuperclass
(
)
)
)
{
context
.
ignoreEnclosingClass
=
true
;
}
scan
(
newClass
.
getAnonymousClass
(
)
.
getSuperclass
(
)
)
;
}
else
if
(
newClass
.
getAnonymousClass
(
)
.
getSuperInterfaces
(
)
.
size
(
)
>
0
)
{
for
(
CtTypeReference
<
?
>
ref
:
newClass
.
getAnonymousClass
(
)
.
getSuperInterfaces
(
)
)
{
if
(
hasDeclaringTypeWithGenerics
(
ref
)
)
{
context
.
ignoreEnclosingClass
=
true
;
}
scan
(
ref
)
;
}
}
context
.
ignoreEnclosingClass
=
false
;
write
(
"("
)
;
for
(
CtExpression
<
?
>
exp
:
newClass
.
getArguments
(
)
)
{
scan
(
exp
)
;
write
(
", "
)
;
}
if
(
newClass
.
getArguments
(
)
.
size
(
)
>
0
)
{
removeLastChar
(
)
;
}
write
(
")"
)
;
scan
(
newClass
.
getAnonymousClass
(
)
)
;
exitCtExpression
(
newClass
)
;
}
