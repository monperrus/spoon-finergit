@Override
public
<
T
>
void
visitCtThisAccess
(
CtThisAccess
<
T
>
thisAccess
)
{
try
{
enterCtExpression
(
thisAccess
)
;
CtTypeAccess
target
=
(
CtTypeAccess
)
thisAccess
.
getTarget
(
)
;
CtTypeReference
targetType
=
target
.
getAccessedType
(
)
;
if
(
thisAccess
.
isImplicit
(
)
)
{
return
;
}
if
(
targetType
==
null
||
(
thisAccess
.
getParent
(
CtType
.
class
)
!=
null
&&
thisAccess
.
getParent
(
CtType
.
class
)
.
isTopLevel
(
)
)
)
{
printer
.
writeKeyword
(
"this"
)
;
return
;
}
if
(
targetType
.
isAnonymous
(
)
)
{
printer
.
writeKeyword
(
"this"
)
;
return
;
}
if
(
!
context
.
currentThis
.
isEmpty
(
)
)
{
CtType
lastType
=
context
.
currentThis
.
peekFirst
(
)
.
type
;
String
lastTypeQualifiedName
=
lastType
.
getQualifiedName
(
)
;
String
targetTypeQualifiedName
=
targetType
.
getQualifiedName
(
)
;
if
(
!
lastTypeQualifiedName
.
equals
(
targetTypeQualifiedName
)
)
{
if
(
!
targetType
.
isImplicit
(
)
)
{
visitCtTypeReferenceWithoutGenerics
(
targetType
)
;
printer
.
writeSeparator
(
"."
)
;
}
printer
.
writeKeyword
(
"this"
)
;
return
;
}
}
printer
.
writeKeyword
(
"this"
)
;
}
finally
{
exitCtExpression
(
thisAccess
)
;
}
}
