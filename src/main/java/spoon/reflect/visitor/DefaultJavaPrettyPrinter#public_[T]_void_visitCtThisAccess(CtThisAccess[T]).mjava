@Override
public
<
T
>
void
visitCtThisAccess
(
CtThisAccess
<
T
>
thisAccess
)
{
try
{
enterCtExpression
(
thisAccess
)
;
CtTypeAccess
target
=
(
CtTypeAccess
)
thisAccess
.
getTarget
(
)
;
CtTypeReference
targetType
=
target
.
getAccessedType
(
)
;
if
(
thisAccess
.
isImplicit
(
)
)
{
return
;
}
if
(
targetType
==
null
||
(
thisAccess
.
getParent
(
CtType
.
class
)
!=
null
&&
thisAccess
.
getParent
(
CtType
.
class
)
.
isTopLevel
(
)
)
)
{
printer
.
write
(
"this"
)
;
return
;
}
if
(
targetType
.
isAnonymous
(
)
)
{
printer
.
write
(
"this"
)
;
return
;
}
if
(
context
.
currentThis
.
peekLast
(
)
!=
null
&&
!
context
.
currentThis
.
peekLast
(
)
.
type
.
getQualifiedName
(
)
.
equals
(
targetType
.
getQualifiedName
(
)
)
)
{
printer
.
snapshotLength
(
)
;
visitCtTypeReferenceWithoutGenerics
(
targetType
)
;
if
(
printer
.
hasNewContent
(
)
)
{
printer
.
write
(
"."
)
;
}
printer
.
write
(
"this"
)
;
return
;
}
printer
.
write
(
"this"
)
;
}
finally
{
exitCtExpression
(
thisAccess
)
;
}
}
