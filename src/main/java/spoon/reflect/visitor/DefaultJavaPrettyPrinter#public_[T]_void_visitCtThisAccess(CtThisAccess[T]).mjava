@Override
public
<
T
>
void
visitCtThisAccess
(
CtThisAccess
<
T
>
thisAccess
)
{
enterCtExpression
(
thisAccess
)
;
if
(
thisAccess
.
getTarget
(
)
!=
null
&&
thisAccess
.
getTarget
(
)
instanceof
CtTypeAccess
&&
!
tryToInitializeFinalFieldInConstructor
(
thisAccess
)
&&
!
thisAccess
.
isImplicit
(
)
&&
!
thisAccess
.
getTarget
(
)
.
isImplicit
(
)
)
{
final
CtTypeReference
accessedType
=
(
(
CtTypeAccess
)
thisAccess
.
getTarget
(
)
)
.
getAccessedType
(
)
;
if
(
accessedType
.
isLocalType
(
)
)
{
write
(
accessedType
.
getSimpleName
(
)
.
replaceAll
(
"^[0-9]*"
,
""
)
+
"."
)
;
}
else
if
(
!
accessedType
.
isAnonymous
(
)
)
{
visitCtTypeReferenceWithoutGenerics
(
accessedType
)
;
write
(
"."
)
;
}
}
if
(
!
thisAccess
.
isImplicit
(
)
)
{
write
(
"this"
)
;
}
exitCtExpression
(
thisAccess
)
;
}
