public
<
T
>
void
visitCtTypeReference
(
CtTypeReference
<
T
>
ref
)
{
if
(
ref
.
isPrimitive
(
)
)
{
write
(
ref
.
getSimpleName
(
)
)
;
return
;
}
if
(
importsContext
.
isImported
(
ref
)
&&
ref
.
getPackage
(
)
!=
null
)
{
writeAnnotations
(
ref
)
;
write
(
ref
.
getSimpleName
(
)
)
;
}
else
{
if
(
ref
.
getDeclaringType
(
)
!=
null
)
{
if
(
!
context
.
currentThis
.
contains
(
ref
.
getDeclaringType
(
)
)
||
ref
.
getModifiers
(
)
.
contains
(
ModifierKind
.
STATIC
)
||
hasDeclaringTypeWithGenerics
(
ref
)
)
{
if
(
!
context
.
ignoreEnclosingClass
)
{
boolean
ign
=
context
.
ignoreGenerics
;
context
.
ignoreGenerics
=
false
;
scan
(
ref
.
getDeclaringType
(
)
)
;
write
(
"."
)
;
context
.
ignoreGenerics
=
ign
;
}
}
write
(
ref
.
getSimpleName
(
)
)
;
}
else
{
write
(
ref
.
getQualifiedName
(
)
)
;
}
}
if
(
!
context
.
ignoreGenerics
)
{
writeActualTypeArguments
(
ref
)
;
}
}
