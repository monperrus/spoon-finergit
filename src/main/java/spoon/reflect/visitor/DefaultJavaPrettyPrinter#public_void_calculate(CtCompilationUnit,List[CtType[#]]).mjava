@Override
public
void
calculate
(
CtCompilationUnit
sourceCompilationUnit
,
List
<
CtType
<
?
>
>
types
)
{
reset
(
)
;
if
(
types
.
isEmpty
(
)
)
{
}
else
{
CtType
<
?
>
type
=
types
.
get
(
0
)
;
if
(
sourceCompilationUnit
==
null
)
{
sourceCompilationUnit
=
type
.
getFactory
(
)
.
CompilationUnit
(
)
.
getOrCreate
(
type
)
;
}
if
(
type
.
getPackage
(
)
==
null
)
{
type
.
setParent
(
type
.
getFactory
(
)
.
Package
(
)
.
getRootPackage
(
)
)
;
}
CtPackageReference
packRef
=
type
.
getPackage
(
)
.
getReference
(
)
;
if
(
!
packRef
.
equals
(
sourceCompilationUnit
.
getPackageDeclaration
(
)
.
getReference
(
)
)
)
{
sourceCompilationUnit
.
getPackageDeclaration
(
)
.
setReference
(
packRef
)
;
}
if
(
!
hasSameTypes
(
sourceCompilationUnit
,
types
)
)
{
sourceCompilationUnit
=
sourceCompilationUnit
.
clone
(
)
;
sourceCompilationUnit
.
setDeclaredTypes
(
types
)
;
}
}
applyPreProcessors
(
sourceCompilationUnit
)
;
scan
(
sourceCompilationUnit
)
;
}
