/** 
 * Writes actual type arguments in a  {@link CtActualTypeContainer} element.
 * @param ctGenericElementReference Reference with actual type arguments.
 */
public
void
writeActualTypeArguments
(
CtActualTypeContainer
ctGenericElementReference
)
{
final
Collection
<
CtTypeReference
<
?
>
>
arguments
=
ctGenericElementReference
.
getActualTypeArguments
(
)
;
if
(
arguments
!=
null
&&
!
arguments
.
isEmpty
(
)
)
{
printList
(
arguments
.
stream
(
)
.
filter
(
a
->
!
a
.
isImplicit
(
)
)
::
iterator
,
null
,
false
,
"<"
,
false
,
false
,
","
,
true
,
false
,
">"
,
argument
->
{
if
(
prettyPrinter
.
context
.
forceWildcardGenerics
(
)
)
{
printer
.
writeSeparator
(
"?"
)
;
}
else
{
prettyPrinter
.
scan
(
argument
)
;
}
}
)
;
}
}
