/** 
 * Writes actual type arguments in a  {@link CtActualTypeContainer} element.
 * @param ctGenericElementReference Reference with actual type arguments.
 */
public
void
writeActualTypeArguments
(
CtActualTypeContainer
ctGenericElementReference
)
{
final
Collection
<
CtTypeReference
<
?
>
>
arguments
=
ctGenericElementReference
.
getActualTypeArguments
(
)
;
if
(
arguments
!=
null
&&
arguments
.
size
(
)
>
0
)
{
try
(
ListPrinter
lp
=
printer
.
createListPrinter
(
"<"
,
", "
,
">"
)
)
{
for
(
CtTypeReference
<
?
>
argument
:
arguments
)
{
if
(
!
argument
.
isImplicit
(
)
)
{
lp
.
printSeparatorIfAppropriate
(
)
;
if
(
prettyPrinter
.
context
.
forceWildcardGenerics
(
)
)
{
printer
.
write
(
'?'
)
;
}
else
{
prettyPrinter
.
scan
(
argument
)
;
}
}
}
}
}
}
