/** 
 * Writes an annotation element.
 */
public
void
writeAnnotationElement
(
Factory
factory
,
Object
value
)
{
if
(
value
instanceof
CtTypeAccess
)
{
prettyPrinter
.
scan
(
(
CtTypeAccess
)
value
)
;
printer
.
writeSeparator
(
"."
)
.
writeKeyword
(
"class"
)
;
}
else
if
(
value
instanceof
CtFieldReference
)
{
prettyPrinter
.
scan
(
(
(
CtFieldReference
<
?
>
)
value
)
.
getDeclaringType
(
)
)
;
printer
.
writeSeparator
(
"."
)
.
writeIdentifier
(
(
(
CtFieldReference
<
?
>
)
value
)
.
getSimpleName
(
)
)
;
}
else
if
(
value
instanceof
CtElement
)
{
prettyPrinter
.
scan
(
(
CtElement
)
value
)
;
}
else
if
(
value
instanceof
String
)
{
printer
.
writeLiteral
(
"\""
+
LiteralHelper
.
getStringLiteral
(
(
String
)
value
,
true
)
+
"\""
)
;
}
else
if
(
value
instanceof
Collection
)
{
try
(
ListPrinter
lp
=
createListPrinter
(
false
,
"{"
,
false
,
true
,
","
,
false
,
false
,
"}"
)
)
{
for
(
Object
obj
:
(
Collection
<
?
>
)
value
)
{
lp
.
printSeparatorIfAppropriate
(
)
;
writeAnnotationElement
(
factory
,
obj
)
;
}
}
}
else
if
(
value
instanceof
Object
[
]
)
{
try
(
ListPrinter
lp
=
createListPrinter
(
false
,
"{"
,
false
,
true
,
","
,
false
,
false
,
"}"
)
)
{
for
(
Object
obj
:
(
Object
[
]
)
value
)
{
lp
.
printSeparatorIfAppropriate
(
)
;
writeAnnotationElement
(
factory
,
obj
)
;
}
}
}
else
if
(
value
instanceof
Enum
)
{
try
(
Writable
c
=
prettyPrinter
.
getContext
(
)
.
modify
(
)
.
ignoreGenerics
(
true
)
)
{
prettyPrinter
.
scan
(
factory
.
Type
(
)
.
createReference
(
(
(
Enum
<
?
>
)
value
)
.
getDeclaringClass
(
)
)
)
;
}
printer
.
writeSeparator
(
"."
)
;
printer
.
writeIdentifier
(
value
.
toString
(
)
)
;
}
else
{
printer
.
writeLiteral
(
value
.
toString
(
)
)
;
}
}
