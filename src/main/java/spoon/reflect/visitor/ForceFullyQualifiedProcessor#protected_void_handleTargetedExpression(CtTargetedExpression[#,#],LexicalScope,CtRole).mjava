@Override
protected
void
handleTargetedExpression
(
CtTargetedExpression
<
?
,
?
>
targetedExpression
,
LexicalScope
nameScope
,
CtRole
role
)
{
CtExpression
<
?
>
target
=
targetedExpression
.
getTarget
(
)
;
if
(
!
target
.
isImplicit
(
)
)
{
return
;
}
if
(
target
instanceof
CtThisAccess
)
{
return
;
}
if
(
target
instanceof
CtTypeAccess
)
{
CtTypeAccess
<
?
>
typeAccess
=
(
CtTypeAccess
<
?
>
)
target
;
if
(
isThisAccess
(
typeAccess
)
)
{
return
;
}
if
(
isTypeReferenceToEnclosingType
(
nameScope
,
typeAccess
.
getAccessedType
(
)
)
)
{
return
;
}
}
target
.
setImplicit
(
false
)
;
}
