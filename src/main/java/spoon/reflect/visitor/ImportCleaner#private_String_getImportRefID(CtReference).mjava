/** 
 * @return fast unique identification of reference. It is not the same like printing of import, because it needs to handle access path.
 */
private
static
String
getImportRefID
(
CtReference
ref
)
{
if
(
ref
==
null
)
{
throw
new
SpoonException
(
"Null import refrence"
)
;
}
if
(
ref
instanceof
CtFieldReference
)
{
CtFieldReference
fieldRef
=
(
CtFieldReference
)
ref
;
return
fieldRef
.
getDeclaringType
(
)
.
getQualifiedName
(
)
+
"."
+
fieldRef
.
getSimpleName
(
)
;
}
if
(
ref
instanceof
CtExecutableReference
)
{
CtExecutableReference
execRef
=
(
CtExecutableReference
)
ref
;
return
execRef
.
getDeclaringType
(
)
.
getQualifiedName
(
)
+
"."
+
execRef
.
getSimpleName
(
)
;
}
if
(
ref
instanceof
CtTypeMemberWildcardImportReference
)
{
CtTypeMemberWildcardImportReference
wildRef
=
(
CtTypeMemberWildcardImportReference
)
ref
;
return
wildRef
.
getTypeReference
(
)
.
getQualifiedName
(
)
+
".*"
;
}
if
(
ref
instanceof
CtTypeReference
)
{
CtTypeReference
typeRef
=
(
CtTypeReference
)
ref
;
return
typeRef
.
getQualifiedName
(
)
;
}
throw
new
SpoonException
(
"Unexpected import type: "
+
ref
.
getClass
(
)
)
;
}
