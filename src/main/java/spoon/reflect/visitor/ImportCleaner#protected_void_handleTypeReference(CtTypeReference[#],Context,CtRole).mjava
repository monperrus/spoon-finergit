@Override
protected
void
handleTypeReference
(
CtTypeReference
<
?
>
reference
,
Context
context
,
CtRole
role
)
{
if
(
context
==
null
)
{
return
;
}
if
(
reference
.
isImplicit
(
)
)
{
CtTargetedExpression
<
?
,
?
>
targetedExpr
=
getParentIfType
(
getParentIfType
(
reference
,
CtTypeAccess
.
class
)
,
CtTargetedExpression
.
class
)
;
if
(
targetedExpr
!=
null
)
{
if
(
targetedExpr
instanceof
CtInvocation
<
?
>
)
{
CtInvocation
<
?
>
invocation
=
(
CtInvocation
<
?
>
)
targetedExpr
;
context
.
addImport
(
invocation
.
getExecutable
(
)
)
;
}
else
if
(
targetedExpr
instanceof
CtFieldAccess
<
?
>
)
{
CtFieldAccess
<
?
>
fieldAccess
=
(
CtFieldAccess
<
?
>
)
targetedExpr
;
context
.
addImport
(
fieldAccess
.
getVariable
(
)
)
;
}
}
}
else
if
(
reference
.
isSimplyQualified
(
)
)
{
context
.
addImport
(
reference
)
;
}
}
