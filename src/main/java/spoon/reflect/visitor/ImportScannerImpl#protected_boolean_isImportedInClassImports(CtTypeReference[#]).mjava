protected
boolean
isImportedInClassImports
(
CtTypeReference
<
?
>
ref
)
{
for
(
CtImport
ctImport
:
this
.
usedImport
.
keySet
(
)
)
{
switch
(
ctImport
.
getImportKind
(
)
)
{
case
TYPE
:
if
(
ctImport
.
getReference
(
)
.
equals
(
ref
)
)
{
return
this
.
setImportUsed
(
ctImport
)
;
}
break
;
case
ALL_TYPES
:
String
packQualifiedName
=
ref
.
getPackage
(
)
.
getQualifiedName
(
)
;
String
typeImportQualifiedName
=
ctImport
.
getReference
(
)
.
getSimpleName
(
)
;
typeImportQualifiedName
=
typeImportQualifiedName
.
substring
(
0
,
typeImportQualifiedName
.
lastIndexOf
(
"."
)
)
;
if
(
packQualifiedName
.
equals
(
typeImportQualifiedName
)
)
{
return
this
.
setImportUsed
(
ctImport
)
;
}
break
;
}
}
if
(
targetType
!=
null
)
{
CtPackageReference
pack
=
targetType
.
getPackage
(
)
;
if
(
pack
!=
null
&&
ref
.
getPackage
(
)
!=
null
&&
!
ref
.
getPackage
(
)
.
isUnnamedPackage
(
)
)
{
if
(
!
ref
.
getPackage
(
)
.
getSimpleName
(
)
.
equals
(
"java.lang"
)
)
{
if
(
ref
.
getPackage
(
)
.
getSimpleName
(
)
.
equals
(
pack
.
getSimpleName
(
)
)
)
{
return
true
;
}
}
}
}
if
(
ref
.
equals
(
targetType
)
)
{
return
true
;
}
if
(
!
(
ref
.
isImplicit
(
)
)
&&
classImports
.
containsKey
(
ref
.
getSimpleName
(
)
)
)
{
CtTypeReference
<
?
>
exist
=
classImports
.
get
(
ref
.
getSimpleName
(
)
)
;
if
(
exist
.
getQualifiedName
(
)
.
equals
(
ref
.
getQualifiedName
(
)
)
)
{
return
true
;
}
}
return
false
;
}
