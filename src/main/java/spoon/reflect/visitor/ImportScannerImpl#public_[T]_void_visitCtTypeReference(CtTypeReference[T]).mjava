@Override
public
<
T
>
void
visitCtTypeReference
(
CtTypeReference
<
T
>
reference
)
{
if
(
!
(
reference
instanceof
CtArrayTypeReference
)
)
{
CtTypeReference
typeReference
;
if
(
reference
.
getDeclaringType
(
)
==
null
)
{
typeReference
=
reference
;
}
else
{
typeReference
=
reference
.
getAccessType
(
)
;
if
(
!
typeReference
.
equals
(
reference
)
)
{
for
(
CtImport
ctImport
:
this
.
usedImport
.
keySet
(
)
)
{
switch
(
ctImport
.
getImportKind
(
)
)
{
case
TYPE
:
if
(
ctImport
.
getReference
(
)
.
getSimpleName
(
)
.
equals
(
reference
.
getSimpleName
(
)
)
)
{
this
.
setImportUsed
(
ctImport
)
;
super
.
visitCtTypeReference
(
reference
)
;
}
}
}
}
}
if
(
!
this
.
isTypeInCollision
(
typeReference
,
false
)
)
{
this
.
addClassImport
(
typeReference
)
;
}
}
super
.
visitCtTypeReference
(
reference
)
;
}
