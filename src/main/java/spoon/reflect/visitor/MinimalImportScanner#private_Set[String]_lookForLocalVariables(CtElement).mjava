private
Set
<
String
>
lookForLocalVariables
(
CtElement
parent
)
{
Set
<
String
>
result
=
new
HashSet
<
>
(
)
;
while
(
parent
!=
null
&&
!
(
parent
instanceof
CtBlock
)
)
{
if
(
parent
instanceof
CtClass
)
{
return
result
;
}
parent
=
parent
.
getParent
(
)
;
}
if
(
parent
!=
null
)
{
CtBlock
block
=
(
CtBlock
)
parent
;
boolean
innerClass
=
false
;
while
(
parent
!=
null
&&
!
(
parent
instanceof
CtClass
)
)
{
parent
=
parent
.
getParent
(
)
;
}
if
(
parent
!=
null
)
{
if
(
!
(
parent
.
getParent
(
)
instanceof
CtPackage
)
)
{
while
(
parent
!=
null
&&
!
(
parent
instanceof
CtBlock
)
)
{
parent
=
parent
.
getParent
(
)
;
}
if
(
parent
!=
null
)
{
block
=
(
CtBlock
)
parent
;
}
}
}
AccessibleVariablesFinder
avf
=
new
AccessibleVariablesFinder
(
block
)
;
List
<
CtVariable
>
variables
=
avf
.
find
(
)
;
for
(
CtVariable
variable
:
variables
)
{
result
.
add
(
variable
.
getSimpleName
(
)
)
;
}
}
return
result
;
}
