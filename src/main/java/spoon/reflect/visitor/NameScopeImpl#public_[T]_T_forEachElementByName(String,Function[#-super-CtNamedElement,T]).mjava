/** 
 * @param name to be searched simple name
 * @param consumer is called for each named element with same name which are accessible from this {@link NameScopeImpl}as long as there are some elements and consumer returns null. If `consumer` return not null value then it is returned
 * @return the value returned by `consumer` or null
 */
@Override
public
<
T
>
T
forEachElementByName
(
String
name
,
Function
<
?
CtNamedElement
,
T
>
consumer
)
{
T
r
=
forEachByName
(
elementsByName
,
name
,
consumer
)
;
if
(
r
!=
null
)
{
return
r
;
}
if
(
scopeElement
instanceof
CtNamedElement
)
{
CtNamedElement
named
=
(
CtNamedElement
)
scopeElement
;
if
(
name
.
equals
(
named
.
getSimpleName
(
)
)
)
{
r
=
consumer
.
apply
(
named
)
;
if
(
r
!=
null
)
{
return
r
;
}
}
}
if
(
parent
!=
null
)
{
return
parent
.
forEachElementByName
(
name
,
consumer
)
;
}
return
null
;
}
