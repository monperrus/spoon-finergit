/** 
 * Constructs a query visitor with a given filter.
 */
@SuppressWarnings("unchecked")
public
QueryVisitor
(
Filter
<
T
>
filter
)
{
super
(
)
;
this
.
filter
=
filter
;
if
(
filter
instanceof
AbstractFilter
)
{
filteredType
=
(
(
AbstractFilter
<
T
>
)
filter
)
.
getType
(
)
;
}
else
{
Method
method
=
RtHelper
.
getMethod
(
filter
.
getClass
(
)
,
"matches"
,
1
)
;
if
(
method
==
null
)
{
throw
new
SpoonException
(
"The Filter class "
+
filter
.
getClass
(
)
.
getName
(
)
+
" has no matches method with one parameter."
)
;
}
filteredType
=
(
Class
<
T
>
)
method
.
getParameterTypes
(
)
[
0
]
;
}
}
