/** 
 * Sends the input parameter as input of the whole query through chain of query steps and calls output.accept(element) for each element produced by this query.
 * @param input
 * @param output
 */
@SuppressWarnings("unchecked")
private
void
forEach
(
CtConsumer
<
O
>
output
,
Object
input
)
{
tail
.
setNext
(
(
CtConsumer
<
Object
>
)
output
)
;
try
{
if
(
input
==
null
)
{
if
(
inputs
!=
null
)
{
for
(
Object
in
:
inputs
)
{
firstStep
.
accept
(
in
)
;
}
}
}
else
{
if
(
inputs
!=
null
)
{
throw
new
SpoonException
(
"Do not add QueryStep inputs if you want to use query for extra input"
)
;
}
firstStep
.
accept
(
input
)
;
}
}
finally
{
tail
.
setNext
(
null
)
;
}
}
