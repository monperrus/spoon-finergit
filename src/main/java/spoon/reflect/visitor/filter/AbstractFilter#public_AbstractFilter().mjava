/** 
 * Creates a filter with the type computed by reflection from the matches method parameter
 */
@SuppressWarnings("unchecked")
public
AbstractFilter
(
)
{
Method
method
=
RtHelper
.
getMethod
(
getClass
(
)
,
"matches"
,
1
)
;
if
(
method
==
null
)
{
throw
new
SpoonException
(
"The method matches with one parameter was not found on the class "
+
getClass
(
)
.
getName
(
)
)
;
}
this
.
type
=
(
Class
<
T
>
)
method
.
getParameterTypes
(
)
[
0
]
;
}
