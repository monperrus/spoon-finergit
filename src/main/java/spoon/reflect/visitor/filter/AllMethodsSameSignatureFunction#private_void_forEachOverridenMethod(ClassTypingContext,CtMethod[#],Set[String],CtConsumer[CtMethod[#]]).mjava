/** 
 * calls outputConsumer for each method which is overridden by 'thisMethod' in scope of `ctc`. There is assured that each method is returned only once.
 * @param ctc - class typing context whose scope is searched for overridden methods
 * @param thisMethod - the
 * @param distintTypesSet set of qualified names of types which were already visited
 * @param outputConsumer result handling consumer
 */
private
void
forEachOverridenMethod
(
final
ClassTypingContext
ctc
,
final
CtMethod
<
?
>
thisMethod
,
Set
<
String
>
distintTypesSet
,
final
CtConsumer
<
CtMethod
<
?
>
>
outputConsumer
)
{
final
CtQuery
q
=
ctc
.
getAdaptationScope
(
)
.
map
(
new
AllTypeMembersFunction
(
CtMethod
.
class
)
.
distinctSet
(
distintTypesSet
)
)
;
q
.
forEach
(
new
CtConsumer
<
CtMethod
<
?
>
>
(
)
{
@Override
public
void
accept
(
CtMethod
<
?
>
thatMethod
)
{
if
(
thisMethod
==
thatMethod
)
{
return
;
}
if
(
ctc
.
isSubSignature
(
thisMethod
,
thatMethod
)
)
{
outputConsumer
.
accept
(
thatMethod
)
;
if
(
query
.
isTerminated
(
)
)
{
q
.
terminate
(
)
;
}
}
}
}
)
;
}
