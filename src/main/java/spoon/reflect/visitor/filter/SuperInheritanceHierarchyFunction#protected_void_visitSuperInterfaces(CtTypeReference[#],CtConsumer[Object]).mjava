/** 
 * calls `outputConsumer.accept(interface)` for all superInterfaces of type recursively.
 */
protected
void
visitSuperInterfaces
(
CtTypeReference
<
?
>
type
,
CtConsumer
<
Object
>
outputConsumer
)
{
Set
<
CtTypeReference
<
?
>
>
superInterfaces
;
try
{
superInterfaces
=
type
.
getSuperInterfaces
(
)
;
}
catch
(
SpoonClassNotFoundException
e
)
{
if
(
failOnClassNotFound
)
{
throw
e
;
}
Launcher
.
LOGGER
.
warn
(
"Cannot load class: "
+
type
.
getQualifiedName
(
)
+
" with class loader "
+
Thread
.
currentThread
(
)
.
getContextClassLoader
(
)
)
;
return
;
}
for
(
CtTypeReference
<
?
>
ifaceRef
:
superInterfaces
)
{
sendResultWithListener
(
ifaceRef
,
false
,
outputConsumer
,
(
ref
)
->
visitSuperInterfaces
(
ref
,
outputConsumer
)
)
;
if
(
query
.
isTerminated
(
)
)
{
return
;
}
}
}
