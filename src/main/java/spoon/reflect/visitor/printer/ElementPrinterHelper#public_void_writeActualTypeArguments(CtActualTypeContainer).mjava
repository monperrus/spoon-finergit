/** 
 * Writes actual type arguments in a  {@link CtActualTypeContainer} element.
 * @param ctGenericElementReference Reference with actual type arguments.
 */
public
void
writeActualTypeArguments
(
CtActualTypeContainer
ctGenericElementReference
)
{
final
Collection
<
CtTypeReference
<
?
>
>
arguments
=
ctGenericElementReference
.
getActualTypeArguments
(
)
;
if
(
arguments
!=
null
&&
arguments
.
size
(
)
>
0
)
{
printer
.
write
(
"<"
)
;
boolean
isImplicitTypeReference
=
true
;
for
(
CtTypeReference
<
?
>
argument
:
arguments
)
{
if
(
!
argument
.
isImplicit
(
)
)
{
isImplicitTypeReference
=
false
;
prettyPrinter
.
scan
(
argument
)
;
printer
.
write
(
", "
)
;
}
}
if
(
!
isImplicitTypeReference
)
{
printer
.
removeLastChar
(
)
;
}
printer
.
write
(
">"
)
;
}
}
