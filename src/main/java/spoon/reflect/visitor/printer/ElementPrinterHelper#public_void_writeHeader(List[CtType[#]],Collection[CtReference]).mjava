/** 
 * Write the compilation unit header.
 */
public
void
writeHeader
(
List
<
CtType
<
?
>
>
types
,
Collection
<
CtReference
>
imports
)
{
if
(
!
types
.
isEmpty
(
)
)
{
for
(
CtType
<
?
>
ctType
:
types
)
{
writeComment
(
ctType
,
CommentOffset
.
TOP_FILE
)
;
printer
.
writeln
(
)
.
writeln
(
)
.
writeTabs
(
)
;
}
if
(
!
types
.
get
(
0
)
.
getPackage
(
)
.
isUnnamedPackage
(
)
)
{
printer
.
write
(
"package "
+
types
.
get
(
0
)
.
getPackage
(
)
.
getQualifiedName
(
)
+
";"
)
;
}
printer
.
writeln
(
)
.
writeln
(
)
.
writeTabs
(
)
;
for
(
CtReference
ref
:
imports
)
{
String
importStr
=
"import"
;
String
importTypeStr
=
""
;
if
(
ref
instanceof
CtTypeReference
)
{
CtTypeReference
typeRef
=
(
CtTypeReference
)
ref
;
importTypeStr
=
typeRef
.
getQualifiedName
(
)
;
}
else
if
(
ref
instanceof
CtExecutableReference
)
{
importStr
=
" static"
;
CtExecutableReference
execRef
=
(
CtExecutableReference
)
ref
;
if
(
execRef
.
getDeclaringType
(
)
!=
null
)
{
importTypeStr
=
this
.
removeInnerTypeSeparator
(
execRef
.
getDeclaringType
(
)
.
getQualifiedName
(
)
)
+
"."
+
execRef
.
getSimpleName
(
)
;
}
}
else
if
(
ref
instanceof
CtFieldReference
)
{
importStr
=
" static"
;
CtFieldReference
fieldRef
=
(
CtFieldReference
)
ref
;
importTypeStr
=
this
.
removeInnerTypeSeparator
(
fieldRef
.
getDeclaringType
(
)
.
getQualifiedName
(
)
)
+
"."
+
fieldRef
.
getSimpleName
(
)
;
}
if
(
!
importTypeStr
.
equals
(
""
)
)
{
printer
.
write
(
importStr
+
" "
+
importTypeStr
+
";"
)
.
writeln
(
)
.
writeTabs
(
)
;
}
}
printer
.
writeln
(
)
.
writeTabs
(
)
;
}
}
