/** 
 * Detects all child fragments of this  {@link ElementSourceFragment}. Note: the List of children contains one  {@link CollectionSourceFragment} for each collection of fragments (parameters, type members, ...).Note: the  {@link CollectionSourceFragment} may contain a mix of fragments of different roles, when they overlap.For example this code contains mix of annotations and modifiers <code>public @Deprecated static @Ignored void method()</code>
 * @return list of child fragments of this {@link ElementSourceFragment} where fragments,which belongs to the same collection are grouped into  {@link CollectionSourceFragment}
 */
public
List
<
SourceFragment
>
getGroupedChildrenFragments
(
)
{
List
<
SourceFragment
>
flatChildren
=
getChildrenFragments
(
)
;
List
<
SourceFragment
>
result
=
new
ArrayList
<
>
(
)
;
int
i
=
0
;
while
(
i
<
flatChildren
.
size
(
)
)
{
SourceFragment
child
=
flatChildren
.
get
(
i
)
;
if
(
child
instanceof
TokenSourceFragment
)
{
result
.
add
(
child
)
;
i
++
;
continue
;
}
else
if
(
child
instanceof
ElementSourceFragment
)
{
ElementSourceFragment
esf
=
(
ElementSourceFragment
)
child
;
ContainerKind
kind
=
esf
.
getContainerKindInParent
(
)
;
if
(
kind
==
ContainerKind
.
SINGLE
)
{
result
.
add
(
child
)
;
i
++
;
continue
;
}
Set
<
CtRole
>
foundRoles
=
new
HashSet
<
>
(
)
;
foundRoles
.
add
(
checkNotNull
(
esf
.
getRoleInParent
(
)
)
)
;
List
<
SourceFragment
>
childrenInSameCollection
=
new
ArrayList
<
>
(
)
;
SourceFragment
spaceChild
=
removeSuffixSpace
(
result
)
;
if
(
spaceChild
!=
null
)
{
childrenInSameCollection
.
add
(
spaceChild
)
;
}
childrenInSameCollection
.
add
(
esf
)
;
int
lastOfSameRole
=
findIndexOfLastChildTokenOfRoleHandler
(
flatChildren
,
i
,
esf
.
getRoleInParent
(
)
)
;
i
++
;
while
(
i
<=
lastOfSameRole
)
{
child
=
flatChildren
.
get
(
i
)
;
childrenInSameCollection
.
add
(
child
)
;
CtRole
role
=
null
;
if
(
child
instanceof
ElementSourceFragment
)
{
ElementSourceFragment
esf2
=
(
ElementSourceFragment
)
child
;
role
=
esf2
.
getRoleInParent
(
)
;
}
if
(
role
!=
null
&&
role
!=
CtRole
.
COMMENT
&&
foundRoles
.
add
(
role
)
)
{
lastOfSameRole
=
Math
.
max
(
lastOfSameRole
,
findIndexOfLastChildTokenOfRoleHandler
(
flatChildren
,
i
+
1
,
role
)
)
;
}
i
++
;
}
if
(
i
<
flatChildren
.
size
(
)
)
{
SourceFragment
nextChild
=
flatChildren
.
get
(
i
)
;
if
(
isSpaceFragment
(
nextChild
)
)
{
childrenInSameCollection
.
add
(
nextChild
)
;
i
++
;
}
}
result
.
add
(
new
CollectionSourceFragment
(
childrenInSameCollection
)
)
;
}
else
{
throw
new
SpoonException
(
"Unexpected SourceFragment of type "
+
child
.
getClass
(
)
)
;
}
}
return
result
;
}
