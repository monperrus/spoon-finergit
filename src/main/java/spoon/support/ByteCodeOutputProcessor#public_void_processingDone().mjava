@Override
public
void
processingDone
(
)
{
try
{
JDTCompiler
compiler
=
new
JDTCompiler
(
)
;
compiler
.
getCompilerOption
(
)
.
sourceLevel
=
getJavaCompliance
(
)
;
compiler
.
compile
(
units
.
toArray
(
new
ICompilationUnit
[
]
)
)
;
getOutputDirectory
(
)
.
mkdirs
(
)
;
for
(
ClassFile
f
:
compiler
.
getClassFiles
(
)
)
{
String
fileName
=
new
String
(
f
.
fileName
(
)
)
.
replace
(
'/'
,
File
.
separatorChar
)
+
CLASS_EXT
;
ClassFileUtil
.
adjustLineNumbers
(
f
.
getBytes
(
)
,
f
.
headerOffset
+
f
.
methodCountOffset
-
1
,
javaPrinter
.
getLineNumberMappings
(
)
.
get
(
new
String
(
f
.
fileName
(
)
)
.
replace
(
'/'
,
'.'
)
)
)
;
ClassFileUtil
.
writeToDisk
(
true
,
getOutputDirectory
(
)
.
getAbsolutePath
(
)
,
fileName
,
f
.
getBytes
(
)
)
;
printed
.
add
(
new
File
(
getOutputDirectory
(
)
,
fileName
)
)
;
printedTypes
.
add
(
new
String
(
f
.
fileName
(
)
)
.
replace
(
'/'
,
'.'
)
)
;
}
}
catch
(
Exception
e
)
{
e
.
printStackTrace
(
)
;
}
}
