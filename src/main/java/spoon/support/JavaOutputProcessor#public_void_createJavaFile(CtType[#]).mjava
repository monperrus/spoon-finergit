/** 
 * Creates the Java file associated to the given element. Splits top-level classes in different files (even if they are in the same file in the original sources).
 */
public
void
createJavaFile
(
CtType
<
?
>
element
)
{
Path
typePath
=
getElementPath
(
element
)
;
if
(
!
element
.
isTopLevel
(
)
)
{
throw
new
IllegalArgumentException
(
)
;
}
CompilationUnit
cu
=
this
.
getFactory
(
)
.
CompilationUnit
(
)
.
getOrCreate
(
element
)
;
List
<
CtType
<
?
>
>
toBePrinted
=
new
ArrayList
<
>
(
)
;
toBePrinted
.
add
(
element
)
;
PrettyPrinter
printer
=
getPrinter
(
)
;
printer
.
calculate
(
cu
,
toBePrinted
)
;
try
{
File
file
=
typePath
.
toFile
(
)
;
file
.
createNewFile
(
)
;
if
(
!
printedFiles
.
contains
(
file
)
)
{
printedFiles
.
add
(
file
)
;
}
try
(
PrintStream
stream
=
new
PrintStream
(
file
)
)
{
stream
.
print
(
printer
.
getResult
(
)
)
;
for
(
CtType
<
?
>
t
:
toBePrinted
)
{
lineNumberMappings
.
put
(
t
.
getQualifiedName
(
)
,
printer
.
getLineNumberMapping
(
)
)
;
}
}
}
catch
(
IOException
e
)
{
Launcher
.
LOGGER
.
error
(
e
.
getMessage
(
)
,
e
)
;
}
if
(
getEnvironment
(
)
.
getSpoonProgress
(
)
!=
null
)
{
getEnvironment
(
)
.
getSpoonProgress
(
)
.
step
(
SpoonProgress
.
Process
.
PRINT
,
element
.
getQualifiedName
(
)
)
;
}
}
