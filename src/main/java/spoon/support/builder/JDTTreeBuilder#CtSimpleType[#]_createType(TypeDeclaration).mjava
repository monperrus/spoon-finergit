CtSimpleType
<
?
>
createType
(
TypeDeclaration
typeDeclaration
)
{
CtSimpleType
<
?
>
type
=
null
;
if
(
(
typeDeclaration
.
modifiers
&
ClassFileConstants
.
AccAnnotation
)
!=
0
)
{
type
=
(
CtSimpleType
)
factory
.
Core
(
)
.
createAnnotationType
(
)
;
}
else
if
(
(
typeDeclaration
.
modifiers
&
ClassFileConstants
.
AccEnum
)
!=
0
)
{
CtEnum
<
?
>
e
=
factory
.
Core
(
)
.
createEnum
(
)
;
if
(
typeDeclaration
.
superInterfaces
!=
null
)
{
for
(
TypeReference
ref
:
typeDeclaration
.
superInterfaces
)
{
e
.
getSuperInterfaces
(
)
.
add
(
references
.
getTypeReference
(
ref
.
resolvedType
)
)
;
}
}
type
=
e
;
}
else
if
(
(
typeDeclaration
.
modifiers
&
ClassFileConstants
.
AccInterface
)
!=
0
)
{
CtInterface
<
?
>
interf
=
factory
.
Core
(
)
.
createInterface
(
)
;
if
(
typeDeclaration
.
superInterfaces
!=
null
)
{
for
(
TypeReference
ref
:
typeDeclaration
.
superInterfaces
)
{
interf
.
getSuperInterfaces
(
)
.
add
(
references
.
getTypeReference
(
ref
.
resolvedType
)
)
;
}
}
if
(
typeDeclaration
.
typeParameters
!=
null
)
for
(
TypeParameter
p
:
typeDeclaration
.
typeParameters
)
{
interf
.
getFormalTypeParameters
(
)
.
add
(
references
.
getBoundedTypeReference
(
p
.
binding
)
)
;
}
type
=
interf
;
}
else
{
CtClass
<
?
>
cl
=
factory
.
Core
(
)
.
createClass
(
)
;
if
(
typeDeclaration
.
superclass
!=
null
)
{
cl
.
setSuperclass
(
references
.
getTypeReference
(
typeDeclaration
.
superclass
.
resolvedType
)
)
;
}
if
(
typeDeclaration
.
superInterfaces
!=
null
)
{
for
(
TypeReference
ref
:
typeDeclaration
.
superInterfaces
)
{
cl
.
getSuperInterfaces
(
)
.
add
(
references
.
getTypeReference
(
ref
.
resolvedType
)
)
;
}
}
if
(
typeDeclaration
.
typeParameters
!=
null
)
for
(
TypeParameter
p
:
typeDeclaration
.
typeParameters
)
{
cl
.
getFormalTypeParameters
(
)
.
add
(
references
.
getBoundedTypeReference
(
p
.
binding
)
)
;
}
type
=
cl
;
}
type
.
setSimpleName
(
new
String
(
typeDeclaration
.
name
)
)
;
type
.
setModifiers
(
getModifier
(
typeDeclaration
.
modifiers
)
)
;
return
type
;
}
