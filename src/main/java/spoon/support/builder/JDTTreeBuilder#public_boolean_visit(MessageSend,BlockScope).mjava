@SuppressWarnings("unchecked")
@Override
public
boolean
visit
(
MessageSend
messageSend
,
BlockScope
scope
)
{
if
(
messageSend
.
actualReceiverType
==
null
)
{
logger
.
error
(
"unconsistent message send at "
+
context
.
createSourcePosition
(
messageSend
)
)
;
}
if
(
messageSend
.
actualReceiverType
==
null
||
!
messageSend
.
actualReceiverType
.
isAnnotationType
(
)
)
{
CtInvocation
<
?
>
inv
=
factory
.
Core
(
)
.
createInvocation
(
)
;
if
(
messageSend
.
binding
!=
null
)
inv
.
setExecutable
(
references
.
getExecutableReference
(
messageSend
.
binding
)
)
;
context
.
enter
(
inv
,
messageSend
)
;
if
(
!
(
messageSend
.
receiver
.
getClass
(
)
.
equals
(
ThisReference
.
class
)
)
)
messageSend
.
receiver
.
traverse
(
this
,
scope
)
;
context
.
pushArgument
(
inv
)
;
if
(
messageSend
.
arguments
!=
null
)
for
(
Expression
e
:
messageSend
.
arguments
)
{
e
.
traverse
(
this
,
scope
)
;
}
if
(
messageSend
.
genericTypeArguments
!=
null
)
inv
.
setGenericTypes
(
references
.
getBoundedTypesReferences
(
messageSend
.
genericTypeArguments
)
)
;
context
.
popArgument
(
inv
)
;
return
false
;
}
else
{
CtAnnotationFieldAccess
<
?
>
acc
=
factory
.
Core
(
)
.
createAnnotationFieldAccess
(
)
;
acc
.
setVariable
(
references
.
getVariableReference
(
messageSend
.
binding
)
)
;
acc
.
setType
(
references
.
getTypeReference
(
messageSend
.
resolvedType
)
)
;
context
.
enter
(
acc
,
messageSend
)
;
context
.
target
.
push
(
acc
)
;
messageSend
.
receiver
.
traverse
(
this
,
scope
)
;
context
.
target
.
pop
(
)
;
return
false
;
}
}
