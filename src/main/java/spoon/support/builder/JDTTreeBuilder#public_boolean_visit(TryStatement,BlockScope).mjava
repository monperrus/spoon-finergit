@Override
@SuppressWarnings("unchecked")
public
boolean
visit
(
TryStatement
tryStatement
,
BlockScope
scope
)
{
CtTry
t
=
factory
.
Core
(
)
.
createTry
(
)
;
context
.
enter
(
t
,
tryStatement
)
;
for
(
LocalDeclaration
localDeclaration
:
tryStatement
.
resources
)
{
localDeclaration
.
traverse
(
this
,
scope
)
;
}
tryStatement
.
tryBlock
.
traverse
(
this
,
scope
)
;
if
(
tryStatement
.
catchArguments
!=
null
)
{
for
(
int
i
=
0
;
i
<
tryStatement
.
catchArguments
.
length
;
i
++
)
{
CtCatch
c
=
factory
.
Core
(
)
.
createCatch
(
)
;
context
.
enter
(
c
,
tryStatement
.
catchBlocks
[
i
]
)
;
CtLocalVariable
<
?
Throwable
>
var
=
factory
.
Core
(
)
.
createLocalVariable
(
)
;
var
.
setSimpleName
(
new
String
(
tryStatement
.
catchArguments
[
i
]
.
name
)
)
;
if
(
tryStatement
.
catchArguments
[
i
]
.
binding
!=
null
)
{
var
.
setType
(
references
.
getTypeReference
(
tryStatement
.
catchArguments
[
i
]
.
binding
.
type
)
)
;
}
for
(
ModifierKind
modifier
:
getModifiers
(
tryStatement
.
catchArguments
[
i
]
.
modifiers
)
)
{
var
.
addModifier
(
modifier
)
;
}
context
.
enter
(
var
,
tryStatement
.
catchArguments
[
i
]
)
;
context
.
exit
(
tryStatement
.
catchArguments
[
i
]
)
;
tryStatement
.
catchBlocks
[
i
]
.
traverse
(
this
,
scope
)
;
context
.
exit
(
tryStatement
.
catchBlocks
[
i
]
)
;
}
}
if
(
tryStatement
.
finallyBlock
!=
null
)
{
context
.
finallyzer
.
push
(
t
)
;
tryStatement
.
finallyBlock
.
traverse
(
this
,
scope
)
;
context
.
finallyzer
.
pop
(
)
;
}
return
false
;
}
