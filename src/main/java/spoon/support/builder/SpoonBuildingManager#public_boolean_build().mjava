public
boolean
build
(
)
throws
Exception
{
if
(
factory
==
null
)
{
throw
new
Exception
(
"Factory not initialized"
)
;
}
if
(
build
)
{
throw
new
Exception
(
"Model already built"
)
;
}
build
=
true
;
boolean
srcSuccess
,
templateSuccess
;
factory
.
getEnvironment
(
)
.
debugMessage
(
"compiling sources: "
+
sources
.
getAllJavaFiles
(
)
)
;
long
t
=
System
.
currentTimeMillis
(
)
;
compiler
=
new
SpoonCompiler
(
)
;
compiler
.
JAVA_COMPLIANCE
=
factory
.
getEnvironment
(
)
.
getComplianceLevel
(
)
;
initCompiler
(
)
;
srcSuccess
=
compiler
.
compileSrc
(
factory
,
sources
.
getAllJavaFiles
(
)
)
;
if
(
compiler
.
probs
.
size
(
)
>
0
)
{
for
(
CategorizedProblem
[
]
cps
:
compiler
.
probs
)
{
for
(
int
i
=
0
;
i
<
cps
.
length
;
i
++
)
{
CategorizedProblem
problem
=
cps
[
i
]
;
if
(
problem
!=
null
)
{
File
file
=
new
File
(
new
String
(
problem
.
getOriginatingFileName
(
)
)
)
;
String
filename
=
file
.
getAbsolutePath
(
)
;
factory
.
getEnvironment
(
)
.
report
(
null
,
problem
.
isError
(
)
?
Severity
.
ERROR
:
problem
.
isWarning
(
)
?
Severity
.
WARNING
:
Severity
.
MESSAGE
,
problem
.
getMessage
(
)
+
" at "
+
filename
+
":"
+
problem
.
getSourceLineNumber
(
)
)
;
}
}
}
}
factory
.
getEnvironment
(
)
.
debugMessage
(
"compiled in "
+
(
System
.
currentTimeMillis
(
)
-
t
)
+
" ms"
)
;
factory
.
getEnvironment
(
)
.
debugMessage
(
"compiling templates: "
+
templates
.
getAllJavaFiles
(
)
)
;
t
=
System
.
currentTimeMillis
(
)
;
templateSuccess
=
compiler
.
compileTemplate
(
factory
,
templates
.
getAllJavaFiles
(
)
)
;
factory
.
Template
(
)
.
parseTypes
(
)
;
factory
.
getEnvironment
(
)
.
debugMessage
(
"compiled in "
+
(
System
.
currentTimeMillis
(
)
-
t
)
+
" ms"
)
;
return
srcSuccess
&&
templateSuccess
;
}
