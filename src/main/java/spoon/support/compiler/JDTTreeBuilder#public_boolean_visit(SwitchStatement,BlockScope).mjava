@Override
public
boolean
visit
(
SwitchStatement
switchStatement
,
BlockScope
scope
)
{
CtSwitch
<
?
>
s
=
factory
.
Core
(
)
.
createSwitch
(
)
;
context
.
enter
(
s
,
switchStatement
)
;
switchStatement
.
expression
.
traverse
(
this
,
switchStatement
.
scope
)
;
if
(
switchStatement
.
statements
!=
null
)
{
int
statementsLength
=
switchStatement
.
statements
.
length
;
for
(
int
i
=
0
;
i
<
statementsLength
;
i
++
)
{
if
(
switchStatement
.
statements
[
i
]
instanceof
CaseStatement
)
{
if
(
context
.
stack
.
peek
(
)
.
element
instanceof
CtCase
)
{
context
.
exit
(
context
.
stack
.
peek
(
)
.
node
)
;
}
CaseStatement
cas
=
(
CaseStatement
)
switchStatement
.
statements
[
i
]
;
visit
(
cas
,
switchStatement
.
scope
)
;
}
else
{
switchStatement
.
statements
[
i
]
.
traverse
(
this
,
switchStatement
.
scope
)
;
}
}
if
(
context
.
stack
.
peek
(
)
.
element
instanceof
CtCase
)
{
context
.
exit
(
context
.
stack
.
peek
(
)
.
node
)
;
}
}
return
false
;
}
