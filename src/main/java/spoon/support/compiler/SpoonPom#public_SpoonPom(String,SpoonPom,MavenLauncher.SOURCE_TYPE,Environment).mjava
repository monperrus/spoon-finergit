/** 
 * Extract the information from the pom
 * @param path the path to the pom
 * @param parent the parent pom
 * @return the extracted model
 * @throws IOException when the file does not exist
 * @throws XmlPullParserException when the file is corrupted
 */
public
SpoonPom
(
String
path
,
SpoonPom
parent
,
MavenLauncher
.
SOURCE_TYPE
sourceType
,
Environment
environment
)
throws
IOException
,
XmlPullParserException
{
this
.
parent
=
parent
;
this
.
sourceType
=
sourceType
;
this
.
environment
=
environment
;
if
(
!
path
.
endsWith
(
".xml"
)
&&
!
path
.
endsWith
(
".pom"
)
)
{
path
=
Paths
.
get
(
path
,
"pom.xml"
)
.
toString
(
)
;
}
this
.
pomFile
=
new
File
(
path
)
;
if
(
!
pomFile
.
exists
(
)
)
{
throw
new
IOException
(
"Pom does not exists."
)
;
}
this
.
directory
=
pomFile
.
getParentFile
(
)
;
MavenXpp3Reader
pomReader
=
new
MavenXpp3Reader
(
)
;
try
(
FileReader
reader
=
new
FileReader
(
pomFile
)
)
{
this
.
model
=
pomReader
.
read
(
reader
)
;
for
(
String
module
:
model
.
getModules
(
)
)
{
addModule
(
new
SpoonPom
(
Paths
.
get
(
pomFile
.
getParent
(
)
,
module
)
.
toString
(
)
,
this
,
sourceType
,
environment
)
)
;
}
}
catch
(
FileNotFoundException
e
)
{
throw
new
IOException
(
"Pom does not exists."
)
;
}
}
