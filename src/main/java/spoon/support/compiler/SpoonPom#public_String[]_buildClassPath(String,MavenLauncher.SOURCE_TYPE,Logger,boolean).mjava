/** 
 * Call maven invoker to generate the classpath. Either M2_HOME must be initialized, or the command mvn must be in PATH.
 * @param mvnHome the path to the m2repository
 * @param sourceType the source type (App, test, or all)
 * @param LOGGER Logger used for maven output
 * @param forceRefresh if true forces the invocation of maven to regenerate classpath
 */
public
String
[
]
buildClassPath
(
String
mvnHome
,
MavenLauncher
.
SOURCE_TYPE
sourceType
,
Logger
LOGGER
,
boolean
forceRefresh
)
{
if
(
mvnHome
==
null
)
{
mvnHome
=
guessMavenHome
(
)
;
if
(
mvnHome
==
null
)
{
throw
new
SpoonException
(
"M2_HOME must be initialized to use this MavenLauncher constructor."
)
;
}
}
generateClassPathFile
(
new
File
(
mvnHome
)
,
sourceType
,
LOGGER
,
forceRefresh
)
;
List
<
File
>
classPathPrints
;
String
[
]
classpath
;
try
{
classPathPrints
=
getClasspathTmpFiles
(
getSpoonClasspathTmpFileName
(
sourceType
)
)
;
File
[
]
classPathPrintFiles
=
new
File
[
]
;
classPathPrintFiles
=
classPathPrints
.
toArray
(
classPathPrintFiles
)
;
classpath
=
readClassPath
(
classPathPrintFiles
)
;
}
catch
(
IOException
e
)
{
throw
new
SpoonException
(
"Failed to generate class path for "
+
pomFile
.
getAbsolutePath
(
)
+
"."
)
;
}
return
classpath
;
}
