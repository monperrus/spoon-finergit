private
void
forEachCompilationUnit
(
List
<
CompilationUnitDeclaration
>
unitList
,
SpoonProgress
.
Process
process
,
Consumer
<
CompilationUnitDeclaration
>
consumer
)
{
if
(
getEnvironment
(
)
.
getSpoonProgress
(
)
!=
null
)
{
getEnvironment
(
)
.
getSpoonProgress
(
)
.
start
(
process
)
;
}
int
i
=
0
;
for
(
CompilationUnitDeclaration
unit
:
unitList
)
{
if
(
unit
.
isModuleInfo
(
)
||
!
unit
.
isEmpty
(
)
)
{
final
String
unitPath
=
new
String
(
unit
.
getFileName
(
)
)
;
if
(
canProcessCompilationUnit
(
unitPath
)
)
{
consumer
.
accept
(
unit
)
;
}
if
(
getEnvironment
(
)
.
getSpoonProgress
(
)
!=
null
)
{
getEnvironment
(
)
.
getSpoonProgress
(
)
.
step
(
process
,
unitPath
,
++
i
,
unitList
.
size
(
)
)
;
}
}
}
if
(
getEnvironment
(
)
.
getSpoonProgress
(
)
!=
null
)
{
getEnvironment
(
)
.
getSpoonProgress
(
)
.
end
(
process
)
;
}
}
