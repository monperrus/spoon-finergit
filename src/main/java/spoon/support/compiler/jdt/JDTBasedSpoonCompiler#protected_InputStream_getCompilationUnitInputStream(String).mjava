protected
InputStream
getCompilationUnitInputStream
(
String
path
)
{
Environment
env
=
factory
.
getEnvironment
(
)
;
spoon
.
reflect
.
cu
.
CompilationUnit
cu
=
factory
.
CompilationUnit
(
)
.
getMap
(
)
.
get
(
path
)
;
List
<
CtSimpleType
<
?
>
>
toBePrinted
=
cu
.
getDeclaredTypes
(
)
;
PrettyPrinter
printer
=
null
;
if
(
env
.
isUsingSourceCodeFragments
(
)
)
{
printer
=
new
FragmentDrivenJavaPrettyPrinter
(
env
)
;
}
if
(
printer
==
null
)
{
printer
=
new
DefaultJavaPrettyPrinter
(
env
)
;
}
printer
.
calculate
(
cu
,
toBePrinted
)
;
return
new
ByteArrayInputStream
(
printer
.
getResult
(
)
.
toString
(
)
.
getBytes
(
)
)
;
}
