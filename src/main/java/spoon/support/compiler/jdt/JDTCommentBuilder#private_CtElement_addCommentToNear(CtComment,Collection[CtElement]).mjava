/** 
 * Insert the element to nearer element in the elements collections
 * @param comment the comment to insert
 * @param elements the collection that content the ast elements
 * @return
 */
private
CtElement
addCommentToNear
(
final
CtComment
comment
,
final
Collection
<
CtElement
>
elements
)
{
CtElement
best
=
null
;
int
smallDistance
=
Integer
.
MAX_VALUE
;
for
(
CtElement
element
:
elements
)
{
if
(
element
.
getPosition
(
)
==
null
)
{
continue
;
}
if
(
element
.
isImplicit
(
)
)
{
continue
;
}
if
(
element
instanceof
CtComment
)
{
continue
;
}
final
boolean
isAfter
=
element
.
getPosition
(
)
.
getSourceEnd
(
)
<
comment
.
getPosition
(
)
.
getSourceStart
(
)
;
int
distance
=
Math
.
abs
(
element
.
getPosition
(
)
.
getSourceStart
(
)
-
comment
.
getPosition
(
)
.
getSourceEnd
(
)
)
;
if
(
isAfter
)
{
distance
=
Math
.
abs
(
element
.
getPosition
(
)
.
getSourceEnd
(
)
-
comment
.
getPosition
(
)
.
getSourceStart
(
)
)
;
}
int
elementEndLine
=
element
.
getPosition
(
)
.
getEndLine
(
)
;
int
commentLine
=
comment
.
getPosition
(
)
.
getLine
(
)
;
if
(
distance
<
smallDistance
&&
(
!
isAfter
||
elementEndLine
==
commentLine
)
)
{
best
=
element
;
smallDistance
=
distance
;
}
}
if
(
best
!=
null
)
{
best
.
addComment
(
comment
)
;
}
return
best
;
}
