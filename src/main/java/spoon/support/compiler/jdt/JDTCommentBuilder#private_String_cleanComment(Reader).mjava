private
static
String
cleanComment
(
Reader
comment
)
{
StringBuilder
ret
=
new
StringBuilder
(
)
;
try
(
BufferedReader
br
=
new
BufferedReader
(
comment
)
)
{
String
line
=
br
.
readLine
(
)
;
if
(
line
==
null
)
{
return
ret
.
toString
(
)
;
}
boolean
isLastLine
=
false
;
if
(
line
.
length
(
)
>=
2
&&
line
.
charAt
(
1
)
==
'/'
)
{
isLastLine
=
true
;
line
=
line
.
substring
(
2
)
;
}
else
{
if
(
line
.
endsWith
(
"*/"
)
&&
line
.
length
(
)
>
3
)
{
line
=
endCommentRE
.
matcher
(
line
)
.
replaceFirst
(
""
)
;
isLastLine
=
true
;
}
line
=
startCommentRE
.
matcher
(
line
)
.
replaceFirst
(
""
)
;
}
ret
.
append
(
line
)
;
while
(
(
line
=
br
.
readLine
(
)
)
!=
null
)
{
if
(
isLastLine
)
{
throw
new
SpoonException
(
"Unexpected next line after last line"
)
;
}
if
(
line
.
endsWith
(
"*/"
)
)
{
line
=
endCommentRE
.
matcher
(
line
)
.
replaceFirst
(
""
)
;
isLastLine
=
true
;
}
line
=
middleCommentRE
.
matcher
(
line
)
.
replaceFirst
(
""
)
;
ret
.
append
(
CtComment
.
LINE_SEPARATOR
)
;
ret
.
append
(
line
)
;
}
return
ret
.
toString
(
)
.
trim
(
)
;
}
catch
(
IOException
e
)
{
throw
new
SpoonException
(
e
)
;
}
}
