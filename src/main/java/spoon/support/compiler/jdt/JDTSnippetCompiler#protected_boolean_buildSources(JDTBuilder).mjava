@Override
protected
boolean
buildSources
(
JDTBuilder
jdtBuilder
)
{
if
(
sources
.
getAllJavaFiles
(
)
.
isEmpty
(
)
)
{
return
true
;
}
JDTBatchCompiler
batchCompiler
=
createBatchCompiler
(
)
;
File
source
=
createTmpJavaFile
(
new
File
(
"."
)
)
;
String
[
]
args
;
if
(
jdtBuilder
==
null
)
{
args
=
new
JDTBuilderImpl
(
)
.
classpathOptions
(
new
ClasspathOptions
(
)
.
encoding
(
this
.
encoding
)
.
classpathFromListOrClassLoader
(
getSourceClasspath
(
)
)
)
.
complianceOptions
(
new
ComplianceOptions
(
)
.
compliance
(
javaCompliance
)
)
.
advancedOptions
(
new
AdvancedOptions
(
)
.
preserveUnusedVars
(
)
.
continueExecution
(
)
.
enableJavadoc
(
)
)
.
sources
(
new
SourceOptions
(
)
.
sources
(
source
.
getPath
(
)
)
)
.
build
(
)
;
}
else
{
args
=
jdtBuilder
.
build
(
)
;
}
getFactory
(
)
.
getEnvironment
(
)
.
debugMessage
(
"build args: "
+
Arrays
.
toString
(
args
)
)
;
batchCompiler
.
configure
(
args
)
;
CompilationUnitDeclaration
[
]
units
=
batchCompiler
.
getUnits
(
sources
.
getAllJavaFiles
(
)
)
;
if
(
source
.
exists
(
)
)
{
source
.
delete
(
)
;
}
JDTTreeBuilder
builder
=
new
JDTTreeBuilder
(
factory
)
;
for
(
CompilationUnitDeclaration
unit
:
units
)
{
unit
.
traverse
(
builder
,
unit
.
scope
)
;
}
return
getProblems
(
)
.
size
(
)
==
0
;
}
