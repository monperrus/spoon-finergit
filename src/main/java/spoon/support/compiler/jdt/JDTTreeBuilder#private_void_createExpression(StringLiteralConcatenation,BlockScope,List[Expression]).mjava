private
void
createExpression
(
StringLiteralConcatenation
literal
,
BlockScope
scope
,
List
<
Expression
>
rst
)
{
if
(
rst
.
isEmpty
(
)
)
{
return
;
}
rst
.
get
(
0
)
.
traverse
(
this
,
scope
)
;
rst
.
remove
(
0
)
;
if
(
rst
.
size
(
)
>
1
)
{
CtBinaryOperator
<
?
>
op
=
factory
.
Core
(
)
.
createBinaryOperator
(
)
;
op
.
setKind
(
BinaryOperatorKind
.
PLUS
)
;
context
.
enter
(
op
,
literal
)
;
createExpression
(
literal
,
scope
,
rst
)
;
context
.
exit
(
literal
)
;
}
else
{
createExpression
(
literal
,
scope
,
rst
)
;
}
}
