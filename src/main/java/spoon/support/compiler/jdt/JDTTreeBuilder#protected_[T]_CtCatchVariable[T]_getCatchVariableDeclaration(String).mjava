protected
<
T
>
CtCatchVariable
<
T
>
getCatchVariableDeclaration
(
final
String
name
)
{
List
<
CtElement
>
reversedElements
=
new
ArrayList
<
>
(
context
.
stack
.
size
(
)
)
;
for
(
ASTPair
element
:
context
.
stack
)
{
reversedElements
.
add
(
0
,
element
.
element
)
;
}
for
(
CtElement
element
:
reversedElements
)
{
EarlyTerminatingScanner
<
CtCatchVariable
<
?
>
>
scanner
=
new
EarlyTerminatingScanner
<
CtCatchVariable
<
?
>
>
(
)
{
@Override
public
<
T
>
void
visitCtCatchVariable
(
CtCatchVariable
<
T
>
catchVariable
)
{
if
(
name
.
equals
(
catchVariable
.
getSimpleName
(
)
)
)
{
setResult
(
catchVariable
)
;
terminate
(
)
;
return
;
}
super
.
visitCtCatchVariable
(
catchVariable
)
;
}
}
;
element
.
accept
(
scanner
)
;
CtCatchVariable
<
T
>
var
=
(
CtCatchVariable
<
T
>
)
scanner
.
getResult
(
)
;
if
(
var
!=
null
)
{
return
null
;
}
}
LOGGER
.
error
(
"could not find declaration for catch variable "
+
name
+
" at "
+
context
.
stack
.
peek
(
)
.
element
.
getPosition
(
)
)
;
return
null
;
}
