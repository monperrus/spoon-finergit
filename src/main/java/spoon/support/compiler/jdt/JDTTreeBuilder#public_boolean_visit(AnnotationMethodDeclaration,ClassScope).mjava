@Override
public
boolean
visit
(
AnnotationMethodDeclaration
annotationTypeDeclaration
,
ClassScope
classScope
)
{
CtField
<
Object
>
f
=
factory
.
Core
(
)
.
createField
(
)
;
f
.
setSimpleName
(
new
String
(
annotationTypeDeclaration
.
selector
)
)
;
context
.
enter
(
f
,
annotationTypeDeclaration
)
;
f
.
setType
(
this
.
references
.
buildTypeReference
(
annotationTypeDeclaration
.
returnType
,
classScope
)
)
;
if
(
annotationTypeDeclaration
.
annotations
!=
null
)
{
for
(
Annotation
a
:
annotationTypeDeclaration
.
annotations
)
{
a
.
traverse
(
this
,
annotationTypeDeclaration
.
scope
)
;
JDTTreeBuilderHelper
.
substituteAnnotation
(
f
,
a
,
CtAnnotatedElementType
.
TYPE_USE
)
;
}
}
defaultValue
=
true
;
if
(
annotationTypeDeclaration
.
defaultValue
!=
null
)
{
annotationTypeDeclaration
.
defaultValue
.
traverse
(
this
,
annotationTypeDeclaration
.
scope
)
;
}
defaultValue
=
false
;
return
false
;
}
