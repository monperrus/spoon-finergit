@Override
public
boolean
visit
(
ArrayAllocationExpression
arrayAllocationExpression
,
BlockScope
scope
)
{
CtNewArray
<
Object
>
array
=
factory
.
Core
(
)
.
createNewArray
(
)
;
context
.
enter
(
array
,
arrayAllocationExpression
)
;
final
CtArrayTypeReference
<
Object
>
arrayType
=
(
CtArrayTypeReference
<
Object
>
)
references
.
getTypeReference
(
arrayAllocationExpression
.
resolvedType
)
;
arrayType
.
getArrayType
(
)
.
setAnnotations
(
buildTypeReference
(
arrayAllocationExpression
.
type
,
scope
)
.
getAnnotations
(
)
)
;
array
.
setType
(
arrayType
)
;
context
.
pushArgument
(
array
)
;
if
(
arrayAllocationExpression
.
dimensions
!=
null
)
{
for
(
Expression
e
:
arrayAllocationExpression
.
dimensions
)
{
if
(
e
!=
null
)
{
e
.
traverse
(
this
,
scope
)
;
}
}
}
context
.
popArgument
(
array
)
;
if
(
arrayAllocationExpression
.
initializer
!=
null
&&
arrayAllocationExpression
.
initializer
.
expressions
!=
null
)
{
for
(
Expression
e
:
arrayAllocationExpression
.
initializer
.
expressions
)
{
e
.
traverse
(
this
,
scope
)
;
}
}
return
false
;
}
