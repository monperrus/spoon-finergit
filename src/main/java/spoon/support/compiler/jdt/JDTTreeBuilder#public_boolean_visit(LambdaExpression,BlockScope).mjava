@Override
public
boolean
visit
(
LambdaExpression
lambdaExpression
,
BlockScope
blockScope
)
{
CtLambda
<
?
>
lambda
=
factory
.
Core
(
)
.
createLambda
(
)
;
final
MethodBinding
methodBinding
=
lambdaExpression
.
getMethodBinding
(
)
;
if
(
methodBinding
!=
null
)
{
lambda
.
setSimpleName
(
String
.
valueOf
(
methodBinding
.
constantPoolName
(
)
)
)
;
}
context
.
enter
(
lambda
,
lambdaExpression
)
;
final
Argument
[
]
arguments
=
lambdaExpression
.
arguments
(
)
;
if
(
arguments
!=
null
&&
arguments
.
length
>
0
)
{
for
(
Argument
e
:
arguments
)
{
e
.
traverse
(
this
,
blockScope
)
;
}
}
if
(
lambdaExpression
.
body
(
)
!=
null
)
{
final
boolean
isBuildLambdaBack
=
context
.
isBuildLambda
;
context
.
isBuildLambda
=
true
;
lambdaExpression
.
body
(
)
.
traverse
(
this
,
blockScope
)
;
context
.
isBuildLambda
=
isBuildLambdaBack
;
}
return
false
;
}
