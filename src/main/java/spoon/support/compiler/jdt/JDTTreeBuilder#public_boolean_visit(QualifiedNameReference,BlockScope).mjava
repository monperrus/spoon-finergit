@Override
public
boolean
visit
(
QualifiedNameReference
qualifiedNameRef
,
BlockScope
scope
)
{
if
(
qualifiedNameRef
.
binding
instanceof
FieldBinding
||
qualifiedNameRef
.
binding
instanceof
VariableBinding
)
{
context
.
enter
(
helper
.
createVariableAccess
(
qualifiedNameRef
)
,
qualifiedNameRef
)
;
return
true
;
}
else
if
(
qualifiedNameRef
.
binding
instanceof
TypeBinding
)
{
context
.
enter
(
factory
.
Code
(
)
.
createTypeAccessWithoutCloningReference
(
references
.
getTypeReference
(
(
TypeBinding
)
qualifiedNameRef
.
binding
)
)
,
qualifiedNameRef
)
;
return
true
;
}
else
if
(
qualifiedNameRef
.
binding
instanceof
ProblemBinding
)
{
if
(
context
.
stack
.
peek
(
)
.
element
instanceof
CtInvocation
)
{
context
.
enter
(
helper
.
createTypeAccessNoClasspath
(
qualifiedNameRef
)
,
qualifiedNameRef
)
;
return
true
;
}
context
.
enter
(
helper
.
createFieldAccessNoClasspath
(
qualifiedNameRef
)
,
qualifiedNameRef
)
;
return
true
;
}
else
{
context
.
enter
(
helper
.
createVariableAccess
(
factory
.
Core
(
)
.
createUnboundVariableReference
(
)
.
setSimpleName
(
qualifiedNameRef
.
toString
(
)
)
,
isLhsAssignment
(
context
,
qualifiedNameRef
)
)
,
qualifiedNameRef
)
;
return
true
;
}
}
