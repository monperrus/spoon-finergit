@Override
public
boolean
visit
(
QualifiedSuperReference
qualifiedSuperReference
,
BlockScope
scope
)
{
if
(
skipTypeInAnnotation
)
{
return
true
;
}
CtTypeReference
<
Object
>
typeRefOfSuper
=
references
.
getTypeReference
(
qualifiedSuperReference
.
qualification
.
resolvedType
)
;
final
CtSuperAccess
<
Object
>
superAccess
=
factory
.
Core
(
)
.
createSuperAccess
(
)
;
CtTypeAccess
<
Object
>
typeAccess
=
factory
.
Code
(
)
.
createTypeAccessWithoutCloningReference
(
typeRefOfSuper
)
;
superAccess
.
setTarget
(
typeAccess
)
;
context
.
enter
(
superAccess
,
qualifiedSuperReference
)
;
return
false
;
}
