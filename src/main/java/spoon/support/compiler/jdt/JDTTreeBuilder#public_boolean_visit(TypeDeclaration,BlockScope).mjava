@Override
public
boolean
visit
(
TypeDeclaration
localTypeDeclaration
,
BlockScope
scope
)
{
CtType
<
?
>
t
;
if
(
localTypeDeclaration
.
binding
==
null
)
{
t
=
factory
.
Core
(
)
.
createClass
(
)
;
(
(
CtClass
)
t
)
.
setSuperclass
(
references
.
getTypeReference
(
null
,
localTypeDeclaration
.
allocation
.
type
)
)
;
}
else
{
t
=
createType
(
localTypeDeclaration
)
;
}
if
(
localTypeDeclaration
.
javadoc
!=
null
)
{
t
.
setDocComment
(
getJavaDoc
(
localTypeDeclaration
.
javadoc
,
scope
.
referenceCompilationUnit
(
)
)
)
;
}
context
.
enter
(
t
,
localTypeDeclaration
)
;
if
(
localTypeDeclaration
.
fields
!=
null
)
{
int
length
=
localTypeDeclaration
.
fields
.
length
;
for
(
int
i
=
0
;
i
<
length
;
i
++
)
{
FieldDeclaration
field
;
if
(
(
field
=
localTypeDeclaration
.
fields
[
i
]
)
.
isStatic
(
)
)
{
field
.
traverse
(
this
,
localTypeDeclaration
.
initializerScope
)
;
}
}
}
return
true
;
}
