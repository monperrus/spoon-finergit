@Override
public
boolean
visit
(
TypeDeclaration
typeDeclaration
,
CompilationUnitScope
scope
)
{
if
(
new
String
(
typeDeclaration
.
name
)
.
equals
(
"package-info"
)
)
{
context
.
enter
(
factory
.
Package
(
)
.
getOrCreate
(
new
String
(
typeDeclaration
.
binding
.
fPackage
.
readableName
(
)
)
)
,
typeDeclaration
)
;
return
true
;
}
else
{
CtModule
module
;
if
(
typeDeclaration
.
binding
.
module
!=
null
&&
!
typeDeclaration
.
binding
.
module
.
isUnnamed
(
)
&&
typeDeclaration
.
binding
.
module
.
shortReadableName
(
)
!=
null
&&
typeDeclaration
.
binding
.
module
.
shortReadableName
(
)
.
length
>
0
)
{
module
=
factory
.
Module
(
)
.
getOrCreate
(
String
.
valueOf
(
typeDeclaration
.
binding
.
module
.
shortReadableName
(
)
)
)
;
}
else
{
module
=
factory
.
Module
(
)
.
getUnnamedModule
(
)
;
}
CtPackage
pack
;
if
(
typeDeclaration
.
binding
.
fPackage
.
shortReadableName
(
)
!=
null
&&
typeDeclaration
.
binding
.
fPackage
.
shortReadableName
(
)
.
length
>
0
)
{
pack
=
factory
.
Package
(
)
.
getOrCreate
(
new
String
(
typeDeclaration
.
binding
.
fPackage
.
shortReadableName
(
)
)
,
module
)
;
}
else
{
pack
=
module
.
getRootPackage
(
)
;
}
context
.
enter
(
pack
,
typeDeclaration
)
;
pack
.
addType
(
helper
.
createType
(
typeDeclaration
)
)
;
return
true
;
}
}
