public
boolean
visitTypeParameter
(
TypeParameter
typeParameter
,
Scope
scope
)
{
final
CtTypeParameterReference
typeParameterRef
=
factory
.
Core
(
)
.
createTypeParameterReference
(
)
;
context
.
isTypeParameter
=
true
;
context
.
enter
(
typeParameterRef
,
typeParameter
)
;
typeParameterRef
.
setSimpleName
(
CharOperation
.
charToString
(
typeParameter
.
name
)
)
;
typeParameterRef
.
setBoundingType
(
this
.
references
.
buildTypeReference
(
typeParameter
.
type
,
(
BlockScope
)
null
)
)
;
if
(
typeParameter
.
annotations
!=
null
)
{
int
length
=
typeParameter
.
annotations
.
length
;
for
(
int
i
=
0
;
i
<
length
;
++
i
)
{
typeParameter
.
annotations
[
i
]
.
traverse
(
this
,
(
BlockScope
)
null
)
;
}
}
if
(
typeParameter
.
bounds
!=
null
)
{
int
length
=
typeParameter
.
bounds
.
length
;
final
Set
<
CtTypeReference
<
?
>
>
bounds
=
new
TreeSet
<
>
(
)
;
bounds
.
add
(
typeParameterRef
.
getBoundingType
(
)
)
;
for
(
int
i
=
0
;
i
<
length
;
++
i
)
{
bounds
.
add
(
this
.
references
.
buildTypeReference
(
typeParameter
.
bounds
[
i
]
,
(
BlockScope
)
null
)
)
;
}
typeParameterRef
.
setBoundingType
(
factory
.
Type
(
)
.
createIntersectionTypeReferenceWithBounds
(
bounds
)
)
;
}
return
false
;
}
