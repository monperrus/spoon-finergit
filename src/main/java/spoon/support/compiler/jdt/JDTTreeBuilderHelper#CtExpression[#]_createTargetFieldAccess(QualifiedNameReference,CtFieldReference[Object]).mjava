/** 
 * Creates the target of a field access.
 * @param qualifiedNameReference Used to get the declaring class of the target.
 * @param ref Used in a static context.
 * @return an expression.
 */
CtExpression
<
?
>
createTargetFieldAccess
(
QualifiedNameReference
qualifiedNameReference
,
CtFieldReference
<
Object
>
ref
)
{
CtExpression
<
?
>
target
=
null
;
if
(
JDTTreeBuilderQuery
.
isValidProblemBindingField
(
qualifiedNameReference
)
)
{
target
=
createTypeAccessNoClasspath
(
qualifiedNameReference
)
;
}
else
if
(
ref
.
isStatic
(
)
)
{
target
=
createTypeAccess
(
qualifiedNameReference
,
ref
)
;
}
else
if
(
!
ref
.
isStatic
(
)
&&
!
ref
.
getDeclaringType
(
)
.
isAnonymous
(
)
)
{
target
=
jdtTreeBuilder
.
getFactory
(
)
.
Code
(
)
.
createThisAccess
(
jdtTreeBuilder
.
getReferencesBuilder
(
)
.
getTypeReference
(
qualifiedNameReference
.
actualReceiverType
)
,
true
)
;
}
return
target
;
}
