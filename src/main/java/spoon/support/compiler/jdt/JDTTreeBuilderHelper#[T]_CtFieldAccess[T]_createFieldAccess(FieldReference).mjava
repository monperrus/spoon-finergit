/** 
 * Creates a field access from a field reference.
 * @param fieldReference Used to build the spoon variable reference and the type of the field access.
 * @return a field access.
 */
<
T
>
CtFieldAccess
<
T
>
createFieldAccess
(
FieldReference
fieldReference
)
{
CtFieldAccess
<
T
>
fieldAccess
;
if
(
isLhsAssignment
(
jdtTreeBuilder
.
getContextBuilder
(
)
,
fieldReference
)
)
{
fieldAccess
=
jdtTreeBuilder
.
getFactory
(
)
.
Core
(
)
.
createFieldWrite
(
)
;
}
else
{
fieldAccess
=
jdtTreeBuilder
.
getFactory
(
)
.
Core
(
)
.
createFieldRead
(
)
;
}
fieldAccess
.
setVariable
(
jdtTreeBuilder
.
getReferencesBuilder
(
)
.
getVariableReference
(
fieldReference
.
binding
,
fieldReference
.
token
)
)
;
fieldAccess
.
setType
(
jdtTreeBuilder
.
getReferencesBuilder
(
)
.
getTypeReference
(
fieldReference
.
resolvedType
)
)
;
return
fieldAccess
;
}
