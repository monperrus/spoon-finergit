/** 
 * In no classpath mode, when we build a field access, we have a binding typed by ProblemBinding. This binding doesn't contain all information but we can get some of them.
 * @param singleNameReference Used to get the problem binding of the field access and the name of the declaring type.
 * @return a field access.
 */
<
T
>
CtFieldAccess
<
T
>
createFieldAccessNoClasspath
(
SingleNameReference
singleNameReference
)
{
CtFieldAccess
<
T
>
va
;
if
(
isLhsAssignment
(
jdtTreeBuilder
.
getContextBuilder
(
)
,
singleNameReference
)
)
{
va
=
jdtTreeBuilder
.
getFactory
(
)
.
Core
(
)
.
createFieldWrite
(
)
;
}
else
{
va
=
jdtTreeBuilder
.
getFactory
(
)
.
Core
(
)
.
createFieldRead
(
)
;
}
va
.
setVariable
(
jdtTreeBuilder
.
getReferencesBuilder
(
)
.
getVariableReference
(
(
ProblemBinding
)
singleNameReference
.
binding
)
)
;
final
CtReference
declaring
=
jdtTreeBuilder
.
getReferencesBuilder
(
)
.
getDeclaringReferenceFromImports
(
singleNameReference
.
token
)
;
if
(
declaring
instanceof
CtTypeReference
&&
va
.
getVariable
(
)
!=
null
)
{
final
CtTypeReference
<
Object
>
declaringRef
=
(
CtTypeReference
<
Object
>
)
declaring
;
va
.
setTarget
(
jdtTreeBuilder
.
getFactory
(
)
.
Code
(
)
.
createTypeAccess
(
declaringRef
,
true
)
)
;
va
.
getVariable
(
)
.
setDeclaringType
(
declaringRef
)
;
va
.
getVariable
(
)
.
setStatic
(
true
)
;
}
return
va
;
}
