@Override
public
<
T
>
void
visitCtBinaryOperator
(
CtBinaryOperator
<
T
>
operator
)
{
if
(
child
instanceof
CtExpression
)
{
if
(
operator
.
getLeftHandOperand
(
)
==
null
)
{
operator
.
setLeftHandOperand
(
(
CtExpression
<
?
>
)
child
)
;
return
;
}
else
if
(
operator
.
getRightHandOperand
(
)
==
null
)
{
operator
.
setRightHandOperand
(
(
CtExpression
<
?
>
)
child
)
;
return
;
}
else
if
(
jdtTreeBuilder
.
getContextBuilder
(
)
.
stack
.
peek
(
)
.
node
instanceof
StringLiteralConcatenation
)
{
CtBinaryOperator
<
?
>
op
=
operator
.
getFactory
(
)
.
Core
(
)
.
createBinaryOperator
(
)
;
op
.
setKind
(
BinaryOperatorKind
.
PLUS
)
;
op
.
setLeftHandOperand
(
operator
.
getRightHandOperand
(
)
)
;
op
.
setRightHandOperand
(
(
CtExpression
<
?
>
)
child
)
;
operator
.
setRightHandOperand
(
op
)
;
return
;
}
}
super
.
visitCtBinaryOperator
(
operator
)
;
}
