@Override
public
<
T
>
void
visitCtNewClass
(
CtNewClass
<
T
>
newClass
)
{
if
(
child
instanceof
CtClass
)
{
newClass
.
setAnonymousClass
(
(
CtClass
<
?
>
)
child
)
;
final
QualifiedAllocationExpression
node
=
(
QualifiedAllocationExpression
)
jdtTreeBuilder
.
getContextBuilder
(
)
.
stack
.
peek
(
)
.
node
;
final
ReferenceBinding
[
]
referenceBindings
=
node
.
resolvedType
==
null
?
null
:
node
.
resolvedType
.
superInterfaces
(
)
;
if
(
referenceBindings
!=
null
&&
referenceBindings
.
length
>
0
)
{
(
(
CtClass
<
?
>
)
child
)
.
setSuperInterfaces
(
Collections
.
singleton
(
cloneAsImplicit
(
newClass
.
getType
(
)
)
)
)
;
}
else
if
(
newClass
.
getType
(
)
!=
null
)
{
(
(
CtClass
<
?
>
)
child
)
.
setSuperclass
(
cloneAsImplicit
(
newClass
.
getType
(
)
)
)
;
}
return
;
}
super
.
visitCtNewClass
(
newClass
)
;
}
