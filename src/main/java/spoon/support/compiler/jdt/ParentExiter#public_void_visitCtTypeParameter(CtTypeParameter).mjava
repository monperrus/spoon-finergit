@Override
public
void
visitCtTypeParameter
(
CtTypeParameter
typeParameter
)
{
if
(
childJDT
instanceof
TypeReference
&&
child
instanceof
CtTypeAccess
)
{
if
(
typeParameter
.
getSuperclass
(
)
==
null
)
{
typeParameter
.
setSuperclass
(
(
(
CtTypeAccess
)
child
)
.
getAccessedType
(
)
)
;
}
else
if
(
typeParameter
.
getSuperclass
(
)
instanceof
CtIntersectionTypeReference
)
{
typeParameter
.
getSuperclass
(
)
.
asCtIntersectionTypeReference
(
)
.
addBound
(
(
(
CtTypeAccess
)
child
)
.
getAccessedType
(
)
)
;
}
else
{
final
List
<
CtTypeReference
<
?
>
>
refs
=
new
ArrayList
<
>
(
)
;
refs
.
add
(
typeParameter
.
getSuperclass
(
)
)
;
refs
.
add
(
(
(
CtTypeAccess
)
child
)
.
getAccessedType
(
)
)
;
typeParameter
.
setSuperclass
(
jdtTreeBuilder
.
getFactory
(
)
.
Type
(
)
.
createIntersectionTypeReferenceWithBounds
(
refs
)
)
;
}
return
;
}
super
.
visitCtTypeParameter
(
typeParameter
)
;
}
