private
int
getSourceEndOfTypeReference
(
char
[
]
contents
,
TypeReference
node
,
int
sourceEnd
)
{
TypeReference
[
]
[
]
typeArgs
=
node
.
getTypeArguments
(
)
;
if
(
typeArgs
!=
null
&&
typeArgs
.
length
>
0
)
{
TypeReference
[
]
trs
=
typeArgs
[
typeArgs
.
length
-
1
]
;
if
(
trs
!=
null
&&
trs
.
length
>
0
)
{
TypeReference
tr
=
trs
[
trs
.
length
-
1
]
;
if
(
sourceEnd
<
tr
.
sourceEnd
)
{
sourceEnd
=
findNextNonWhitespace
(
contents
,
contents
.
length
-
1
,
getSourceEndOfTypeReference
(
contents
,
tr
,
tr
.
sourceEnd
)
+
1
)
;
}
}
else
{
int
startIdx
=
findNextNonWhitespace
(
contents
,
contents
.
length
-
1
,
sourceEnd
+
1
)
;
if
(
startIdx
!=
-
1
&&
contents
[
startIdx
]
==
'<'
)
{
int
endIdx
=
findNextNonWhitespace
(
contents
,
contents
.
length
-
1
,
startIdx
+
1
)
;
if
(
endIdx
!=
-
1
&&
contents
[
endIdx
]
==
'>'
)
{
sourceEnd
=
endIdx
;
}
}
}
}
if
(
node
instanceof
Wildcard
)
{
Wildcard
wildcard
=
(
Wildcard
)
node
;
if
(
wildcard
.
bound
!=
null
)
{
sourceEnd
=
getSourceEndOfTypeReference
(
contents
,
wildcard
.
bound
,
sourceEnd
)
;
}
}
return
sourceEnd
;
}
