<
T
>
CtExecutableReference
<
T
>
getExecutableReference
(
AllocationExpression
allocationExpression
)
{
CtExecutableReference
<
T
>
ref
;
if
(
allocationExpression
.
binding
!=
null
)
{
ref
=
getExecutableReference
(
allocationExpression
.
binding
)
;
}
else
{
ref
=
jdtTreeBuilder
.
getFactory
(
)
.
Core
(
)
.
createExecutableReference
(
)
;
ref
.
setSimpleName
(
CtExecutableReference
.
CONSTRUCTOR_NAME
)
;
ref
.
setDeclaringType
(
getTypeReference
(
null
,
allocationExpression
.
type
)
)
;
final
List
<
CtTypeReference
<
?
>
>
parameters
=
new
ArrayList
<
>
(
allocationExpression
.
argumentTypes
.
length
)
;
for
(
TypeBinding
b
:
allocationExpression
.
argumentTypes
)
{
parameters
.
add
(
getTypeReference
(
b
,
true
)
)
;
}
ref
.
setParameters
(
parameters
)
;
}
if
(
allocationExpression
.
type
==
null
)
{
ref
.
setType
(
this
.
getTypeReference
(
allocationExpression
.
expectedType
(
)
,
true
)
)
;
}
return
ref
;
}
