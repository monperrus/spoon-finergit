public
DefaultMutableTreeNode
expandAll
(
final
DefaultMutableTreeNode
node
)
{
if
(
node
==
null
||
node
.
isLeaf
(
)
)
{
return
null
;
}
final
ExecutorService
executor
=
Executors
.
newSingleThreadExecutor
(
)
;
executor
.
execute
(
new
Runnable
(
)
{
public
void
run
(
)
{
try
{
final
Queue
<
DefaultMutableTreeNode
>
q
=
new
LinkedList
<
DefaultMutableTreeNode
>
(
)
;
q
.
add
(
node
)
;
while
(
!
q
.
isEmpty
(
)
)
{
final
DefaultMutableTreeNode
n
=
q
.
poll
(
)
;
if
(
n
==
null
)
{
break
;
}
SwingUtilities
.
invokeAndWait
(
new
Runnable
(
)
{
public
void
run
(
)
{
TreePath
path
=
new
TreePath
(
n
.
getPath
(
)
)
;
if
(
!
jTree
.
isExpanded
(
path
)
)
{
jTree
.
expandPath
(
path
)
;
}
for
(
Object
childObject
:
Collections
.
list
(
n
.
children
(
)
)
)
{
if
(
childObject
instanceof
DefaultMutableTreeNode
)
{
DefaultMutableTreeNode
child
=
(
DefaultMutableTreeNode
)
childObject
;
if
(
!
child
.
isLeaf
(
)
&&
child
.
getChildCount
(
)
>
0
)
{
q
.
offer
(
child
)
;
}
}
}
jTree
.
updateUI
(
)
;
}
}
)
;
}
}
catch
(
Exception
e
)
{
Launcher
.
logger
.
error
(
e
.
getMessage
(
)
,
e
)
;
}
finally
{
executor
.
shutdownNow
(
)
;
}
}
}
)
;
return
null
;
}
