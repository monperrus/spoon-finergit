public
static
void
insertBefore
(
CtStatement
target
,
CtStatementList
statementsToBeInserted
)
throws
ParentNotInitializedException
{
CtElement
targetParent
=
target
.
getParent
(
)
;
if
(
targetParent
instanceof
CtExecutable
)
{
throw
new
RuntimeException
(
"cannot insert in this context (use insertEnd?)"
)
;
}
CtBlock
<
?
>
parentBlock
;
if
(
targetParent
instanceof
CtIf
)
{
boolean
inThen
=
true
;
CtStatement
stat
=
(
(
CtIf
)
targetParent
)
.
getThenStatement
(
)
;
if
(
stat
!=
target
)
{
stat
=
(
(
CtIf
)
targetParent
)
.
getElseStatement
(
)
;
inThen
=
false
;
}
if
(
stat
!=
target
)
{
throw
new
IllegalArgumentException
(
"should not happen"
)
;
}
if
(
stat
instanceof
CtBlock
)
{
(
(
CtBlock
<
?
>
)
stat
)
.
insertBegin
(
statementsToBeInserted
)
;
return
;
}
else
{
CtBlock
<
?
>
block
=
target
.
getFactory
(
)
.
Core
(
)
.
createBlock
(
)
;
block
.
addStatement
(
stat
)
;
if
(
inThen
)
(
(
CtIf
)
targetParent
)
.
setThenStatement
(
block
)
;
else
(
(
CtIf
)
targetParent
)
.
setElseStatement
(
block
)
;
parentBlock
=
block
;
}
}
else
if
(
targetParent
instanceof
CtSwitch
)
{
for
(
CtStatement
s
:
statementsToBeInserted
)
{
if
(
!
(
s
instanceof
CtCase
)
)
{
throw
new
RuntimeException
(
"cannot insert something that is not case in a switch"
)
;
}
}
int
i
=
0
;
for
(
CtStatement
s
:
(
(
CtSwitch
<
?
>
)
targetParent
)
.
getCases
(
)
)
{
if
(
s
==
target
)
{
break
;
}
i
++
;
}
for
(
int
j
=
statementsToBeInserted
.
getStatements
(
)
.
size
(
)
-
1
;
j
>=
0
;
j
--
)
{
CtStatement
s
=
statementsToBeInserted
.
getStatements
(
)
.
get
(
j
)
;
(
(
CtSwitch
<
?
>
)
targetParent
)
.
getCases
(
)
.
add
(
i
,
(
CtCase
)
s
)
;
}
return
;
}
else
if
(
targetParent
instanceof
CtLoop
)
{
CtStatement
stat
=
(
(
CtLoop
)
targetParent
)
.
getBody
(
)
;
if
(
stat
instanceof
CtBlock
)
{
parentBlock
=
(
CtBlock
<
?
>
)
stat
;
(
(
CtBlock
<
?
>
)
stat
)
.
insertBegin
(
statementsToBeInserted
)
;
return
;
}
else
{
CtBlock
<
?
>
block
=
target
.
getFactory
(
)
.
Core
(
)
.
createBlock
(
)
;
block
.
getStatements
(
)
.
add
(
stat
)
;
(
(
CtLoop
)
targetParent
)
.
setBody
(
block
)
;
parentBlock
=
block
;
}
}
else
if
(
targetParent
instanceof
CtCase
)
{
int
i
=
0
;
for
(
CtStatement
s
:
(
(
CtCase
<
?
>
)
targetParent
)
.
getStatements
(
)
)
{
if
(
s
==
target
)
{
break
;
}
i
++
;
}
for
(
int
j
=
statementsToBeInserted
.
getStatements
(
)
.
size
(
)
-
1
;
j
>=
0
;
j
--
)
{
CtStatement
s
=
statementsToBeInserted
.
getStatements
(
)
.
get
(
j
)
;
(
(
CtCase
<
?
>
)
targetParent
)
.
getStatements
(
)
.
add
(
i
,
s
)
;
}
return
;
}
else
{
parentBlock
=
(
CtBlock
<
?
>
)
targetParent
;
}
if
(
!
(
parentBlock
instanceof
CtBlock
)
)
{
throw
new
RuntimeException
(
"can not add a statement that is not in a block"
)
;
}
int
indexOfTargetElement
=
0
;
for
(
CtStatement
s
:
parentBlock
.
getStatements
(
)
)
{
if
(
s
==
target
)
{
break
;
}
indexOfTargetElement
++
;
}
for
(
CtStatement
s
:
statementsToBeInserted
)
{
parentBlock
.
getStatements
(
)
.
add
(
indexOfTargetElement
++
,
s
)
;
}
}
