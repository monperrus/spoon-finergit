@Override
public
<
T
extends
CtExpression
>
T
getWrappedValue
(
String
key
)
{
CtExpression
ctExpression
=
this
.
getValue
(
key
)
;
CtTypeReference
typeReference
=
this
.
getAnnotationType
(
)
;
CtType
type
=
typeReference
.
getTypeDeclaration
(
)
;
if
(
type
!=
null
)
{
CtMethod
method
=
type
.
getMethod
(
key
)
;
if
(
method
!=
null
)
{
CtTypeReference
returnType
=
method
.
getType
(
)
;
if
(
returnType
instanceof
CtArrayTypeReference
&&
!
(
ctExpression
instanceof
CtNewArray
)
)
{
CtNewArray
newArray
=
getFactory
(
)
.
Core
(
)
.
createNewArray
(
)
;
CtArrayTypeReference
typeReference2
=
this
.
getFactory
(
)
.
createArrayTypeReference
(
)
;
typeReference2
.
setComponentType
(
ctExpression
.
getType
(
)
.
clone
(
)
)
;
newArray
.
setType
(
typeReference2
)
;
newArray
.
addElement
(
ctExpression
.
clone
(
)
)
;
return
(
T
)
newArray
;
}
}
}
return
(
T
)
ctExpression
;
}
