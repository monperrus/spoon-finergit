@Override
public
List
<
File
>
getBinaryFiles
(
)
{
final
List
<
File
>
binaries
=
new
ArrayList
<
>
(
)
;
final
String
output
=
getFactory
(
)
.
getEnvironment
(
)
.
getBinaryOutputDirectory
(
)
;
if
(
output
!=
null
)
{
final
File
base
=
Paths
.
get
(
output
,
getDeclaredPackage
(
)
.
getQualifiedName
(
)
.
replace
(
"."
,
File
.
separator
)
)
.
toFile
(
)
;
if
(
base
.
isDirectory
(
)
)
{
for
(
final
CtType
type
:
getDeclaredTypes
(
)
)
{
final
String
nameOfType
=
type
.
getSimpleName
(
)
;
final
File
fileOfType
=
new
File
(
base
,
nameOfType
+
".class"
)
;
if
(
fileOfType
.
isFile
(
)
)
{
binaries
.
add
(
fileOfType
)
;
}
for
(
final
CtType
inner
:
type
.
getElements
(
new
TypeFilter
<
>
(
CtType
.
class
)
)
)
{
if
(
!
inner
.
equals
(
type
)
)
{
final
String
nameOfInner
=
nameOfType
+
"$"
+
inner
.
getSimpleName
(
)
;
final
File
fileOfInnerType
=
new
File
(
base
,
nameOfInner
+
".class"
)
;
if
(
fileOfInnerType
.
isFile
(
)
)
{
binaries
.
add
(
fileOfInnerType
)
;
}
}
}
}
}
}
return
binaries
;
}
