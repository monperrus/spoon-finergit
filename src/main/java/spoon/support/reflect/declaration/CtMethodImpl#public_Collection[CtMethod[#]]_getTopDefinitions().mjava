@Override
public
Collection
<
CtMethod
<
?
>
>
getTopDefinitions
(
)
{
List
<
CtMethod
<
?
>
>
s
=
new
ArrayList
<
>
(
)
;
ClassTypingContext
context
=
new
ClassTypingContext
(
this
.
getDeclaringType
(
)
)
;
getDeclaringType
(
)
.
map
(
new
AllTypeMembersFunction
(
CtMethod
.
class
)
)
.
forEach
(
(
CtMethod
<
?
>
m
)
->
{
if
(
m
!=
this
&&
context
.
isOverriding
(
this
,
m
)
)
{
s
.
add
(
m
)
;
}
}
)
;
List
<
CtMethod
<
?
>
>
finalMeths
=
new
ArrayList
<
>
(
s
)
;
for
(
CtMethod
m1
:
s
)
{
boolean
m1IsIntermediate
=
false
;
for
(
CtMethod
m2
:
s
)
{
if
(
context
.
isOverriding
(
m1
,
m2
)
)
{
m1IsIntermediate
=
true
;
}
}
if
(
!
m1IsIntermediate
)
{
finalMeths
.
add
(
m1
)
;
}
}
return
finalMeths
;
}
