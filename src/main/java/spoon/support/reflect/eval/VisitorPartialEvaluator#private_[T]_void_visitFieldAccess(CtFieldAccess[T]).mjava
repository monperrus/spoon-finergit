private
<
T
>
void
visitFieldAccess
(
CtFieldAccess
<
T
>
fieldAccess
)
{
if
(
"class"
.
equals
(
fieldAccess
.
getVariable
(
)
.
getSimpleName
(
)
)
)
{
Class
<
?
>
actualClass
=
fieldAccess
.
getVariable
(
)
.
getDeclaringType
(
)
.
getActualClass
(
)
;
if
(
actualClass
!=
null
)
{
CtLiteral
<
Class
<
?
>
>
literal
=
fieldAccess
.
getFactory
(
)
.
Core
(
)
.
createLiteral
(
)
;
literal
.
setValue
(
actualClass
)
;
setResult
(
literal
)
;
return
;
}
}
if
(
"length"
.
equals
(
fieldAccess
.
getVariable
(
)
.
getSimpleName
(
)
)
)
{
CtExpression
<
?
>
target
=
fieldAccess
.
getTarget
(
)
;
if
(
target
instanceof
CtNewArray
<
?
>
)
{
CtNewArray
<
?
>
newArr
=
(
CtNewArray
<
?
>
)
target
;
CtLiteral
<
Number
>
literal
=
fieldAccess
.
getFactory
(
)
.
createLiteral
(
newArr
.
getElements
(
)
.
size
(
)
)
;
setResult
(
literal
)
;
return
;
}
}
if
(
fieldAccess
.
getFactory
(
)
.
Type
(
)
.
ENUM
.
isSubtypeOf
(
fieldAccess
.
getVariable
(
)
.
getDeclaringType
(
)
)
)
{
CtLiteral
<
CtFieldReference
<
?
>
>
l
=
fieldAccess
.
getFactory
(
)
.
Core
(
)
.
createLiteral
(
)
;
l
.
setValue
(
fieldAccess
.
getVariable
(
)
)
;
setResult
(
l
)
;
return
;
}
CtField
<
?
>
f
=
fieldAccess
.
getVariable
(
)
.
getDeclaration
(
)
;
if
(
(
f
!=
null
)
&&
f
.
getModifiers
(
)
.
contains
(
ModifierKind
.
FINAL
)
)
{
setResult
(
evaluate
(
f
.
getDefaultExpression
(
)
)
)
;
return
;
}
setResult
(
fieldAccess
.
clone
(
)
)
;
}
