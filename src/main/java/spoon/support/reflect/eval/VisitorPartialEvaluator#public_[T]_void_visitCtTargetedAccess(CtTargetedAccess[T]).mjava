public
<
T
>
void
visitCtTargetedAccess
(
CtTargetedAccess
<
T
>
targetedAccess
)
{
if
(
targetedAccess
.
getVariable
(
)
.
getSimpleName
(
)
.
equals
(
"class"
)
)
{
Class
<
?
>
c
=
targetedAccess
.
getVariable
(
)
.
getDeclaringType
(
)
.
getActualClass
(
)
;
if
(
c
!=
null
)
{
CtLiteral
<
Class
<
?
>
>
l
=
targetedAccess
.
getFactory
(
)
.
Core
(
)
.
createLiteral
(
)
;
l
.
setValue
(
c
)
;
setResult
(
l
)
;
return
;
}
}
if
(
targetedAccess
.
getFactory
(
)
.
Type
(
)
.
createReference
(
Enum
.
class
)
.
isAssignableFrom
(
targetedAccess
.
getVariable
(
)
.
getDeclaringType
(
)
)
)
{
CtLiteral
<
CtFieldReference
<
?
>
>
l
=
targetedAccess
.
getFactory
(
)
.
Core
(
)
.
createLiteral
(
)
;
l
.
setValue
(
targetedAccess
.
getVariable
(
)
)
;
setResult
(
l
)
;
return
;
}
CtField
<
?
>
f
=
targetedAccess
.
getVariable
(
)
.
getDeclaration
(
)
;
if
(
(
f
!=
null
)
&&
f
.
getModifiers
(
)
.
contains
(
ModifierKind
.
FINAL
)
)
{
setResult
(
evaluate
(
f
,
f
.
getDefaultExpression
(
)
)
)
;
return
;
}
setResult
(
targetedAccess
.
getFactory
(
)
.
Core
(
)
.
clone
(
targetedAccess
)
)
;
}
