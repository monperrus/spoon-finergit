private
BranchingPoint
getBranchingPoint
(
CtElement
...
branches
)
{
if
(
!
branchingPoints
.
isEmpty
(
)
)
{
boolean
first
=
true
;
do
{
BranchingPoint
bp
=
branchingPoints
.
peek
(
)
;
if
(
bp
.
stack
.
equals
(
stack
)
&&
bp
.
branches
.
equals
(
Arrays
.
asList
(
branches
)
)
)
{
bp
.
nextBranch
(
)
;
return
bp
;
}
first
=
false
;
}
while
(
!
branchingPoints
.
isEmpty
(
)
&&
first
)
;
for
(
int
i
=
branchingPoints
.
size
(
)
-
2
;
i
>=
0
;
i
--
)
{
BranchingPoint
bp
=
branchingPoints
.
get
(
i
)
;
if
(
bp
.
stack
.
equals
(
stack
)
&&
bp
.
branches
.
equals
(
Arrays
.
asList
(
branches
)
)
)
{
return
bp
;
}
}
}
BranchingPoint
bp
=
new
BranchingPoint
(
stack
,
branches
)
;
branchingPoints
.
push
(
bp
)
;
return
bp
;
}
