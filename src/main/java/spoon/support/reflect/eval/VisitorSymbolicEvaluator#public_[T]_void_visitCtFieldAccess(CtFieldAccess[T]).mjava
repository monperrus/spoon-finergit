public
<
T
>
void
visitCtFieldAccess
(
CtFieldAccess
<
T
>
fieldAccess
)
{
if
(
fieldAccess
.
getVariable
(
)
.
getSimpleName
(
)
.
equals
(
"this"
)
)
{
result
=
stack
.
getThis
(
)
;
return
;
}
if
(
fieldAccess
.
getVariable
(
)
.
getSimpleName
(
)
.
equals
(
"class"
)
)
{
SymbolicInstance
<
?
>
type
=
heap
.
getType
(
this
,
fieldAccess
.
getType
(
)
)
;
result
=
type
;
return
;
}
SymbolicInstance
<
?
>
target
=
evaluate
(
fieldAccess
.
getTarget
(
)
)
;
if
(
target
==
null
)
{
if
(
isAccessible
(
fieldAccess
.
getVariable
(
)
)
)
{
target
=
stack
.
getThis
(
)
;
}
}
if
(
target
!=
null
&&
!
target
.
isExternal
(
)
)
{
result
=
heap
.
get
(
target
.
getFieldValue
(
fieldAccess
.
getVariable
(
)
)
)
;
}
else
{
SymbolicInstance
<
T
>
i
=
new
SymbolicInstance
<
T
>
(
this
,
fieldAccess
.
getType
(
)
,
false
)
;
result
=
i
;
}
}
