public
void
invoke
(
CtExecutable
<
?
>
executable
)
{
Factory
f
=
executable
.
getFactory
(
)
;
List
<
SymbolicInstance
<
?
>
>
args
=
new
ArrayList
<
SymbolicInstance
<
?
>
>
(
)
;
for
(
CtParameter
<
?
>
p
:
executable
.
getParameters
(
)
)
{
SymbolicInstance
<
?
>
arg
=
f
.
Eval
(
)
.
createSymbolicInstance
(
this
,
p
.
getType
(
)
,
false
)
;
getHeap
(
)
.
store
(
arg
)
;
args
.
add
(
arg
)
;
}
SymbolicInstance
<
?
>
target
=
f
.
Eval
(
)
.
createSymbolicInstance
(
this
,
executable
.
getDeclaringType
(
)
.
getReference
(
)
,
executable
.
getModifiers
(
)
.
contains
(
ModifierKind
.
STATIC
)
)
;
CtSimpleType
<
?
>
targetType
=
executable
.
getDeclaringType
(
)
;
for
(
CtField
<
?
>
field
:
targetType
.
getFields
(
)
)
{
if
(
!
field
.
getModifiers
(
)
.
contains
(
ModifierKind
.
STATIC
)
&&
executable
.
getModifiers
(
)
.
contains
(
ModifierKind
.
STATIC
)
)
{
continue
;
}
CtVariableReference
<
?
>
fref
=
field
.
getReference
(
)
;
SymbolicInstance
<
?
>
si
=
f
.
Eval
(
)
.
createSymbolicInstance
(
this
,
fref
.
getType
(
)
,
false
)
;
target
.
setFieldValue
(
getHeap
(
)
,
fref
,
si
)
;
}
getHeap
(
)
.
store
(
target
)
;
invoke
(
target
,
executable
,
args
)
;
}
