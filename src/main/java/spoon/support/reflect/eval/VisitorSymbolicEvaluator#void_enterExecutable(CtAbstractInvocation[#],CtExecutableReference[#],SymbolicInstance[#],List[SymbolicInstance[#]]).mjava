void
enterExecutable
(
CtAbstractInvocation
<
?
>
caller
,
CtExecutableReference
<
?
>
eref
,
SymbolicInstance
<
?
>
target
,
List
<
SymbolicInstance
<
?
>
>
args
)
{
Map
<
CtVariableReference
<
?
>
,
SymbolicInstance
<
?
>
>
variables
=
new
HashMap
<
CtVariableReference
<
?
>
,
SymbolicInstance
<
?
>
>
(
)
;
CtExecutable
<
?
>
e
=
eref
.
getDeclaration
(
)
;
if
(
e
!=
null
)
{
int
i
=
0
;
for
(
CtVariable
<
?
>
v
:
e
.
getParameters
(
)
)
{
variables
.
put
(
v
.
getReference
(
)
,
args
.
get
(
i
++
)
)
;
}
for
(
CtVariable
<
?
>
v
:
Query
.
getElements
(
e
.
getBody
(
)
,
new
TypeFilter
<
CtVariable
<
?
>
>
(
CtVariable
.
class
)
)
)
{
variables
.
put
(
v
.
getReference
(
)
,
null
)
;
}
}
stack
.
enterFrame
(
caller
,
target
,
eref
,
args
,
variables
)
;
notifyEnterStep
(
new
SymbolicEvaluationStep
(
StepKind
.
ENTER
,
new
SymbolicStackFrame
(
getStack
(
)
.
getFrameStack
(
)
.
peek
(
)
)
,
new
SymbolicHeap
(
getHeap
(
)
)
)
)
;
}
