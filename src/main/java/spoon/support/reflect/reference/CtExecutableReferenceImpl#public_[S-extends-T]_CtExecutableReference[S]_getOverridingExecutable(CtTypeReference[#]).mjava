@SuppressWarnings("unchecked")
public
<
S
extends
T
>
CtExecutableReference
<
S
>
getOverridingExecutable
(
CtTypeReference
<
?
>
subType
)
{
if
(
(
subType
==
null
)
||
subType
.
equals
(
getDeclaringType
(
)
)
)
{
return
null
;
}
CtSimpleType
<
?
>
t
=
(
CtSimpleType
<
?
>
)
subType
.
getDeclaration
(
)
;
if
(
t
==
null
)
{
return
null
;
}
if
(
!
(
t
instanceof
CtClass
)
)
{
return
null
;
}
CtClass
<
?
>
c
=
(
CtClass
<
?
>
)
t
;
for
(
CtMethod
<
?
>
m
:
c
.
getMethods
(
)
)
{
if
(
m
.
getReference
(
)
.
isOverriding
(
this
)
)
{
return
(
CtExecutableReference
<
S
>
)
m
.
getReference
(
)
;
}
}
return
getOverridingExecutable
(
c
.
getSuperclass
(
)
)
;
}
