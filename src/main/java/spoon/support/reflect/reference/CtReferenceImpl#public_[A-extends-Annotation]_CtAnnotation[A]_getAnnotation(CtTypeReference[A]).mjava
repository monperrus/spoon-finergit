@Override
public
<
A
extends
Annotation
>
CtAnnotation
<
A
>
getAnnotation
(
CtTypeReference
<
A
>
annotationType
)
{
CtElement
e
=
getDeclaration
(
)
;
if
(
e
!=
null
)
{
return
e
.
getAnnotation
(
annotationType
)
;
}
else
{
try
{
Class
<
A
>
ac
=
annotationType
.
getActualClass
(
)
;
A
a
=
getActualAnnotatedElement
(
)
.
getAnnotation
(
ac
)
;
Map
<
String
,
Object
>
values
=
new
HashMap
<
String
,
Object
>
(
)
;
for
(
Method
m
:
ac
.
getMethods
(
)
)
{
Object
value
;
value
=
m
.
invoke
(
a
)
;
if
(
value
instanceof
Class
)
{
Class
<
?
>
clazz
=
(
Class
<
?
>
)
value
;
values
.
put
(
m
.
getName
(
)
,
getFactory
(
)
.
Type
(
)
.
createReference
(
clazz
)
)
;
}
else
{
values
.
put
(
m
.
getName
(
)
,
value
)
;
}
}
CtAnnotation
<
A
>
ctAnnotation
=
getFactory
(
)
.
Core
(
)
.
createAnnotation
(
)
;
ctAnnotation
.
setElementValues
(
values
)
;
return
ctAnnotation
;
}
catch
(
Exception
ex
)
{
Launcher
.
logger
.
error
(
ex
.
getMessage
(
)
,
ex
)
;
return
null
;
}
}
}
