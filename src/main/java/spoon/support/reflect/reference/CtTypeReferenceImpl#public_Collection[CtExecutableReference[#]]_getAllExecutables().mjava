public
Collection
<
CtExecutableReference
<
?
>
>
getAllExecutables
(
)
{
Collection
<
CtExecutableReference
<
?
>
>
l
=
new
ArrayList
<
CtExecutableReference
<
?
>
>
(
)
;
CtSimpleType
<
T
>
t
=
getDeclaration
(
)
;
if
(
t
==
null
)
{
Class
<
?
>
c
=
getActualClass
(
)
;
for
(
Method
m
:
c
.
getDeclaredMethods
(
)
)
{
l
.
add
(
getFactory
(
)
.
Method
(
)
.
createReference
(
m
)
)
;
}
Class
<
?
>
sc
=
c
.
getSuperclass
(
)
;
if
(
sc
!=
null
)
{
l
.
addAll
(
getFactory
(
)
.
Type
(
)
.
createReference
(
sc
)
.
getAllExecutables
(
)
)
;
}
}
else
{
if
(
t
instanceof
CtType
)
{
for
(
CtMethod
<
?
>
m
:
(
(
CtType
<
?
>
)
t
)
.
getMethods
(
)
)
{
l
.
add
(
m
.
getReference
(
)
)
;
}
}
if
(
t
instanceof
CtClass
)
{
for
(
CtConstructor
<
T
>
c
:
(
(
CtClass
<
T
>
)
t
)
.
getConstructors
(
)
)
{
l
.
add
(
c
.
getReference
(
)
)
;
}
CtTypeReference
<
?
>
st
=
(
(
CtClass
<
?
>
)
t
)
.
getSuperclass
(
)
;
if
(
st
!=
null
)
{
l
.
addAll
(
st
.
getAllExecutables
(
)
)
;
}
}
}
return
l
;
}
