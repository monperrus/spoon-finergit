@Override
public
CtTypeReference
<
?
>
unbox
(
)
{
if
(
isPrimitive
(
)
)
{
return
this
;
}
Class
<
T
>
actualClass
;
try
{
actualClass
=
getActualClass
(
)
;
}
catch
(
SpoonClassNotFoundException
e
)
{
return
this
;
}
if
(
actualClass
==
Integer
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
int
.
class
)
;
}
if
(
actualClass
==
Float
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
float
.
class
)
;
}
if
(
actualClass
==
Long
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
long
.
class
)
;
}
if
(
actualClass
==
Character
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
char
.
class
)
;
}
if
(
actualClass
==
Double
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
double
.
class
)
;
}
if
(
actualClass
==
Boolean
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
boolean
.
class
)
;
}
if
(
actualClass
==
Short
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
short
.
class
)
;
}
if
(
actualClass
==
Byte
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
byte
.
class
)
;
}
if
(
actualClass
==
Void
.
class
)
{
return
getFactory
(
)
.
Type
(
)
.
createReference
(
void
.
class
)
;
}
return
this
;
}
