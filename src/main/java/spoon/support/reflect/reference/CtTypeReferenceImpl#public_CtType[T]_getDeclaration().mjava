@Override
@SuppressWarnings("unchecked")
public
CtType
<
T
>
getDeclaration
(
)
{
if
(
!
isPrimitive
(
)
&&
!
isAnonymous
(
)
)
{
return
(
CtType
<
T
>
)
getFactory
(
)
.
Type
(
)
.
get
(
getQualifiedName
(
)
)
;
}
if
(
!
isPrimitive
(
)
&&
isAnonymous
(
)
)
{
final
CtType
<
?
>
rootType
=
getFactory
(
)
.
Type
(
)
.
get
(
getDeclaringType
(
)
.
getQualifiedName
(
)
)
;
final
List
<
CtNewClass
<
T
>
>
elements
=
rootType
.
getElements
(
new
AbstractFilter
<
CtNewClass
<
T
>
>
(
CtNewClass
.
class
)
{
@Override
public
boolean
matches
(
CtNewClass
<
T
>
element
)
{
return
getQualifiedName
(
)
.
equals
(
element
.
getAnonymousClass
(
)
.
getQualifiedName
(
)
)
;
}
}
)
;
if
(
elements
.
size
(
)
==
0
)
{
return
null
;
}
return
(
CtType
<
T
>
)
elements
.
get
(
0
)
.
getAnonymousClass
(
)
;
}
return
null
;
}
