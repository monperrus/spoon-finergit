/** 
 * @param start the index of element with lower index which is checked and may be returned
 * @param test a {@link Predicate}, which is evaluated for each item of `fragments` starting from last one and ending with item in index `start`
 * @return index of found fragment, or -1 if not found
 */
static
int
findIndexOfPreviousFragment
(
List
<
SourceFragment
>
fragments
,
int
start
,
Predicate
<
SourceFragment
>
test
)
{
int
i
=
fragments
.
size
(
)
-
1
;
while
(
i
>=
start
)
{
if
(
test
.
test
(
fragments
.
get
(
i
)
)
)
{
return
i
;
}
i
--
;
}
return
-
1
;
}
