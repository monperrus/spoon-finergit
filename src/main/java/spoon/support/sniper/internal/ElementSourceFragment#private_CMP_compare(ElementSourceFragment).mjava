/** 
 * compares this and other
 * @param other other {@link SourcePosition}
 * @return CMPthrows  {@link SpoonException} if intervals overlap or start/end is negative
 */
private
CMP
compare
(
ElementSourceFragment
other
)
{
if
(
other
==
this
)
{
throw
new
SpoonException
(
"SourcePositionImpl#addNextSibling must not be called twice for the same SourcePosition"
)
;
}
if
(
getEnd
(
)
<=
other
.
getStart
(
)
)
{
return
CMP
.
OTHER_IS_AFTER
;
}
if
(
other
.
getEnd
(
)
<=
getStart
(
)
)
{
return
CMP
.
OTHER_IS_BEFORE
;
}
if
(
getStart
(
)
<=
other
.
getStart
(
)
&&
getEnd
(
)
>=
other
.
getEnd
(
)
)
{
return
CMP
.
OTHER_IS_CHILD
;
}
if
(
getStart
(
)
>=
other
.
getStart
(
)
&&
getEnd
(
)
<=
other
.
getEnd
(
)
)
{
return
CMP
.
OTHER_IS_PARENT
;
}
throw
new
SpoonException
(
"Cannot compare this: ["
+
getStart
(
)
+
", "
+
getEnd
(
)
+
"] with other: [\""
+
other
.
getStart
(
)
+
"\", \""
+
other
.
getEnd
(
)
+
"\"]"
)
;
}
