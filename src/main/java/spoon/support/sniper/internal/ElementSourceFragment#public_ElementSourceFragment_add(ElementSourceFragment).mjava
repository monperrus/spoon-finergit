/** 
 * adds `other`  {@link ElementSourceFragment} into tree of {@link ElementSourceFragment}s represented by this root element
 * @param other to be added {@link ElementSourceFragment}
 * @return new root of the tree of the {@link ElementSourceFragment}s. It can be be this or `other`
 */
public
ElementSourceFragment
add
(
ElementSourceFragment
other
)
{
if
(
this
==
other
)
{
throw
new
SpoonException
(
"SourceFragment#add must not be called twice for the same SourceFragment"
)
;
}
CMP
cmp
=
this
.
compare
(
other
)
;
switch
(
cmp
)
{
case
OTHER_IS_AFTER
:
addNextSibling
(
other
)
;
return
this
;
case
OTHER_IS_BEFORE
:
other
.
addNextSibling
(
this
)
;
return
other
;
case
OTHER_IS_CHILD
:
addChild
(
other
)
;
return
this
;
case
OTHER_IS_PARENT
:
other
.
merge
(
this
)
;
return
other
;
}
throw
new
SpoonException
(
"Unexpected compare result: "
+
cmp
)
;
}
