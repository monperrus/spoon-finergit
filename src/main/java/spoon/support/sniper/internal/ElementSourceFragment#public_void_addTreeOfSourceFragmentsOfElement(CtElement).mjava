/** 
 * Builds tree of  {@link SourcePosition}s of `element` and all it's children
 * @param element the root element of the tree
 */
public
void
addTreeOfSourceFragmentsOfElement
(
CtElement
element
)
{
SourcePosition
sp
=
element
.
getPosition
(
)
;
Deque
<
ElementSourceFragment
>
parents
=
new
ArrayDeque
<
>
(
)
;
parents
.
push
(
this
)
;
new
CtScanner
(
)
{
CtRole
scannedRole
;
@Override
public
void
scan
(
CtRole
role
,
CtElement
element
)
{
scannedRole
=
role
;
super
.
scan
(
role
,
element
)
;
}
@Override
protected
void
enter
(
CtElement
e
)
{
ElementSourceFragment
newFragment
=
addChild
(
parents
.
peek
(
)
,
scannedRole
,
e
)
;
if
(
newFragment
!=
null
)
{
parents
.
push
(
newFragment
)
;
if
(
e
instanceof
CtModifiable
)
{
CtModifiable
modifiable
=
(
CtModifiable
)
e
;
Set
<
CtExtendedModifier
>
modifiers
=
modifiable
.
getExtendedModifiers
(
)
;
for
(
CtExtendedModifier
ctExtendedModifier
:
modifiers
)
{
addChild
(
newFragment
,
CtRole
.
MODIFIER
,
ctExtendedModifier
)
;
}
}
}
}
@Override
protected
void
exit
(
CtElement
e
)
{
ElementSourceFragment
topFragment
=
parents
.
peek
(
)
;
if
(
topFragment
!=
null
&&
topFragment
.
getElement
(
)
==
e
)
{
parents
.
pop
(
)
;
}
}
}
.
scan
(
element
.
getRoleInParent
(
)
,
element
)
;
}
