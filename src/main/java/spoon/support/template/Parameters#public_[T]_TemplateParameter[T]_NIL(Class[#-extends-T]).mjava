/** 
 * Creates an empty template parameter of the <code>T</code> type where {@link TemplateParameter#S()} does not return <code>null</code> in casethe template code needs to be executed such as in static initializers.
 */
@SuppressWarnings("unchecked")
public
static
<
T
>
TemplateParameter
<
T
>
NIL
(
Class
<
?
T
>
type
)
{
if
(
Number
.
class
.
isAssignableFrom
(
type
)
)
{
return
(
TemplateParameter
<
T
>
)
new
TemplateParameter
<
Number
>
(
)
{
public
CtCodeElement
getSubstitution
(
CtSimpleType
targetType
)
{
return
null
;
}
public
Number
S
(
)
{
return
0
;
}
}
;
}
return
new
TemplateParameter
<
T
>
(
)
{
public
CtCodeElement
getSubstitution
(
CtSimpleType
targetType
)
{
return
null
;
}
public
T
S
(
)
{
return
null
;
}
}
;
}
