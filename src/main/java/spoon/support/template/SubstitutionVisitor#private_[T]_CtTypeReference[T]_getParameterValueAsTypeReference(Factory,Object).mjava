/** 
 * Converts `parameterValue` to  {@link CtTypeReference}. It assures that new reference is returned. If parameterValue is already a  {@link CtTypeReference}, then it is cloned.
 * @param factory a Spoon factory used to create CtTypeReference instance - if needed
 * @param parameterValue a value of an template parameter
 * @return parameter value converted to {@link CtTypeReference}
 */
@SuppressWarnings("unchecked")
private
static
<
T
>
CtTypeReference
<
T
>
getParameterValueAsTypeReference
(
Factory
factory
,
Object
parameterValue
)
{
if
(
parameterValue
==
null
||
parameterValue
==
NULL_VALUE
)
{
throw
new
SpoonException
(
"The null value is not valid substitution for CtTypeReference"
)
;
}
if
(
parameterValue
instanceof
Class
)
{
return
factory
.
Type
(
)
.
createReference
(
(
Class
<
T
>
)
parameterValue
)
;
}
else
if
(
parameterValue
instanceof
CtTypeReference
)
{
return
(
(
CtTypeReference
<
T
>
)
parameterValue
)
.
clone
(
)
;
}
else
if
(
parameterValue
instanceof
CtType
)
{
return
(
(
CtType
<
T
>
)
parameterValue
)
.
getReference
(
)
;
}
else
if
(
parameterValue
instanceof
String
)
{
return
factory
.
Type
(
)
.
createReference
(
(
String
)
parameterValue
)
;
}
else
{
throw
new
RuntimeException
(
"unsupported reference substitution"
)
;
}
}
