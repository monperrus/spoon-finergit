/** 
 * 1) Converts `parameterValue` to List using these rules <ul> <li>Array is converted to List . <li> {@link Iterable} is converted to List .<li>Single item is add to list. </ul> 2) assures that each list item has expected type `itemClass` 3) if itemClass is sub type of CtElement then clones it
 * @param itemClass the type of the items of resulting list.If some item cannot be converted to the itemClass then  {@link SpoonException} is thrown
 * @param parameterValue a value of an template parameter
 * @return list where each item is assured to be of type itemClass
 */
@SuppressWarnings("unchecked")
private
static
<
T
>
List
<
T
>
getParameterValueAsListOfClones
(
Class
<
T
>
itemClass
,
Object
parameterValue
)
{
List
<
Object
>
list
=
getParameterValueAsNewList
(
parameterValue
)
;
for
(
int
i
=
0
;
i
<
list
.
size
(
)
;
i
++
)
{
list
.
set
(
i
,
getParameterValueAsClass
(
itemClass
,
list
.
get
(
i
)
)
)
;
}
return
(
List
<
T
>
)
list
;
}
