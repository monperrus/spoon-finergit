/** 
 * 1) Assures that parameterValue has expected type `itemClass` 2) if itemClass is sub type of CtElement then clones parameterValue
 * @param itemClass required return class
 * @param parameterValue a value of an template parameter
 * @return parameterValue cast (in future potentially converted) to itemClass
 */
@SuppressWarnings("unchecked")
private
static
<
T
>
T
getParameterValueAsClass
(
Class
<
T
>
itemClass
,
Object
parameterValue
)
{
if
(
parameterValue
==
null
||
parameterValue
==
NULL_VALUE
)
{
return
null
;
}
if
(
itemClass
.
isInstance
(
parameterValue
)
)
{
if
(
CtElement
.
class
.
isAssignableFrom
(
itemClass
)
)
{
parameterValue
=
(
(
CtElement
)
parameterValue
)
.
clone
(
)
;
}
return
(
T
)
parameterValue
;
}
throw
new
SpoonException
(
"Parameter value has unexpected class: "
+
parameterValue
.
getClass
(
)
.
getName
(
)
+
". Expected class is: "
+
itemClass
.
getName
(
)
)
;
}
