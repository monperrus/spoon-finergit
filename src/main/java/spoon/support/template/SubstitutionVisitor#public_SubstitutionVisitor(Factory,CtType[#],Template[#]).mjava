/** 
 * Creates new substitution visitor based on instance of Template, which defines template model and template parameters
 * @param f the factory
 * @param targetType the target type of the substitution (can be null)
 * @param template the template that holds the parameter values
 */
@SuppressWarnings({"unchecked","rawtypes"})
public
SubstitutionVisitor
(
Factory
f
,
CtType
<
?
>
targetType
,
Template
<
?
>
template
)
{
this
(
f
,
Parameters
.
getTemplateParametersAsMap
(
f
,
targetType
,
template
)
)
;
if
(
template
instanceof
AbstractTemplate
)
{
addGeneratedBy
(
(
(
AbstractTemplate
)
template
)
.
isAddGeneratedBy
(
)
)
;
}
}
