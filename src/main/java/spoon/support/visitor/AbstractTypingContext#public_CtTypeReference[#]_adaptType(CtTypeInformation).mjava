@Override
public
CtTypeReference
<
?
>
adaptType
(
CtTypeInformation
type
)
{
CtTypeReference
<
?
>
result
;
boolean
isCopy
=
false
;
if
(
type
instanceof
CtTypeReference
<
?
>
)
{
if
(
type
instanceof
CtTypeParameterReference
)
{
return
adaptTypeParameterReference
(
(
CtTypeParameterReference
)
type
)
;
}
result
=
(
CtTypeReference
<
?
>
)
type
;
}
else
{
if
(
type
instanceof
CtTypeParameter
)
{
return
adaptTypeParameter
(
(
CtTypeParameter
)
type
)
;
}
CtType
<
?
>
t
=
(
CtType
<
?
>
)
type
;
result
=
t
.
getFactory
(
)
.
Type
(
)
.
createReference
(
t
,
true
)
;
isCopy
=
true
;
}
if
(
!
result
.
getActualTypeArguments
(
)
.
isEmpty
(
)
)
{
if
(
isCopy
==
false
)
{
CtElement
parent
=
result
.
getParent
(
)
;
result
=
result
.
clone
(
)
;
result
.
setParent
(
parent
)
;
List
<
CtTypeReference
<
?
>
>
actTypeArgs
=
new
ArrayList
<
>
(
result
.
getActualTypeArguments
(
)
)
;
for
(
int
i
=
0
;
i
<
actTypeArgs
.
size
(
)
;
i
++
)
{
CtTypeReference
adaptedTypeArgs
=
adaptType
(
actTypeArgs
.
get
(
i
)
)
;
if
(
adaptedTypeArgs
!=
null
)
{
actTypeArgs
.
set
(
i
,
adaptedTypeArgs
.
clone
(
)
)
;
}
}
result
.
setActualTypeArguments
(
actTypeArgs
)
;
}
}
return
result
;
}
