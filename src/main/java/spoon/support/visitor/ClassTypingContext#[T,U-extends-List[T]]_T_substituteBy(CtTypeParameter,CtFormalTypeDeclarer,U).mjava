/** 
 * Substitutes the typeParameter by its value
 * @param typeParameter - to be substituted parameter
 * @param declarer - the declarer of typeParameter
 * @param values - the list of parameter values
 * @return the value from values on the same position as typeParameter in declarer.getFormalCtTypeParameters()
 */
static
<
T
,
U
extends
List
<
T
>
>
T
substituteBy
(
CtTypeParameter
typeParameter
,
CtFormalTypeDeclarer
declarer
,
U
values
)
{
List
<
CtTypeParameter
>
typeParams
=
declarer
.
getFormalCtTypeParameters
(
)
;
int
position
=
typeParams
.
indexOf
(
typeParameter
)
;
if
(
position
==
-
1
)
{
throw
new
SpoonException
(
"Type parameter <"
+
typeParameter
.
getSimpleName
(
)
+
" not found in scope "
+
declarer
.
getShortRepresentation
(
)
)
;
}
if
(
values
.
size
(
)
!=
typeParams
.
size
(
)
)
{
throw
new
SpoonException
(
"Unexpected count of parameters"
)
;
}
return
values
.
get
(
position
)
;
}
