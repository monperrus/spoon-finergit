/** 
 * @param typeRef the potential inner class, whose enclosing type should be returned
 * @return enclosing type of a `type` is an inner type or null if `type` is explicitly or implicitly static or top level type
 */
private
CtTypeReference
<
?
>
getEnclosingType
(
CtTypeReference
<
?
>
typeRef
)
{
CtType
<
?
>
type
=
typeRef
.
getTypeDeclaration
(
)
;
if
(
type
!=
null
)
{
if
(
type
.
hasModifier
(
ModifierKind
.
STATIC
)
)
{
return
null
;
}
CtType
<
?
>
declType
=
type
.
getDeclaringType
(
)
;
if
(
declType
==
null
)
{
return
null
;
}
if
(
declType
.
isInterface
(
)
)
{
return
null
;
}
}
return
typeRef
.
getDeclaringType
(
)
;
}
