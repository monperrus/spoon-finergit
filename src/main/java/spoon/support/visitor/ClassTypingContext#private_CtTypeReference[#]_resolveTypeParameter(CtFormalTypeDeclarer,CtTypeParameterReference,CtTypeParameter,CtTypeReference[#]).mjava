private
CtTypeReference
<
?
>
resolveTypeParameter
(
CtFormalTypeDeclarer
declarer
,
CtTypeParameterReference
typeParamRef
,
CtTypeParameter
typeParam
,
CtTypeReference
<
?
>
typeRef
)
{
if
(
(
declarer
instanceof
CtType
<
?
>
)
==
false
)
{
return
typeRef
;
}
CtType
<
?
>
typeDeclarer
=
(
CtType
<
?
>
)
declarer
;
List
<
CtTypeReference
<
?
>
>
actualTypeArguments
=
getActualTypeArguments
(
typeDeclarer
.
getQualifiedName
(
)
)
;
if
(
actualTypeArguments
==
null
)
{
return
typeRef
;
}
if
(
actualTypeArguments
.
size
(
)
!=
typeDeclarer
.
getFormalCtTypeParameters
(
)
.
size
(
)
)
{
if
(
actualTypeArguments
.
isEmpty
(
)
==
false
)
{
throw
new
SpoonException
(
"Unexpected actual type arguments "
+
actualTypeArguments
+
" on "
+
typeDeclarer
)
;
}
actualTypeArguments
=
getTypeReferences
(
typeDeclarer
.
getFormalCtTypeParameters
(
)
)
;
typeToArguments
.
put
(
typeDeclarer
.
getQualifiedName
(
)
,
actualTypeArguments
)
;
}
return
getValue
(
actualTypeArguments
,
typeParam
,
declarer
)
;
}
