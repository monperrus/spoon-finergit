/** 
 * @return true if actualType argument `subArg` is fitting as a subtype of actual type argument `superArg`
 */
private
boolean
isSubTypeArg
(
CtTypeReference
<
?
>
subArg
,
CtTypeReference
<
?
>
superArg
)
{
if
(
superArg
instanceof
CtWildcardReference
)
{
CtWildcardReference
wr
=
(
CtWildcardReference
)
superArg
;
CtTypeReference
<
?
>
superBound
=
wr
.
getBoundingType
(
)
;
if
(
superBound
.
equals
(
wr
.
getFactory
(
)
.
Type
(
)
.
OBJECT
)
)
{
return
wr
.
isUpper
(
)
;
}
if
(
subArg
instanceof
CtWildcardReference
)
{
CtWildcardReference
subWr
=
(
CtWildcardReference
)
subArg
;
CtTypeReference
<
?
>
subBound
=
subWr
.
getBoundingType
(
)
;
if
(
subBound
.
equals
(
wr
.
getFactory
(
)
.
Type
(
)
.
OBJECT
)
)
{
return
false
;
}
if
(
wr
.
isUpper
(
)
!=
subWr
.
isUpper
(
)
)
{
return
false
;
}
if
(
wr
.
isUpper
(
)
)
{
return
subBound
.
isSubtypeOf
(
superBound
)
;
}
return
superBound
.
isSubtypeOf
(
subBound
)
;
}
if
(
wr
.
isUpper
(
)
)
{
return
subArg
.
isSubtypeOf
(
superBound
)
;
}
else
{
return
superBound
.
isSubtypeOf
(
subArg
)
;
}
}
return
subArg
.
equals
(
superArg
)
;
}
