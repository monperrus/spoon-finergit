/** 
 * @param type {@link CtType} whose formal type parameters are transformed to {@link CtTypeReference}s, which plays role of actual type arguments, used for resolving of input type parameters
 */
public
ClassTypingContext
(
CtType
<
?
>
type
)
{
lastResolvedSuperclass
=
type
;
CtType
<
?
>
enclosing
=
getEnclosingType
(
type
)
;
if
(
enclosing
!=
null
)
{
enclosingClassTypingContext
=
createEnclosingHierarchy
(
enclosing
)
;
}
typeToArguments
.
put
(
type
.
getQualifiedName
(
)
,
getTypeReferences
(
type
.
getFormalCtTypeParameters
(
)
)
)
;
}
