/** 
 * adapts `type` to the  {@link CtTypeReference}of the scope of this  {@link ClassTypingContext}This mapping function is able to resolve  {@link CtTypeParameter} of:<br>A) input type or any super class or any enclosing class of input type or it's super class<br> B) super interfaces of input type or super interfaces of it's super classes.<br>
 * @param type to be adapted type
 * @return {@link CtTypeReference} adapted to scope of this {@link ClassTypingContext}or null if type cannot be adapted to this `scope`.
 */
CtTypeReference
<
?
>
adaptType
(
CtTypeInformation
type
)
;
