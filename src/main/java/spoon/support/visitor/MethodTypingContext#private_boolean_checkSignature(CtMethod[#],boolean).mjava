private
boolean
checkSignature
(
CtMethod
<
?
>
thatMethod
,
boolean
canTypeErasure
)
{
if
(
mightBeSameSignature
(
thatMethod
)
==
false
)
{
return
false
;
}
List
<
CtTypeParameter
>
formalCtTypeParameters
=
(
(
CtFormalTypeDeclarer
)
scopeMethod
)
.
getFormalCtTypeParameters
(
)
;
List
<
CtTypeParameter
>
thatTypeParameters
=
thatMethod
.
getFormalCtTypeParameters
(
)
;
boolean
useTypeErasure
=
false
;
if
(
formalCtTypeParameters
.
size
(
)
==
thatTypeParameters
.
size
(
)
)
{
for
(
int
i
=
0
;
i
<
formalCtTypeParameters
.
size
(
)
;
i
++
)
{
if
(
isSameMethodFormalTypeParameter
(
formalCtTypeParameters
.
get
(
i
)
,
thatTypeParameters
.
get
(
i
)
)
==
false
)
{
return
false
;
}
}
}
else
{
if
(
canTypeErasure
==
false
)
{
return
false
;
}
if
(
formalCtTypeParameters
.
isEmpty
(
)
==
false
)
{
return
false
;
}
useTypeErasure
=
true
;
}
List
<
CtTypeReference
<
?
>
>
thisParameterTypes
=
getParameterTypes
(
scopeMethod
.
getParameters
(
)
)
;
List
<
CtTypeReference
<
?
>
>
thatParameterTypes
=
getParameterTypes
(
thatMethod
.
getParameters
(
)
)
;
for
(
int
i
=
0
;
i
<
thisParameterTypes
.
size
(
)
;
i
++
)
{
CtTypeReference
<
?
>
thisType
=
thisParameterTypes
.
get
(
i
)
;
CtTypeReference
<
?
>
thatType
=
thatParameterTypes
.
get
(
i
)
;
if
(
useTypeErasure
)
{
if
(
thatType
instanceof
CtTypeParameterReference
)
{
thatType
=
(
(
CtTypeParameterReference
)
thatType
)
.
getTypeErasure
(
)
;
}
}
else
{
thatType
=
adaptType
(
thatType
)
;
}
if
(
thatType
==
null
)
{
return
false
;
}
if
(
thisType
.
equals
(
thatType
)
==
false
)
{
return
false
;
}
}
return
true
;
}
