public
<
S
>
void
visitCtCase
(
final
spoon
.
reflect
.
code
.
CtCase
<
S
>
caseStatement
)
{
spoon
.
reflect
.
code
.
CtCase
<
S
>
aCtCase
=
caseStatement
.
getFactory
(
)
.
Core
(
)
.
createCase
(
)
;
this
.
builder
.
copy
(
caseStatement
,
aCtCase
)
;
aCtCase
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
caseStatement
.
getAnnotations
(
)
)
)
;
aCtCase
.
setCaseExpression
(
this
.
cloneHelper
.
clone
(
caseStatement
.
getCaseExpression
(
)
)
)
;
aCtCase
.
setStatements
(
this
.
cloneHelper
.
clone
(
caseStatement
.
getStatements
(
)
)
)
;
aCtCase
.
setComments
(
this
.
cloneHelper
.
clone
(
caseStatement
.
getComments
(
)
)
)
;
this
.
cloneHelper
.
tailor
(
caseStatement
,
aCtCase
)
;
this
.
other
=
aCtCase
;
}
