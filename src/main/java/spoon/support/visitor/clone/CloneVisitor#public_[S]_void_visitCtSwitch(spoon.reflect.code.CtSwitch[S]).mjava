public
<
S
>
void
visitCtSwitch
(
final
spoon
.
reflect
.
code
.
CtSwitch
<
S
>
switchStatement
)
{
spoon
.
reflect
.
code
.
CtSwitch
<
S
>
aCtSwitch
=
switchStatement
.
getFactory
(
)
.
Core
(
)
.
createSwitch
(
)
;
this
.
builder
.
copy
(
switchStatement
,
aCtSwitch
)
;
aCtSwitch
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
switchStatement
.
getAnnotations
(
)
)
)
;
aCtSwitch
.
setSelector
(
this
.
cloneHelper
.
clone
(
switchStatement
.
getSelector
(
)
)
)
;
aCtSwitch
.
setCases
(
this
.
cloneHelper
.
clone
(
switchStatement
.
getCases
(
)
)
)
;
aCtSwitch
.
setComments
(
this
.
cloneHelper
.
clone
(
switchStatement
.
getComments
(
)
)
)
;
this
.
cloneHelper
.
tailor
(
switchStatement
,
aCtSwitch
)
;
this
.
other
=
aCtSwitch
;
}
