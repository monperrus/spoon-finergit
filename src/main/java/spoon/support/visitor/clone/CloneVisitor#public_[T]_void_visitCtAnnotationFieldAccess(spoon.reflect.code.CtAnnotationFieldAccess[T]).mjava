public
<
T
>
void
visitCtAnnotationFieldAccess
(
final
spoon
.
reflect
.
code
.
CtAnnotationFieldAccess
<
T
>
annotationFieldAccess
)
{
spoon
.
reflect
.
code
.
CtAnnotationFieldAccess
<
T
>
aCtAnnotationFieldAccess
=
spoon
.
support
.
visitor
.
clone
.
CloneBuilder
.
build
(
this
.
builder
,
annotationFieldAccess
,
annotationFieldAccess
.
getFactory
(
)
.
Core
(
)
.
createAnnotationFieldAccess
(
)
)
;
aCtAnnotationFieldAccess
.
setComments
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
annotationFieldAccess
.
getComments
(
)
)
)
;
aCtAnnotationFieldAccess
.
setAnnotations
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
annotationFieldAccess
.
getAnnotations
(
)
)
)
;
aCtAnnotationFieldAccess
.
setTypeCasts
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
annotationFieldAccess
.
getTypeCasts
(
)
)
)
;
aCtAnnotationFieldAccess
.
setTarget
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
annotationFieldAccess
.
getTarget
(
)
)
)
;
aCtAnnotationFieldAccess
.
setType
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
annotationFieldAccess
.
getType
(
)
)
)
;
aCtAnnotationFieldAccess
.
setVariable
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
annotationFieldAccess
.
getVariable
(
)
)
)
;
this
.
other
=
aCtAnnotationFieldAccess
;
}
