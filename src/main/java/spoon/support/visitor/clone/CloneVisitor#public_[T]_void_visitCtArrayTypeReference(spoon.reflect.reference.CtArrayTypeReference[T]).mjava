public
<
T
>
void
visitCtArrayTypeReference
(
final
spoon
.
reflect
.
reference
.
CtArrayTypeReference
<
T
>
reference
)
{
spoon
.
reflect
.
reference
.
CtArrayTypeReference
<
T
>
aCtArrayTypeReference
=
reference
.
getFactory
(
)
.
Core
(
)
.
createArrayTypeReference
(
)
;
aCtArrayTypeReference
.
setPackage
(
this
.
cloneHelper
.
clone
(
reference
.
getPackage
(
)
)
)
;
aCtArrayTypeReference
.
setDeclaringType
(
this
.
cloneHelper
.
clone
(
reference
.
getDeclaringType
(
)
)
)
;
aCtArrayTypeReference
.
setComponentType
(
this
.
cloneHelper
.
clone
(
reference
.
getComponentType
(
)
)
)
;
aCtArrayTypeReference
.
setActualTypeArguments
(
this
.
cloneHelper
.
clone
(
reference
.
getActualTypeArguments
(
)
)
)
;
aCtArrayTypeReference
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
reference
.
getAnnotations
(
)
)
)
;
this
.
builder
.
copy
(
reference
,
aCtArrayTypeReference
)
;
this
.
cloneHelper
.
tailor
(
reference
,
aCtArrayTypeReference
)
;
this
.
other
=
aCtArrayTypeReference
;
}
