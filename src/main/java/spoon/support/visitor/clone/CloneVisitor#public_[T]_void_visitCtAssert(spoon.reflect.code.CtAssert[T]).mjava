public
<
T
>
void
visitCtAssert
(
final
spoon
.
reflect
.
code
.
CtAssert
<
T
>
asserted
)
{
spoon
.
reflect
.
code
.
CtAssert
<
T
>
aCtAssert
=
spoon
.
support
.
visitor
.
clone
.
CloneBuilder
.
build
(
this
.
builder
,
asserted
,
asserted
.
getFactory
(
)
.
Core
(
)
.
createAssert
(
)
)
;
aCtAssert
.
setAnnotations
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
asserted
.
getAnnotations
(
)
)
)
;
aCtAssert
.
setAssertExpression
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
asserted
.
getAssertExpression
(
)
)
)
;
aCtAssert
.
setExpression
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
asserted
.
getExpression
(
)
)
)
;
aCtAssert
.
setComments
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
asserted
.
getComments
(
)
)
)
;
this
.
other
=
aCtAssert
;
}
