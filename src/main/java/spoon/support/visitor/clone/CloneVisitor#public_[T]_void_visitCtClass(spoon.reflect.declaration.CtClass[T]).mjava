public
<
T
>
void
visitCtClass
(
final
spoon
.
reflect
.
declaration
.
CtClass
<
T
>
ctClass
)
{
spoon
.
reflect
.
declaration
.
CtClass
<
T
>
aCtClass
=
spoon
.
support
.
visitor
.
clone
.
CloneBuilder
.
build
(
this
.
builder
,
ctClass
,
ctClass
.
getFactory
(
)
.
Core
(
)
.
createClass
(
)
)
;
aCtClass
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
ctClass
.
getAnnotations
(
)
)
)
;
aCtClass
.
setSuperclass
(
this
.
cloneHelper
.
clone
(
ctClass
.
getSuperclass
(
)
)
)
;
aCtClass
.
setSuperInterfaces
(
this
.
cloneHelper
.
clone
(
ctClass
.
getSuperInterfaces
(
)
)
)
;
aCtClass
.
setFormalCtTypeParameters
(
this
.
cloneHelper
.
clone
(
ctClass
.
getFormalCtTypeParameters
(
)
)
)
;
aCtClass
.
setTypeMembers
(
this
.
cloneHelper
.
clone
(
ctClass
.
getTypeMembers
(
)
)
)
;
aCtClass
.
setComments
(
this
.
cloneHelper
.
clone
(
ctClass
.
getComments
(
)
)
)
;
this
.
other
=
aCtClass
;
}
