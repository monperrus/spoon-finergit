public
<
T
>
void
visitCtCodeSnippetExpression
(
final
spoon
.
reflect
.
code
.
CtCodeSnippetExpression
<
T
>
expression
)
{
spoon
.
reflect
.
code
.
CtCodeSnippetExpression
<
T
>
aCtCodeSnippetExpression
=
expression
.
getFactory
(
)
.
Core
(
)
.
createCodeSnippetExpression
(
)
;
aCtCodeSnippetExpression
.
setType
(
this
.
cloneHelper
.
clone
(
expression
.
getType
(
)
)
)
;
aCtCodeSnippetExpression
.
setComments
(
this
.
cloneHelper
.
clone
(
expression
.
getComments
(
)
)
)
;
aCtCodeSnippetExpression
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
expression
.
getAnnotations
(
)
)
)
;
aCtCodeSnippetExpression
.
setTypeCasts
(
this
.
cloneHelper
.
clone
(
expression
.
getTypeCasts
(
)
)
)
;
this
.
builder
.
copy
(
expression
,
aCtCodeSnippetExpression
)
;
this
.
cloneHelper
.
tailor
(
expression
,
aCtCodeSnippetExpression
)
;
this
.
other
=
aCtCodeSnippetExpression
;
}
