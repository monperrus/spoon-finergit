public
<
T
>
void
visitCtConditional
(
final
spoon
.
reflect
.
code
.
CtConditional
<
T
>
conditional
)
{
spoon
.
reflect
.
code
.
CtConditional
<
T
>
aCtConditional
=
conditional
.
getFactory
(
)
.
Core
(
)
.
createConditional
(
)
;
this
.
builder
.
copy
(
conditional
,
aCtConditional
)
;
aCtConditional
.
setType
(
this
.
cloneHelper
.
clone
(
conditional
.
getType
(
)
)
)
;
aCtConditional
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
conditional
.
getAnnotations
(
)
)
)
;
aCtConditional
.
setCondition
(
this
.
cloneHelper
.
clone
(
conditional
.
getCondition
(
)
)
)
;
aCtConditional
.
setThenExpression
(
this
.
cloneHelper
.
clone
(
conditional
.
getThenExpression
(
)
)
)
;
aCtConditional
.
setElseExpression
(
this
.
cloneHelper
.
clone
(
conditional
.
getElseExpression
(
)
)
)
;
aCtConditional
.
setComments
(
this
.
cloneHelper
.
clone
(
conditional
.
getComments
(
)
)
)
;
aCtConditional
.
setTypeCasts
(
this
.
cloneHelper
.
clone
(
conditional
.
getTypeCasts
(
)
)
)
;
this
.
cloneHelper
.
tailor
(
conditional
,
aCtConditional
)
;
this
.
other
=
aCtConditional
;
}
