public
<
T
>
void
visitCtField
(
final
spoon
.
reflect
.
declaration
.
CtField
<
T
>
f
)
{
spoon
.
reflect
.
declaration
.
CtField
<
T
>
aCtField
=
f
.
getFactory
(
)
.
Core
(
)
.
createField
(
)
;
this
.
builder
.
copy
(
f
,
aCtField
)
;
aCtField
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
f
.
getAnnotations
(
)
)
)
;
aCtField
.
setType
(
this
.
cloneHelper
.
clone
(
f
.
getType
(
)
)
)
;
aCtField
.
setDefaultExpression
(
this
.
cloneHelper
.
clone
(
f
.
getDefaultExpression
(
)
)
)
;
aCtField
.
setComments
(
this
.
cloneHelper
.
clone
(
f
.
getComments
(
)
)
)
;
this
.
cloneHelper
.
tailor
(
f
,
aCtField
)
;
this
.
other
=
aCtField
;
}
