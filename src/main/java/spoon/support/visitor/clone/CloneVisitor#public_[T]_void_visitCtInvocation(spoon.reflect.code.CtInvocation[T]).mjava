public
<
T
>
void
visitCtInvocation
(
final
spoon
.
reflect
.
code
.
CtInvocation
<
T
>
invocation
)
{
spoon
.
reflect
.
code
.
CtInvocation
<
T
>
aCtInvocation
=
invocation
.
getFactory
(
)
.
Core
(
)
.
createInvocation
(
)
;
aCtInvocation
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
invocation
.
getAnnotations
(
)
)
)
;
aCtInvocation
.
setTypeCasts
(
this
.
cloneHelper
.
clone
(
invocation
.
getTypeCasts
(
)
)
)
;
aCtInvocation
.
setTarget
(
this
.
cloneHelper
.
clone
(
invocation
.
getTarget
(
)
)
)
;
aCtInvocation
.
setExecutable
(
this
.
cloneHelper
.
clone
(
invocation
.
getExecutable
(
)
)
)
;
aCtInvocation
.
setArguments
(
this
.
cloneHelper
.
clone
(
invocation
.
getArguments
(
)
)
)
;
aCtInvocation
.
setComments
(
this
.
cloneHelper
.
clone
(
invocation
.
getComments
(
)
)
)
;
this
.
builder
.
copy
(
invocation
,
aCtInvocation
)
;
this
.
cloneHelper
.
tailor
(
invocation
,
aCtInvocation
)
;
this
.
other
=
aCtInvocation
;
}
