public
<
T
>
void
visitCtMethod
(
final
spoon
.
reflect
.
declaration
.
CtMethod
<
T
>
m
)
{
spoon
.
reflect
.
declaration
.
CtMethod
<
T
>
aCtMethod
=
m
.
getFactory
(
)
.
Core
(
)
.
createMethod
(
)
;
this
.
builder
.
copy
(
m
,
aCtMethod
)
;
aCtMethod
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
m
.
getAnnotations
(
)
)
)
;
aCtMethod
.
setFormalCtTypeParameters
(
this
.
cloneHelper
.
clone
(
m
.
getFormalCtTypeParameters
(
)
)
)
;
aCtMethod
.
setType
(
this
.
cloneHelper
.
clone
(
m
.
getType
(
)
)
)
;
aCtMethod
.
setParameters
(
this
.
cloneHelper
.
clone
(
m
.
getParameters
(
)
)
)
;
aCtMethod
.
setThrownTypes
(
this
.
cloneHelper
.
clone
(
m
.
getThrownTypes
(
)
)
)
;
aCtMethod
.
setBody
(
this
.
cloneHelper
.
clone
(
m
.
getBody
(
)
)
)
;
aCtMethod
.
setComments
(
this
.
cloneHelper
.
clone
(
m
.
getComments
(
)
)
)
;
this
.
cloneHelper
.
tailor
(
m
,
aCtMethod
)
;
this
.
other
=
aCtMethod
;
}
