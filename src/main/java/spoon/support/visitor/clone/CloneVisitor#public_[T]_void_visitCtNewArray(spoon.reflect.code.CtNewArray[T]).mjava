public
<
T
>
void
visitCtNewArray
(
final
spoon
.
reflect
.
code
.
CtNewArray
<
T
>
newArray
)
{
spoon
.
reflect
.
code
.
CtNewArray
<
T
>
aCtNewArray
=
spoon
.
support
.
visitor
.
clone
.
CloneBuilder
.
build
(
this
.
builder
,
newArray
,
newArray
.
getFactory
(
)
.
Core
(
)
.
createNewArray
(
)
)
;
aCtNewArray
.
setAnnotations
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
newArray
.
getAnnotations
(
)
)
)
;
aCtNewArray
.
setType
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
newArray
.
getType
(
)
)
)
;
aCtNewArray
.
setTypeCasts
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
newArray
.
getTypeCasts
(
)
)
)
;
aCtNewArray
.
setElements
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
newArray
.
getElements
(
)
)
)
;
aCtNewArray
.
setDimensionExpressions
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
newArray
.
getDimensionExpressions
(
)
)
)
;
aCtNewArray
.
setComments
(
spoon
.
support
.
visitor
.
equals
.
CloneHelper
.
clone
(
newArray
.
getComments
(
)
)
)
;
this
.
other
=
aCtNewArray
;
}
