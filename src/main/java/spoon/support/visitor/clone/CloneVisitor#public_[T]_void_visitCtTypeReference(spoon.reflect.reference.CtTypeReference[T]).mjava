public
<
T
>
void
visitCtTypeReference
(
final
spoon
.
reflect
.
reference
.
CtTypeReference
<
T
>
reference
)
{
spoon
.
reflect
.
reference
.
CtTypeReference
<
T
>
aCtTypeReference
=
spoon
.
support
.
visitor
.
clone
.
CloneBuilder
.
build
(
this
.
builder
,
reference
,
reference
.
getFactory
(
)
.
Core
(
)
.
createTypeReference
(
)
)
;
aCtTypeReference
.
setPackage
(
this
.
cloneHelper
.
clone
(
reference
.
getPackage
(
)
)
)
;
aCtTypeReference
.
setDeclaringType
(
this
.
cloneHelper
.
clone
(
reference
.
getDeclaringType
(
)
)
)
;
aCtTypeReference
.
setActualTypeArguments
(
this
.
cloneHelper
.
clone
(
reference
.
getActualTypeArguments
(
)
)
)
;
aCtTypeReference
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
reference
.
getAnnotations
(
)
)
)
;
aCtTypeReference
.
setComments
(
this
.
cloneHelper
.
clone
(
reference
.
getComments
(
)
)
)
;
this
.
other
=
aCtTypeReference
;
}
