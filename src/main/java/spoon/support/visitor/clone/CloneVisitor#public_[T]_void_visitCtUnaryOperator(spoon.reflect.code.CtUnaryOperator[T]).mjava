public
<
T
>
void
visitCtUnaryOperator
(
final
spoon
.
reflect
.
code
.
CtUnaryOperator
<
T
>
operator
)
{
spoon
.
reflect
.
code
.
CtUnaryOperator
<
T
>
aCtUnaryOperator
=
operator
.
getFactory
(
)
.
Core
(
)
.
createUnaryOperator
(
)
;
this
.
builder
.
copy
(
operator
,
aCtUnaryOperator
)
;
aCtUnaryOperator
.
setAnnotations
(
this
.
cloneHelper
.
clone
(
operator
.
getAnnotations
(
)
)
)
;
aCtUnaryOperator
.
setType
(
this
.
cloneHelper
.
clone
(
operator
.
getType
(
)
)
)
;
aCtUnaryOperator
.
setTypeCasts
(
this
.
cloneHelper
.
clone
(
operator
.
getTypeCasts
(
)
)
)
;
aCtUnaryOperator
.
setOperand
(
this
.
cloneHelper
.
clone
(
operator
.
getOperand
(
)
)
)
;
aCtUnaryOperator
.
setComments
(
this
.
cloneHelper
.
clone
(
operator
.
getComments
(
)
)
)
;
this
.
cloneHelper
.
tailor
(
operator
,
aCtUnaryOperator
)
;
this
.
other
=
aCtUnaryOperator
;
}
