public
<
T
,
A
extends
T
>
void
visitCtAssignment
(
final
spoon
.
reflect
.
code
.
CtAssignment
<
T
,
A
>
assignement
)
{
spoon
.
reflect
.
code
.
CtAssignment
other
=
(
(
spoon
.
reflect
.
code
.
CtAssignment
)
(
stack
.
peek
(
)
)
)
;
enter
(
assignement
)
;
biScan
(
assignement
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
assignement
.
getType
(
)
,
other
.
getType
(
)
)
;
biScan
(
assignement
.
getTypeCasts
(
)
,
other
.
getTypeCasts
(
)
)
;
biScan
(
assignement
.
getAssigned
(
)
,
other
.
getAssigned
(
)
)
;
biScan
(
assignement
.
getAssignment
(
)
,
other
.
getAssignment
(
)
)
;
exit
(
assignement
)
;
}
