public
<
T
,
E
extends
spoon
.
reflect
.
code
.
CtExpression
<
?
>
>
void
visitCtArrayAccess
(
final
spoon
.
reflect
.
code
.
CtArrayAccess
<
T
,
E
>
arrayAccess
)
{
spoon
.
reflect
.
code
.
CtArrayAccess
other
=
(
(
spoon
.
reflect
.
code
.
CtArrayAccess
)
(
stack
.
peek
(
)
)
)
;
enter
(
arrayAccess
)
;
biScan
(
arrayAccess
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
arrayAccess
.
getType
(
)
,
other
.
getType
(
)
)
;
biScan
(
arrayAccess
.
getTypeCasts
(
)
,
other
.
getTypeCasts
(
)
)
;
biScan
(
arrayAccess
.
getTarget
(
)
,
other
.
getTarget
(
)
)
;
biScan
(
arrayAccess
.
getIndexExpression
(
)
,
other
.
getIndexExpression
(
)
)
;
exit
(
arrayAccess
)
;
}
