public
<
T
>
void
visitCtClass
(
final
spoon
.
reflect
.
declaration
.
CtClass
<
T
>
ctClass
)
{
spoon
.
reflect
.
declaration
.
CtClass
other
=
(
(
spoon
.
reflect
.
declaration
.
CtClass
)
(
stack
.
peek
(
)
)
)
;
enter
(
ctClass
)
;
biScan
(
ctClass
.
getAnnotations
(
)
,
other
.
getAnnotations
(
)
)
;
biScan
(
ctClass
.
getSuperclass
(
)
,
other
.
getSuperclass
(
)
)
;
biScan
(
ctClass
.
getSuperInterfaces
(
)
,
other
.
getSuperInterfaces
(
)
)
;
biScan
(
ctClass
.
getFormalTypeParameters
(
)
,
other
.
getFormalTypeParameters
(
)
)
;
biScan
(
ctClass
.
getAnonymousExecutables
(
)
,
other
.
getAnonymousExecutables
(
)
)
;
biScan
(
ctClass
.
getNestedTypes
(
)
,
other
.
getNestedTypes
(
)
)
;
biScan
(
ctClass
.
getFields
(
)
,
other
.
getFields
(
)
)
;
biScan
(
ctClass
.
getConstructors
(
)
,
other
.
getConstructors
(
)
)
;
biScan
(
ctClass
.
getMethods
(
)
,
other
.
getMethods
(
)
)
;
exit
(
ctClass
)
;
}
