@Override
public
<
T
extends
Annotation
>
void
visitAnnotationClass
(
Class
<
T
>
clazz
)
{
final
CtAnnotationType
<
?
>
ctAnnotationType
=
factory
.
Core
(
)
.
createAnnotationType
(
)
;
ctAnnotationType
.
setSimpleName
(
clazz
.
getSimpleName
(
)
)
;
setModifier
(
ctAnnotationType
,
clazz
.
getModifiers
(
)
,
clazz
.
getDeclaringClass
(
)
)
;
enter
(
new
TypeRuntimeBuilderContext
(
clazz
,
ctAnnotationType
)
{
@Override
public
void
addMethod
(
CtMethod
ctMethod
)
{
final
CtAnnotationMethod
<
Object
>
field
=
factory
.
Core
(
)
.
createAnnotationMethod
(
)
;
field
.
setSimpleName
(
ctMethod
.
getSimpleName
(
)
)
;
field
.
setModifiers
(
ctMethod
.
getModifiers
(
)
)
;
field
.
setType
(
ctMethod
.
getType
(
)
)
;
field
.
setShadow
(
true
)
;
ctAnnotationType
.
addMethod
(
field
)
;
}
}
)
;
super
.
visitAnnotationClass
(
clazz
)
;
exit
(
)
;
contexts
.
peek
(
)
.
addType
(
ctAnnotationType
)
;
}
