@Override
public
<
T
>
void
visitArrayReference
(
final
Class
<
T
>
typeArray
)
{
final
CtArrayTypeReference
<
?
>
arrayTypeReference
=
factory
.
Core
(
)
.
createArrayTypeReference
(
)
;
enter
(
new
TypeReferenceRuntimeBuilderContext
(
arrayTypeReference
)
{
@Override
public
void
addClassReference
(
CtTypeReference
<
?
>
typeReference
)
{
if
(
typeArray
.
getSimpleName
(
)
.
equals
(
typeReference
.
getSimpleName
(
)
)
)
{
arrayTypeReference
.
setComponentType
(
typeReference
)
;
}
else
{
arrayTypeReference
.
setDeclaringType
(
typeReference
)
;
}
}
@Override
public
void
addArrayReference
(
CtArrayTypeReference
<
?
>
typeReference
)
{
arrayTypeReference
.
setComponentType
(
typeReference
)
;
}
}
)
;
super
.
visitArrayReference
(
typeArray
)
;
exit
(
)
;
contexts
.
peek
(
)
.
addArrayReference
(
arrayTypeReference
)
;
}
