@Override
public
<
T
>
void
visitEnum
(
Class
<
T
>
clazz
)
{
assert
clazz
.
isEnum
(
)
:
;
if
(
clazz
.
getPackage
(
)
!=
null
)
{
clazz
.
getPackage
(
)
;
}
for
(
Class
<
?
>
anInterface
:
clazz
.
getInterfaces
(
)
)
{
visitInterfaceReference
(
anInterface
)
;
}
for
(
Annotation
annotation
:
clazz
.
getDeclaredAnnotations
(
)
)
{
visitAnnotation
(
annotation
)
;
}
for
(
Constructor
<
?
>
constructor
:
clazz
.
getDeclaredConstructors
(
)
)
{
visitConstructor
(
constructor
)
;
}
for
(
RtMethod
method
:
getDeclaredMethods
(
clazz
)
)
{
if
(
(
"valueOf"
.
equals
(
method
.
getName
(
)
)
&&
method
.
getParameterTypes
(
)
.
length
==
1
&&
String
.
class
.
equals
(
method
.
getParameterTypes
(
)
[
0
]
)
)
||
"values"
.
equals
(
method
.
getName
(
)
)
)
{
continue
;
}
visitMethod
(
method
)
;
}
for
(
Field
field
:
clazz
.
getDeclaredFields
(
)
)
{
if
(
"$VALUES"
.
equals
(
field
.
getName
(
)
)
)
{
continue
;
}
if
(
field
.
isEnumConstant
(
)
)
{
visitEnumValue
(
field
)
;
}
else
{
visitField
(
field
)
;
}
}
for
(
Class
<
?
>
aClass
:
clazz
.
getDeclaredClasses
(
)
)
{
visitClass
(
aClass
)
;
}
}
