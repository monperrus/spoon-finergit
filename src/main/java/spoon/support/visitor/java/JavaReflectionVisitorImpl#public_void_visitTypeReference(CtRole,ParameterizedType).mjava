@Override
public
void
visitTypeReference
(
CtRole
role
,
ParameterizedType
type
)
{
Type
rawType
=
type
.
getRawType
(
)
;
if
(
!
(
rawType
instanceof
Class
)
)
{
throw
new
UnsupportedOperationException
(
"Rawtype of the parameterized type should be a class."
)
;
}
Class
<
?
>
classRaw
=
(
Class
<
?
>
)
rawType
;
if
(
classRaw
.
getPackage
(
)
!=
null
)
{
visitPackage
(
classRaw
.
getPackage
(
)
)
;
}
if
(
classRaw
.
getEnclosingClass
(
)
!=
null
)
{
visitTypeReference
(
CtRole
.
DECLARING_TYPE
,
classRaw
.
getEnclosingClass
(
)
)
;
}
for
(
Type
generic
:
type
.
getActualTypeArguments
(
)
)
{
visitTypeReference
(
CtRole
.
TYPE_ARGUMENT
,
generic
)
;
}
}
