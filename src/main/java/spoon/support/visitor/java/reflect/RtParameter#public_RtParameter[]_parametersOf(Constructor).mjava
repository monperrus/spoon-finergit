/** 
 * Get parameters in a constructor to spoon parameters.
 * @param constructor Parent executable of parameters.
 * @return Parameters of the executable.
 */
public
static
RtParameter
[
]
parametersOf
(
Constructor
constructor
)
{
RtParameter
[
]
parameters
;
int
lengthGenericParameterTypes
=
constructor
.
getGenericParameterTypes
(
)
.
length
;
int
lengthParameterTypes
=
constructor
.
getParameterTypes
(
)
.
length
;
int
offset
;
if
(
lengthGenericParameterTypes
==
lengthParameterTypes
)
{
parameters
=
new
RtParameter
[
]
;
offset
=
0
;
}
else
if
(
lengthGenericParameterTypes
==
lengthParameterTypes
-
1
)
{
parameters
=
new
RtParameter
[
]
;
offset
=
1
;
}
else
if
(
constructor
.
getDeclaringClass
(
)
.
isEnum
(
)
&&
lengthGenericParameterTypes
==
lengthParameterTypes
-
2
)
{
parameters
=
new
RtParameter
[
]
;
offset
=
2
;
}
else
{
throw
new
SpoonException
(
"Error while analyzing parameters of constructor: "
+
constructor
+
". # of parameters: "
+
lengthParameterTypes
+
" - # of generic parameter types: "
+
lengthGenericParameterTypes
)
;
}
for
(
int
index
=
0
;
index
<
constructor
.
getGenericParameterTypes
(
)
.
length
;
index
++
)
{
parameters
[
index
]
=
new
RtParameter
(
null
,
constructor
.
getParameterTypes
(
)
[
index
+
offset
]
,
constructor
.
getGenericParameterTypes
(
)
[
index
]
,
null
,
constructor
,
index
)
;
}
return
parameters
;
}
