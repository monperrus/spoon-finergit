public
<
A
extends
java
.
lang
.
annotation
.
Annotation
>
void
visitCtAnnotationType
(
final
spoon
.
reflect
.
declaration
.
CtAnnotationType
<
A
>
annotationType
)
{
replaceInListIfExist
(
annotationType
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
annotationType
)
)
;
replaceInSetIfExist
(
annotationType
.
getNestedTypes
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypeNestedTypesReplaceListener
(
annotationType
)
)
;
replaceInListIfExist
(
annotationType
.
getFields
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypeFieldsReplaceListener
(
annotationType
)
)
;
replaceInListIfExist
(
annotationType
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
annotationType
)
)
;
}
