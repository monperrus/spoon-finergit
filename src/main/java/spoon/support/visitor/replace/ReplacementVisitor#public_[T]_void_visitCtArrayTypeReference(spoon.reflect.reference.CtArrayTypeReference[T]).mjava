public
<
T
>
void
visitCtArrayTypeReference
(
final
spoon
.
reflect
.
reference
.
CtArrayTypeReference
<
T
>
reference
)
{
replaceElementIfExist
(
reference
.
getDeclaringType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypeReferenceDeclaringTypeReplaceListener
(
reference
)
)
;
replaceElementIfExist
(
reference
.
getPackage
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypeReferencePackageReplaceListener
(
reference
)
)
;
replaceElementIfExist
(
reference
.
getComponentType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtArrayTypeReferenceComponentTypeReplaceListener
(
reference
)
)
;
replaceInListIfExist
(
reference
.
getActualTypeArguments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtGenericElementReferenceActualTypeArgumentsReplaceListener
(
reference
)
)
;
replaceInListIfExist
(
reference
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
reference
)
)
;
}
