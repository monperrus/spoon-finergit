public
<
T
>
void
visitCtConditional
(
final
spoon
.
reflect
.
code
.
CtConditional
<
T
>
conditional
)
{
replaceInListIfExist
(
conditional
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
conditional
)
)
;
replaceElementIfExist
(
conditional
.
getCondition
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtConditionalConditionReplaceListener
(
conditional
)
)
;
replaceElementIfExist
(
conditional
.
getThenExpression
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtConditionalThenExpressionReplaceListener
(
conditional
)
)
;
replaceElementIfExist
(
conditional
.
getElseExpression
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtConditionalElseExpressionReplaceListener
(
conditional
)
)
;
replaceInListIfExist
(
conditional
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
conditional
)
)
;
}
