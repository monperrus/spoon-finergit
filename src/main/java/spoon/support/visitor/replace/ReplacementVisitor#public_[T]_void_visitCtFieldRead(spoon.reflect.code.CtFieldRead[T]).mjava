@java.lang.Override
public
<
T
>
void
visitCtFieldRead
(
final
spoon
.
reflect
.
code
.
CtFieldRead
<
T
>
fieldRead
)
{
replaceInListIfExist
(
fieldRead
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
fieldRead
)
)
;
replaceInListIfExist
(
fieldRead
.
getTypeCasts
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtExpressionTypeCastsReplaceListener
(
fieldRead
)
)
;
replaceElementIfExist
(
fieldRead
.
getTarget
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTargetedExpressionTargetReplaceListener
(
fieldRead
)
)
;
replaceElementIfExist
(
fieldRead
.
getVariable
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtFieldAccessVariableReplaceListener
(
fieldRead
)
)
;
replaceInListIfExist
(
fieldRead
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
fieldRead
)
)
;
}
