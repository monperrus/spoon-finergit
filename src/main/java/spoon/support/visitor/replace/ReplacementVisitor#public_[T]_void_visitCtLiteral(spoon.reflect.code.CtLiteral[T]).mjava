public
<
T
>
void
visitCtLiteral
(
final
spoon
.
reflect
.
code
.
CtLiteral
<
T
>
literal
)
{
replaceInListIfExist
(
literal
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
literal
)
)
;
replaceElementIfExist
(
literal
.
getType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypedElementTypeReplaceListener
(
literal
)
)
;
replaceInListIfExist
(
literal
.
getTypeCasts
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtExpressionTypeCastsReplaceListener
(
literal
)
)
;
replaceInListIfExist
(
literal
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
literal
)
)
;
}
