@java.lang.Override
public
<
T
>
void
visitCtNewArray
(
final
spoon
.
reflect
.
code
.
CtNewArray
<
T
>
newArray
)
{
replaceInListIfExist
(
newArray
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
newArray
)
)
;
replaceElementIfExist
(
newArray
.
getType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypedElementTypeReplaceListener
(
newArray
)
)
;
replaceInListIfExist
(
newArray
.
getTypeCasts
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtExpressionTypeCastsReplaceListener
(
newArray
)
)
;
replaceInListIfExist
(
newArray
.
getElements
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtNewArrayElementsReplaceListener
(
newArray
)
)
;
replaceInListIfExist
(
newArray
.
getDimensionExpressions
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtNewArrayDimensionExpressionsReplaceListener
(
newArray
)
)
;
replaceInListIfExist
(
newArray
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
newArray
)
)
;
}
