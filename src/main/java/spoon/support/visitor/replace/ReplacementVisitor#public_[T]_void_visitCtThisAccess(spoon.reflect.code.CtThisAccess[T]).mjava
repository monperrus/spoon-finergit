@java.lang.Override
public
<
T
>
void
visitCtThisAccess
(
final
spoon
.
reflect
.
code
.
CtThisAccess
<
T
>
thisAccess
)
{
replaceInListIfExist
(
thisAccess
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
thisAccess
)
)
;
replaceInListIfExist
(
thisAccess
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
thisAccess
)
)
;
replaceElementIfExist
(
thisAccess
.
getType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypedElementTypeReplaceListener
(
thisAccess
)
)
;
replaceInListIfExist
(
thisAccess
.
getTypeCasts
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtExpressionTypeCastsReplaceListener
(
thisAccess
)
)
;
replaceElementIfExist
(
thisAccess
.
getTarget
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTargetedExpressionTargetReplaceListener
(
thisAccess
)
)
;
}
