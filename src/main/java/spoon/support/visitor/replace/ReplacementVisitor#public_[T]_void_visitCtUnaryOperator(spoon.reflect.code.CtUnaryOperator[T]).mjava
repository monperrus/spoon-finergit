@java.lang.Override
public
<
T
>
void
visitCtUnaryOperator
(
final
spoon
.
reflect
.
code
.
CtUnaryOperator
<
T
>
operator
)
{
replaceInListIfExist
(
operator
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
operator
)
)
;
replaceElementIfExist
(
operator
.
getType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypedElementTypeReplaceListener
(
operator
)
)
;
replaceInListIfExist
(
operator
.
getTypeCasts
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtExpressionTypeCastsReplaceListener
(
operator
)
)
;
replaceElementIfExist
(
operator
.
getOperand
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtUnaryOperatorOperandReplaceListener
(
operator
)
)
;
replaceInListIfExist
(
operator
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
operator
)
)
;
}
