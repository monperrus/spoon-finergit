@java.lang.Override
public
void
visitCtCompilationUnit
(
spoon
.
reflect
.
declaration
.
CtCompilationUnit
compilationUnit
)
{
replaceInListIfExist
(
compilationUnit
.
getComments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementCommentsReplaceListener
(
compilationUnit
)
)
;
replaceInListIfExist
(
compilationUnit
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
compilationUnit
)
)
;
replaceElementIfExist
(
compilationUnit
.
getPackageDeclaration
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtCompilationUnitPackageDeclarationReplaceListener
(
compilationUnit
)
)
;
replaceInListIfExist
(
compilationUnit
.
getImports
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtCompilationUnitImportsReplaceListener
(
compilationUnit
)
)
;
replaceElementIfExist
(
compilationUnit
.
getDeclaredModuleReference
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtCompilationUnitDeclaredModuleReferenceReplaceListener
(
compilationUnit
)
)
;
replaceInListIfExist
(
compilationUnit
.
getDeclaredTypeReferences
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtCompilationUnitDeclaredTypeReferencesReplaceListener
(
compilationUnit
)
)
;
}
