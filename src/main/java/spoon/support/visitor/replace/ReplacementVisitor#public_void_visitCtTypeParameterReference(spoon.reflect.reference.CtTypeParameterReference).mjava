public
void
visitCtTypeParameterReference
(
final
spoon
.
reflect
.
reference
.
CtTypeParameterReference
ref
)
{
replaceElementIfExist
(
ref
.
getPackage
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypeReferencePackageReplaceListener
(
ref
)
)
;
replaceElementIfExist
(
ref
.
getDeclaringType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypeReferenceDeclaringTypeReplaceListener
(
ref
)
)
;
replaceInListIfExist
(
ref
.
getActualTypeArguments
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtGenericElementReferenceActualTypeArgumentsReplaceListener
(
ref
)
)
;
replaceInListIfExist
(
ref
.
getAnnotations
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtElementAnnotationsReplaceListener
(
ref
)
)
;
replaceElementIfExist
(
ref
.
getBoundingType
(
)
,
new
spoon
.
support
.
visitor
.
replace
.
ReplacementVisitor
.
CtTypeParameterReferenceBoundingTypeReplaceListener
(
ref
)
)
;
}
