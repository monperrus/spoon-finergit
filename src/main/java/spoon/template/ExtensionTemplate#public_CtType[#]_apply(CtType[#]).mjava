@Override
public
CtType
<
?
>
apply
(
CtType
<
?
>
target
)
{
CtClass
<
?
Template
<
?
>
>
templateType
=
Substitution
.
getTemplateCtClass
(
target
.
getFactory
(
)
,
this
)
;
CtType
<
?
>
generated
=
TemplateBuilder
.
createPattern
(
templateType
,
templateType
,
this
)
.
setAddGeneratedBy
(
isAddGeneratedBy
(
)
)
.
substituteSingle
(
target
,
CtType
.
class
)
;
for
(
CtTypeReference
<
?
>
iface
:
new
ArrayList
<
>
(
generated
.
getSuperInterfaces
(
)
)
)
{
iface
.
delete
(
)
;
target
.
addSuperInterface
(
iface
)
;
}
for
(
CtTypeMember
tm
:
new
ArrayList
<
>
(
generated
.
getTypeMembers
(
)
)
)
{
tm
.
delete
(
)
;
target
.
addTypeMember
(
tm
)
;
}
return
target
;
}
