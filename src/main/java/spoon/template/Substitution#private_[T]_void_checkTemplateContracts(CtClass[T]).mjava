private
static
<
T
>
void
checkTemplateContracts
(
CtClass
<
T
>
c
)
{
for
(
CtField
f
:
c
.
getFields
(
)
)
{
Parameter
templateParamAnnotation
=
f
.
getAnnotation
(
Parameter
.
class
)
;
if
(
templateParamAnnotation
!=
null
&&
!
templateParamAnnotation
.
value
(
)
.
equals
(
""
)
)
{
String
proxyName
=
templateParamAnnotation
.
value
(
)
;
if
(
!
f
.
getType
(
)
.
equals
(
c
.
getFactory
(
)
.
Type
(
)
.
STRING
)
)
{
throw
new
TemplateException
(
"proxy template parameter must be typed as String "
+
f
.
getType
(
)
.
getQualifiedName
(
)
)
;
}
boolean
found
=
false
;
for
(
CtTypeMember
member
:
c
.
getTypeMembers
(
)
)
{
if
(
member
.
getSimpleName
(
)
.
equals
(
proxyName
)
)
{
found
=
true
;
}
}
if
(
!
found
)
{
throw
new
TemplateException
(
"if a proxy parameter is declared and named \""
+
proxyName
+
"\", then a type member named \"\" + proxyName + \"\" must exist."
)
;
}
}
}
}
