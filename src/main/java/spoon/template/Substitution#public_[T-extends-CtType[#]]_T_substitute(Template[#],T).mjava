/** 
 * Substitutes all the template parameters in a given template type and returns the resulting type.
 * @param template the template instance (holds the parameter values)
 * @param templateType the template type
 * @return a copy of the template type where all the parameters has beensubstituted
 */
@SuppressWarnings("unchecked")
public
static
<
T
extends
CtType
<
?
>
>
T
substitute
(
Template
<
?
>
template
,
T
templateType
)
{
CtType
<
?
>
result
=
TemplateBuilder
.
createPattern
(
templateType
,
template
)
.
substituteSingle
(
null
,
CtType
.
class
)
;
result
.
setPositions
(
null
)
;
return
(
T
)
result
;
}
