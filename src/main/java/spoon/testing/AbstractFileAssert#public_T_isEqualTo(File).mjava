/** 
 * Verifies that the actual value is equal to the given one.
 * @param expected The expected location of source code.
 * @return {@code this} assertion object.
 */
public
T
isEqualTo
(
File
expected
)
{
assertNotNull
(
expected
)
;
assertExists
(
expected
)
;
final
Factory
actualFactory
=
build
(
actual
)
;
final
Factory
expectedFactory
=
build
(
expected
)
;
process
(
actualFactory
,
processors
)
;
final
List
<
CtType
<
?
>
>
allActual
=
actualFactory
.
Type
(
)
.
getAll
(
)
;
final
List
<
CtType
<
?
>
>
allExpected
=
expectedFactory
.
Type
(
)
.
getAll
(
)
;
for
(
int
i
=
0
;
i
<
allActual
.
size
(
)
;
i
++
)
{
final
CtType
<
?
>
currentActual
=
allActual
.
get
(
i
)
;
final
CtType
<
?
>
currentExpected
=
allExpected
.
get
(
i
)
;
if
(
!
currentActual
.
equals
(
currentExpected
)
)
{
throw
new
AssertionError
(
String
.
format
(
"%1$s and %2$s aren't equals."
,
currentActual
.
getQualifiedName
(
)
,
currentExpected
.
getQualifiedName
(
)
)
)
;
}
}
return
this
.
myself
;
}
