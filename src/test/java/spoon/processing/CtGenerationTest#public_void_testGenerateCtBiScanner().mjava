@Test
public
void
testGenerateCtBiScanner
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
getEnvironment
(
)
.
setCommentEnabled
(
true
)
;
launcher
.
getEnvironment
(
)
.
useTabulations
(
true
)
;
launcher
.
setSourceOutputDirectory
(
"./target/generated/"
)
;
launcher
.
addInputResource
(
"./src/main/java/spoon/reflect/code"
)
;
launcher
.
addInputResource
(
"./src/main/java/spoon/reflect/declaration"
)
;
launcher
.
addInputResource
(
"./src/main/java/spoon/reflect/reference"
)
;
launcher
.
addInputResource
(
"./src/main/java/spoon/reflect/internal"
)
;
launcher
.
addInputResource
(
"./src/main/java/spoon/reflect/visitor/CtScanner.java"
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/generating/scanner/"
)
;
launcher
.
addProcessor
(
new
CtBiScannerGenerator
(
)
)
;
launcher
.
setOutputFilter
(
new
RegexFilter
(
"spoon.reflect.visitor.CtBiScannerDefault"
)
)
;
launcher
.
run
(
)
;
assertThat
(
build
(
new
File
(
"./src/main/java/spoon/reflect/visitor/CtBiScannerDefault.java"
)
)
.
Class
(
)
.
get
(
CtBiScannerDefault
.
class
)
)
.
isEqualTo
(
build
(
new
File
(
"./target/generated/spoon/reflect/visitor/CtBiScannerDefault.java"
)
)
.
Class
(
)
.
get
(
CtBiScannerDefault
.
class
)
)
;
}
