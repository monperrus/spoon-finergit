@Test
public
void
testGetSuperclass
(
)
{
final
CtType
<
?
>
extendsArrayList
=
this
.
factory
.
Type
(
)
.
get
(
ExtendsArrayList
.
class
)
;
assertEquals
(
1
,
extendsArrayList
.
getMethods
(
)
.
size
(
)
)
;
int
nbMethodExtendedArrayList
=
extendsArrayList
.
getAllMethods
(
)
.
size
(
)
;
final
CtType
<
?
>
subClass
=
this
.
factory
.
Type
(
)
.
get
(
Subclass
.
class
)
;
assertEquals
(
2
,
subClass
.
getMethods
(
)
.
size
(
)
)
;
assertEquals
(
nbMethodExtendedArrayList
+
2
,
subClass
.
getAllMethods
(
)
.
size
(
)
)
;
CtTypeReference
<
?
>
superclass
=
subClass
.
getSuperclass
(
)
;
assertEquals
(
ExtendsArrayList
.
class
.
getName
(
)
,
superclass
.
getQualifiedName
(
)
)
;
assertEquals
(
ExtendsArrayList
.
class
.
getName
(
)
,
superclass
.
getQualifiedName
(
)
)
;
assertNotNull
(
superclass
.
getSuperclass
(
)
)
;
Set
<
CtTypeReference
<
?
>
>
superInterfaces
=
subClass
.
getSuperInterfaces
(
)
;
assertEquals
(
1
,
superInterfaces
.
size
(
)
)
;
CtTypeReference
<
?
>
superinterface
=
superInterfaces
.
iterator
(
)
.
next
(
)
;
assertEquals
(
Subinterface
.
class
.
getName
(
)
,
superinterface
.
getQualifiedName
(
)
)
;
assertNull
(
superinterface
.
getSuperclass
(
)
)
;
final
CtType
<
?
>
type2
=
this
.
factory
.
Type
(
)
.
get
(
Subinterface
.
class
)
;
assertNull
(
type2
.
getSuperclass
(
)
)
;
CtMethod
<
?
>
fooConcrete
=
subClass
.
getMethodsByName
(
"foo"
)
.
get
(
0
)
;
CtMethod
<
?
>
fooAbstract
=
type2
.
getMethodsByName
(
"foo"
)
.
get
(
0
)
;
assertEquals
(
fooConcrete
.
getSignature
(
)
,
fooAbstract
.
getSignature
(
)
)
;
Assert
.
assertNotEquals
(
fooConcrete
,
fooAbstract
)
;
assertEquals
(
subClass
.
getMethodsByName
(
"foo"
)
.
get
(
0
)
.
getSignature
(
)
,
type2
.
getMethodsByName
(
"foo"
)
.
get
(
0
)
.
getSignature
(
)
)
;
}
