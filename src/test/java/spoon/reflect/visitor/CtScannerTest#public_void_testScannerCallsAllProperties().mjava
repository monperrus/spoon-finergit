@Test
public
void
testScannerCallsAllProperties
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/main/java/spoon/reflect/"
)
;
launcher
.
run
(
)
;
CtClass
<
?
>
scanner
=
(
CtClass
<
?
>
)
launcher
.
getFactory
(
)
.
Type
(
)
.
get
(
CtScanner
.
class
)
;
for
(
CtType
<
?
>
t
:
SpoonTestHelpers
.
getAllInstantiableMetamodelInterfaces
(
)
)
{
CtMethod
<
?
>
visitMethod
=
scanner
.
getMethodsByName
(
"visit"
+
t
.
getSimpleName
(
)
)
.
get
(
0
)
;
for
(
CtMethod
<
?
>
m
:
SpoonTestHelpers
.
getAllMetamodelMethods
(
t
)
)
{
if
(
isMetamodelProperty
(
t
,
m
)
)
{
assertTrue
(
"no "
+
m
.
getSignature
(
)
+
" in "
+
visitMethod
,
visitMethod
.
getElements
(
new
TypeFilter
<
CtInvocation
>
(
CtInvocation
.
class
)
{
@Override
public
boolean
matches
(
CtInvocation
element
)
{
return
super
.
matches
(
element
)
&&
element
.
getExecutable
(
)
.
getSimpleName
(
)
.
equals
(
m
.
getSimpleName
(
)
)
;
}
}
)
.
size
(
)
>
0
)
;
}
}
}
}
