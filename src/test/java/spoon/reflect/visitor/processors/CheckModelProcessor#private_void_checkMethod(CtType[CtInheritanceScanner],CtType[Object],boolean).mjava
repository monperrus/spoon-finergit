private
void
checkMethod
(
CtType
<
CtInheritanceScanner
>
scanner
,
CtType
<
Object
>
theInterface
,
boolean
isAbstract
)
{
int
nbScanner
=
isAbstract
?
1
:
0
,
nbVisit
=
isAbstract
?
0
:
1
;
final
List
<
CtMethod
<
?
>
>
scanners
=
scanner
.
getMethodsByName
(
"scan"
+
theInterface
.
getSimpleName
(
)
)
;
if
(
scanners
.
size
(
)
!=
nbScanner
)
{
if
(
!
(
scanners
.
size
(
)
>
0
&&
scanners
.
get
(
0
)
.
getAnnotation
(
Deprecated
.
class
)
!=
null
)
)
{
failure
.
fail
(
"You should have "
+
nbScanner
+
" scanner and "
+
nbVisit
+
" visit methods for the element "
+
theInterface
.
getSimpleName
(
)
+
" in the CtInheritanceScanner."
)
;
}
}
final
List
<
CtMethod
<
?
>
>
visits
=
scanner
.
getMethodsByName
(
"visit"
+
theInterface
.
getSimpleName
(
)
)
;
if
(
visits
.
size
(
)
!=
nbVisit
)
{
if
(
!
(
visits
.
size
(
)
>
0
&&
visits
.
get
(
0
)
.
getAnnotation
(
Deprecated
.
class
)
!=
null
)
)
{
failure
.
fail
(
"You should have "
+
nbScanner
+
" scanner and "
+
nbVisit
+
" visit methods for the element "
+
theInterface
.
getSimpleName
(
)
+
" in the CtInheritanceScanner."
)
;
}
}
}
