@Override
public
void
process
(
CtClass
<
?
>
element
)
{
final
CtType
<
CtVisitor
>
scanner
=
getFactory
(
)
.
Type
(
)
.
get
(
CtScanner
.
class
)
;
final
String
qualifiedName
=
element
.
getQualifiedName
(
)
.
replace
(
".support."
,
"."
)
;
final
String
interfaceName
=
qualifiedName
.
substring
(
0
,
qualifiedName
.
lastIndexOf
(
"Impl"
)
)
;
final
CtType
<
Object
>
theInterface
=
getFactory
(
)
.
Type
(
)
.
get
(
interfaceName
)
;
final
List
<
CtMethod
<
?
>
>
visits
=
scanner
.
getMethodsByName
(
"visit"
+
theInterface
.
getSimpleName
(
)
)
;
if
(
visits
.
size
(
)
!=
1
)
{
throw
new
AssertionError
(
"You must have only one visitor methods in CtScanner for visit"
+
theInterface
.
getSimpleName
(
)
)
;
}
final
CtMethod
<
?
>
visit
=
visits
.
get
(
0
)
;
if
(
visit
.
getBody
(
)
.
getStatements
(
)
.
size
(
)
<
2
)
{
throw
new
AssertionError
(
"You must have minimum 2 statements in the visit method to call enter and exit in visit"
+
theInterface
.
getSimpleName
(
)
)
;
}
checkInvocation
(
"enter"
,
visit
.
getBody
(
)
.
getStatement
(
0
)
)
;
checkInvocation
(
"exit"
,
visit
.
getBody
(
)
.
getLastStatement
(
)
)
;
}
