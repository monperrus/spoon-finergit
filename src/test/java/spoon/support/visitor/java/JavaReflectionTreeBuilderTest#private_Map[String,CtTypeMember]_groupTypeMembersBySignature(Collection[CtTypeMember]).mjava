private
static
Map
<
String
,
CtTypeMember
>
groupTypeMembersBySignature
(
Collection
<
CtTypeMember
>
typeMembers
)
{
Map
<
String
,
CtTypeMember
>
typeMembersByName
=
new
HashMap
<
>
(
)
;
for
(
CtTypeMember
tm
:
typeMembers
)
{
String
name
;
if
(
tm
instanceof
CtExecutable
)
{
CtExecutable
<
?
>
exec
=
(
(
CtExecutable
)
tm
)
;
name
=
exec
.
getSignature
(
)
;
}
else
{
name
=
tm
.
getSimpleName
(
)
;
}
CtTypeMember
conflictTM
=
typeMembersByName
.
put
(
name
,
tm
)
;
if
(
conflictTM
!=
null
)
{
throw
new
SpoonException
(
"There are two type members with name: "
+
name
+
" in "
+
tm
.
getParent
(
CtType
.
class
)
.
getQualifiedName
(
)
)
;
}
}
return
typeMembersByName
;
}
