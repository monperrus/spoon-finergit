public
static
List
<
CtType
<
?
CtElement
>
>
getAllInstantiableMetamodelInterfaces
(
)
{
List
<
CtType
<
?
CtElement
>
>
result
=
new
ArrayList
<
>
(
)
;
SpoonAPI
interfaces
=
new
Launcher
(
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/declaration"
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/code"
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/reference"
)
;
interfaces
.
buildModel
(
)
;
SpoonAPI
implementations
=
new
Launcher
(
)
;
implementations
.
addInputResource
(
"src/main/java/spoon/support/reflect/declaration"
)
;
implementations
.
addInputResource
(
"src/main/java/spoon/support/reflect/code"
)
;
implementations
.
addInputResource
(
"src/main/java/spoon/support/reflect/reference"
)
;
implementations
.
buildModel
(
)
;
for
(
CtType
<
?
>
itf
:
interfaces
.
getModel
(
)
.
getAllTypes
(
)
)
{
String
impl
=
itf
.
getQualifiedName
(
)
.
replace
(
"spoon.reflect"
,
"spoon.support.reflect"
)
+
"Impl"
;
CtType
implClass
=
implementations
.
getFactory
(
)
.
Type
(
)
.
get
(
impl
)
;
if
(
implClass
!=
null
&&
!
implClass
.
hasModifier
(
ModifierKind
.
ABSTRACT
)
)
{
result
.
add
(
(
CtType
<
?
CtElement
>
)
itf
)
;
}
}
return
result
;
}
