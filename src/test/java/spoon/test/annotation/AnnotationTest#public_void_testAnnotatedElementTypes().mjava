@Test
public
void
testAnnotatedElementTypes
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/"
)
;
launcher
.
buildModel
(
)
;
Factory
factory
=
launcher
.
getFactory
(
)
;
CtPackage
pkg
=
factory
.
Package
(
)
.
get
(
"spoon.test.annotation.testclasses"
)
;
List
<
CtAnnotation
<
?
>
>
annotations
=
pkg
.
getAnnotations
(
)
;
assertEquals
(
2
,
annotations
.
size
(
)
)
;
assertEquals
(
pkg
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
PACKAGE
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
CtClass
<
?
>
clazz
=
pkg
.
getType
(
"Main"
)
;
assertSame
(
Main
.
class
,
clazz
.
getActualClass
(
)
)
;
annotations
=
clazz
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
clazz
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
TYPE
,
clazz
.
getAnnotations
(
)
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
List
<
CtMethod
<
?
>
>
methods
=
clazz
.
getMethodsByName
(
"toString"
)
;
assertEquals
(
1
,
methods
.
size
(
)
)
;
CtMethod
<
?
>
method
=
methods
.
get
(
0
)
;
assertEquals
(
"toString"
,
method
.
getSimpleName
(
)
)
;
annotations
=
method
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
method
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
METHOD
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
methods
=
clazz
.
getMethodsByName
(
"m"
)
;
assertEquals
(
1
,
methods
.
size
(
)
)
;
method
=
methods
.
get
(
0
)
;
assertEquals
(
"m"
,
method
.
getSimpleName
(
)
)
;
List
<
CtParameter
<
?
>
>
parameters
=
method
.
getParameters
(
)
;
assertEquals
(
1
,
parameters
.
size
(
)
)
;
CtParameter
<
?
>
parameter
=
parameters
.
get
(
0
)
;
annotations
=
parameter
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
parameter
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
PARAMETER
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
Set
<
?
CtConstructor
<
?
>
>
constructors
=
clazz
.
getConstructors
(
)
;
assertEquals
(
1
,
constructors
.
size
(
)
)
;
CtConstructor
<
?
>
constructor
=
constructors
.
iterator
(
)
.
next
(
)
;
annotations
=
constructor
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
constructor
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
CONSTRUCTOR
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
methods
=
clazz
.
getMethodsByName
(
"m1"
)
;
assertEquals
(
1
,
methods
.
size
(
)
)
;
method
=
methods
.
get
(
0
)
;
annotations
=
method
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
CtAnnotation
<
?
>
annotation
=
annotations
.
get
(
0
)
;
assertEquals
(
method
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
METHOD
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
Object
element
=
annotation
.
getValues
(
)
.
get
(
"ia"
)
;
assertNotNull
(
element
)
;
assertTrue
(
element
instanceof
CtAnnotation
)
;
assertEquals
(
annotation
,
(
(
CtAnnotation
<
?
>
)
element
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
ANNOTATION_TYPE
,
(
(
CtAnnotation
<
?
>
)
element
)
.
getAnnotatedElementType
(
)
)
;
CtEnum
<
?
>
enumeration
=
pkg
.
getType
(
"AnnotParamTypeEnum"
)
;
assertSame
(
AnnotParamTypeEnum
.
class
,
enumeration
.
getActualClass
(
)
)
;
annotations
=
enumeration
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
enumeration
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
TYPE
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
List
<
CtEnumValue
<
?
>
>
fields
=
enumeration
.
getEnumValues
(
)
;
assertEquals
(
3
,
fields
.
size
(
)
)
;
annotations
=
fields
.
get
(
0
)
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
fields
.
get
(
0
)
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
FIELD
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
CtInterface
<
?
>
ctInterface
=
pkg
.
getType
(
"TestInterface"
)
;
assertSame
(
TestInterface
.
class
,
ctInterface
.
getActualClass
(
)
)
;
annotations
=
ctInterface
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
ctInterface
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
TYPE
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
CtAnnotationType
<
?
>
annotationType
=
pkg
.
getType
(
"Bound"
)
;
assertSame
(
Bound
.
class
,
annotationType
.
getActualClass
(
)
)
;
assertNull
(
annotationType
.
getSuperclass
(
)
)
;
assertEquals
(
1
,
annotationType
.
getMethods
(
)
.
size
(
)
)
;
assertEquals
(
0
,
annotationType
.
getSuperInterfaces
(
)
.
size
(
)
)
;
annotations
=
annotationType
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
assertEquals
(
annotationType
,
annotations
.
get
(
0
)
.
getAnnotatedElement
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
ANNOTATION_TYPE
,
annotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
}
