@Test
public
void
testAnnotationArray
(
)
throws
Exception
{
Method
barOneValueMethod
=
DumbKlass
.
class
.
getMethod
(
"barOneValue"
)
;
Method
barMultipleValueMethod
=
DumbKlass
.
class
.
getMethod
(
"barMultipleValues"
)
;
Annotation
annotationOneValue
=
barOneValueMethod
.
getAnnotations
(
)
[
0
]
;
Annotation
annotationMultiple
=
barMultipleValueMethod
.
getAnnotations
(
)
[
0
]
;
Object
oneValue
=
annotationOneValue
.
getClass
(
)
.
getMethod
(
"role"
)
.
invoke
(
annotationOneValue
)
;
Object
multipleValue
=
annotationMultiple
.
getClass
(
)
.
getMethod
(
"role"
)
.
invoke
(
annotationMultiple
)
;
assertTrue
(
"[Java] annotation are not arrays type"
,
oneValue
instanceof
String
[
]
&&
multipleValue
instanceof
String
[
]
)
;
assertEquals
(
"[Java] annotation string values are not the same"
,
(
(
String
[
]
)
oneValue
)
[
0
]
,
(
(
String
[
]
)
multipleValue
)
[
0
]
)
;
final
Factory
shadowFactory
=
createFactory
(
)
;
CtType
<
?
>
shadowDumbKlass
=
shadowFactory
.
Type
(
)
.
get
(
DumbKlass
.
class
)
;
CtMethod
<
?
>
shadowBarOne
=
shadowDumbKlass
.
getMethodsByName
(
"barOneValue"
)
.
get
(
0
)
;
CtAnnotation
shadowAnnotationOne
=
shadowBarOne
.
getAnnotations
(
)
.
get
(
0
)
;
CtMethod
<
?
>
shadowMultiple
=
shadowDumbKlass
.
getMethodsByName
(
"barMultipleValues"
)
.
get
(
0
)
;
CtAnnotation
shadowAnnotationMultiple
=
shadowMultiple
.
getAnnotations
(
)
.
get
(
0
)
;
assertEquals
(
"[Shadow] Annotation one and multiple are not of the same type"
,
shadowAnnotationOne
.
getAnnotationType
(
)
,
shadowAnnotationMultiple
.
getAnnotationType
(
)
)
;
assertEquals
(
"[Shadow] Annotation one and multiples values are not the same"
,
shadowAnnotationOne
.
getValue
(
"role"
)
,
shadowAnnotationMultiple
.
getValue
(
"role"
)
)
;
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/shadow"
)
;
CtModel
model
=
launcher
.
buildModel
(
)
;
CtClass
<
?
>
dumbKlass
=
model
.
getElements
(
new
NamedElementFilter
<
>
(
CtClass
.
class
,
"DumbKlass"
)
)
.
get
(
0
)
;
CtMethod
<
?
>
barOneValue
=
dumbKlass
.
getMethodsByName
(
"barOneValue"
)
.
get
(
0
)
;
CtAnnotation
annotationOne
=
barOneValue
.
getAnnotations
(
)
.
get
(
0
)
;
CtMethod
<
?
>
barMultipleValue
=
dumbKlass
.
getMethodsByName
(
"barMultipleValues"
)
.
get
(
0
)
;
CtAnnotation
annotationMultipleVal
=
barMultipleValue
.
getAnnotations
(
)
.
get
(
0
)
;
assertEquals
(
"[Spoon] Annotation one and multiple are not of the same type"
,
annotationOne
.
getAnnotationType
(
)
,
annotationMultipleVal
.
getAnnotationType
(
)
)
;
assertTrue
(
annotationOne
.
getValue
(
"role"
)
instanceof
CtLiteral
)
;
assertTrue
(
annotationMultipleVal
.
getValue
(
"role"
)
instanceof
CtNewArray
)
;
assertTrue
(
annotationOne
.
getWrappedValue
(
"role"
)
instanceof
CtNewArray
)
;
assertTrue
(
annotationMultipleVal
.
getWrappedValue
(
"role"
)
instanceof
CtNewArray
)
;
assertEquals
(
annotationMultipleVal
.
getWrappedValue
(
"role"
)
,
annotationOne
.
getWrappedValue
(
"role"
)
)
;
assertEquals
(
annotationOne
.
getAnnotationType
(
)
,
shadowAnnotationOne
.
getAnnotationType
(
)
)
;
assertTrue
(
shadowAnnotationOne
.
getValue
(
"role"
)
instanceof
CtNewArray
)
;
}
