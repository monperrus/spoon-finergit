@Test
public
void
testAnnotationInterfacePreserveMethods
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/PortRange.java"
)
;
launcher
.
buildModel
(
)
;
Factory
factory
=
launcher
.
getFactory
(
)
;
final
CtAnnotationType
<
?
>
ctAnnotationType
=
(
CtAnnotationType
)
factory
.
Type
(
)
.
get
(
PortRange
.
class
)
;
List
<
CtMethod
<
?
>
>
ctMethodMin
=
ctAnnotationType
.
getMethodsByName
(
"min"
)
;
assertEquals
(
"Method min is preserved after transformation"
,
1
,
ctMethodMin
.
size
(
)
)
;
List
<
CtMethod
<
?
>
>
ctMethodMax
=
ctAnnotationType
.
getMethodsByName
(
"max"
)
;
assertEquals
(
"Method max is preserved after transformation"
,
1
,
ctMethodMax
.
size
(
)
)
;
List
<
CtMethod
<
?
>
>
ctMethodMessage
=
ctAnnotationType
.
getMethodsByName
(
"message"
)
;
assertEquals
(
"Method message is preserved after transformation"
,
1
,
ctMethodMessage
.
size
(
)
)
;
List
<
CtMethod
<
?
>
>
ctMethodGroups
=
ctAnnotationType
.
getMethodsByName
(
"groups"
)
;
assertEquals
(
"Method groups is preserved after transformation"
,
1
,
ctMethodGroups
.
size
(
)
)
;
List
<
CtMethod
<
?
>
>
ctMethodPayload
=
ctAnnotationType
.
getMethodsByName
(
"payload"
)
;
assertEquals
(
"Method payload is preserved after transformation"
,
1
,
ctMethodPayload
.
size
(
)
)
;
}
