@Test
public
void
testAnnotationParameterTypes
(
)
throws
Exception
{
CtType
<
?
>
type
=
this
.
factory
.
Type
(
)
.
get
(
"spoon.test.annotation.testclasses.Main"
)
;
CtMethod
<
?
>
m1
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"m1"
)
)
.
get
(
0
)
;
List
<
CtAnnotation
<
?
Annotation
>
>
annotations
=
m1
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
CtAnnotation
<
?
>
a
=
annotations
.
get
(
0
)
;
AnnotParamTypes
annot
=
(
AnnotParamTypes
)
a
.
getActualAnnotation
(
)
;
assertEquals
(
42
,
annot
.
integer
(
)
)
;
assertEquals
(
1
,
annot
.
integers
(
)
.
length
)
;
assertEquals
(
42
,
annot
.
integers
(
)
[
0
]
)
;
assertEquals
(
"Hello World!"
,
annot
.
string
(
)
)
;
assertEquals
(
2
,
annot
.
strings
(
)
.
length
)
;
assertEquals
(
"Hello"
,
annot
.
strings
(
)
[
0
]
)
;
assertEquals
(
"World"
,
annot
.
strings
(
)
[
1
]
)
;
assertEquals
(
Integer
.
class
,
annot
.
clazz
(
)
)
;
assertEquals
(
2
,
annot
.
classes
(
)
.
length
)
;
assertEquals
(
Integer
.
class
,
annot
.
classes
(
)
[
0
]
)
;
assertEquals
(
String
.
class
,
annot
.
classes
(
)
[
1
]
)
;
assertEquals
(
true
,
annot
.
b
(
)
)
;
assertEquals
(
'c'
,
annot
.
c
(
)
)
;
assertEquals
(
42
,
annot
.
byt
(
)
)
;
assertEquals
(
(
short
)
42
,
annot
.
s
(
)
)
;
assertEquals
(
42
,
annot
.
l
(
)
)
;
assertEquals
(
3.14f
,
annot
.
f
(
)
,
0f
)
;
assertEquals
(
3.14159
,
annot
.
d
(
)
,
0
)
;
assertEquals
(
AnnotParamTypeEnum
.
G
,
annot
.
e
(
)
)
;
assertEquals
(
"dd"
,
annot
.
ia
(
)
.
value
(
)
)
;
CtMethod
<
?
>
m2
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"m2"
)
)
.
get
(
0
)
;
annotations
=
m2
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
a
=
annotations
.
get
(
0
)
;
annot
=
(
AnnotParamTypes
)
a
.
getActualAnnotation
(
)
;
assertEquals
(
42
,
annot
.
integer
(
)
)
;
assertEquals
(
1
,
annot
.
integers
(
)
.
length
)
;
assertEquals
(
42
,
annot
.
integers
(
)
[
0
]
)
;
assertEquals
(
"Hello World!"
,
annot
.
string
(
)
)
;
assertEquals
(
2
,
annot
.
strings
(
)
.
length
)
;
assertEquals
(
"Hello"
,
annot
.
strings
(
)
[
0
]
)
;
assertEquals
(
"world"
,
annot
.
strings
(
)
[
1
]
)
;
assertEquals
(
false
,
annot
.
b
(
)
)
;
assertEquals
(
42
,
annot
.
byt
(
)
)
;
assertEquals
(
(
short
)
42
,
annot
.
s
(
)
)
;
assertEquals
(
42
,
annot
.
l
(
)
)
;
assertEquals
(
3.14f
,
annot
.
f
(
)
,
0f
)
;
assertEquals
(
3.14159
,
annot
.
d
(
)
,
0
)
;
assertEquals
(
AnnotParamTypeEnum
.
G
,
annot
.
e
(
)
)
;
assertEquals
(
"dd"
,
annot
.
ia
(
)
.
value
(
)
)
;
CtMethod
<
?
>
m3
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"m3"
)
)
.
get
(
0
)
;
annotations
=
m3
.
getAnnotations
(
)
;
assertEquals
(
1
,
annotations
.
size
(
)
)
;
a
=
annotations
.
get
(
0
)
;
annot
=
(
AnnotParamTypes
)
a
.
getActualAnnotation
(
)
;
assertEquals
(
45
,
annot
.
integer
(
)
)
;
assertEquals
(
2
,
annot
.
integers
(
)
.
length
)
;
assertEquals
(
40
,
annot
.
integers
(
)
[
0
]
)
;
assertEquals
(
42
*
3
,
annot
.
integers
(
)
[
1
]
)
;
assertEquals
(
"Hello World!concatenated"
,
annot
.
string
(
)
)
;
assertEquals
(
2
,
annot
.
strings
(
)
.
length
)
;
assertEquals
(
"Helloconcatenated"
,
annot
.
strings
(
)
[
0
]
)
;
assertEquals
(
"worldconcatenated"
,
annot
.
strings
(
)
[
1
]
)
;
assertEquals
(
true
,
annot
.
b
(
)
)
;
assertEquals
(
42
^
1
,
annot
.
byt
(
)
)
;
assertEquals
(
(
short
)
42
/
2
,
annot
.
s
(
)
)
;
assertEquals
(
43
,
annot
.
l
(
)
)
;
assertEquals
(
3.14f
*
2f
,
annot
.
f
(
)
,
0f
)
;
assertEquals
(
3.14159d
/
3d
,
annot
.
d
(
)
,
0
)
;
assertEquals
(
AnnotParamTypeEnum
.
G
,
annot
.
e
(
)
)
;
assertEquals
(
"dddd"
,
annot
.
ia
(
)
.
value
(
)
)
;
}
