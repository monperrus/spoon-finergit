@Test
public
void
testAnnotationTypeAndFieldOnField
(
)
throws
IOException
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/typeandfield"
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
setSourceOutputDirectory
(
"./target/spooned-typeandfield"
)
;
launcher
.
run
(
)
;
CtType
type
=
launcher
.
getFactory
(
)
.
Type
(
)
.
get
(
SimpleClass
.
class
)
;
CtField
field
=
type
.
getField
(
"mandatoryField"
)
;
assertEquals
(
1
,
field
.
getAnnotations
(
)
.
size
(
)
)
;
CtAnnotation
annotation
=
field
.
getAnnotations
(
)
.
get
(
0
)
;
assertEquals
(
"spoon.test.annotation.testclasses.typeandfield.AnnotTypeAndField"
,
annotation
.
getAnnotationType
(
)
.
getQualifiedName
(
)
)
;
CtTypeReference
fieldType
=
field
.
getType
(
)
;
assertEquals
(
1
,
fieldType
.
getAnnotations
(
)
.
size
(
)
)
;
CtAnnotation
anotherAnnotation
=
fieldType
.
getAnnotations
(
)
.
get
(
0
)
;
assertEquals
(
annotation
,
anotherAnnotation
)
;
assertEquals
(
"java.lang.String"
,
field
.
getType
(
)
.
getQualifiedName
(
)
)
;
assertEquals
(
1
,
field
.
getType
(
)
.
getAnnotations
(
)
.
size
(
)
)
;
List
<
String
>
lines
=
Files
.
readAllLines
(
new
File
(
"./target/spooned-typeandfield/spoon/test/annotation/testclasses/typeandfield/SimpleClass.java"
)
.
toPath
(
)
)
;
String
fileContent
=
StringUtils
.
join
(
lines
,
"\n"
)
;
assertTrue
(
"Content :"
+
fileContent
,
fileContent
.
contains
(
"@spoon.test.annotation.testclasses.typeandfield.AnnotTypeAndField"
)
)
;
assertTrue
(
"Content :"
+
fileContent
,
fileContent
.
contains
(
"public java.lang.String mandatoryField;"
)
)
;
}
