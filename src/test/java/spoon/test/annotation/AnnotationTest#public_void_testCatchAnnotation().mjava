@Test
public
void
testCatchAnnotation
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/AnnotationCatch.java"
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/CustomAnnotation.java"
)
;
CtModel
model
=
launcher
.
buildModel
(
)
;
CtClass
<
?
>
clazz
=
model
.
getElements
(
new
NamedElementFilter
<
>
(
CtClass
.
class
,
"AnnotationCatch"
)
)
.
get
(
0
)
;
CtMethod
<
?
>
m1
=
clazz
.
getMethodsByName
(
"m1"
)
.
get
(
0
)
;
CtCatch
ctCatch
=
m1
.
getElements
(
new
TypeFilter
<
>
(
CtCatch
.
class
)
)
.
get
(
0
)
;
CtCatchVariable
<
?
>
ctCatchVariable
=
ctCatch
.
getParameter
(
)
;
assertTrue
(
ctCatch
.
getAnnotations
(
)
.
isEmpty
(
)
)
;
assertEquals
(
1
,
ctCatchVariable
.
getAnnotations
(
)
.
size
(
)
)
;
assertEquals
(
"@spoon.test.annotation.testclasses.CustomAnnotation(something = \"annotation string\")"
,
ctCatchVariable
.
getAnnotations
(
)
.
get
(
0
)
.
toString
(
)
)
;
}
