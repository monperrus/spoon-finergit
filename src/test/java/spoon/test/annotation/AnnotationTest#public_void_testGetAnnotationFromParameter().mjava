@Test
public
void
testGetAnnotationFromParameter
(
)
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addInputResource
(
"src/test/resources/noclasspath/Initializer.java"
)
;
String
output
=
"target/spooned-"
+
this
.
getClass
(
)
.
getSimpleName
(
)
+
"-firstspoon/"
;
spoon
.
setSourceOutputDirectory
(
output
)
;
spoon
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
Factory
factory
=
spoon
.
getFactory
(
)
;
spoon
.
buildModel
(
)
;
List
<
CtMethod
>
methods
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"setField"
)
)
;
assertThat
(
methods
.
size
(
)
,
is
(
1
)
)
;
CtMethod
methodSet
=
methods
.
get
(
0
)
;
assertThat
(
methodSet
.
getSimpleName
(
)
,
is
(
"setField"
)
)
;
List
<
CtParameter
>
parameters
=
methodSet
.
getParameters
(
)
;
assertThat
(
parameters
.
size
(
)
,
is
(
1
)
)
;
CtParameter
thisParameter
=
parameters
.
get
(
0
)
;
assertThat
(
thisParameter
.
getSimpleName
(
)
,
is
(
"this"
)
)
;
CtTypeReference
thisParamType
=
thisParameter
.
getType
(
)
;
assertThat
(
thisParamType
.
getSimpleName
(
)
,
is
(
"Initializer"
)
)
;
List
<
CtAnnotation
<
?
>
>
annotations
=
thisParameter
.
getType
(
)
.
getAnnotations
(
)
;
assertThat
(
annotations
.
size
(
)
,
is
(
2
)
)
;
CtAnnotation
unknownInit
=
annotations
.
get
(
0
)
;
CtAnnotation
raw
=
annotations
.
get
(
1
)
;
assertThat
(
unknownInit
.
getAnnotationType
(
)
.
getSimpleName
(
)
,
is
(
"UnknownInitialization"
)
)
;
assertThat
(
raw
.
getAnnotationType
(
)
.
getSimpleName
(
)
,
is
(
"Raw"
)
)
;
}
