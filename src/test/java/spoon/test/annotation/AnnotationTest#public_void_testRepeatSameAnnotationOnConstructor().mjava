@Test
public
void
testRepeatSameAnnotationOnConstructor
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/AnnotationsRepeated.java"
)
;
launcher
.
buildModel
(
)
;
Factory
factory
=
launcher
.
getFactory
(
)
;
final
CtClass
<
?
>
ctClass
=
(
CtClass
<
?
>
)
factory
.
Type
(
)
.
get
(
AnnotationsRepeated
.
class
)
;
final
CtConstructor
<
?
>
ctConstructor
=
ctClass
.
getConstructors
(
)
.
toArray
(
new
CtConstructor
<
?
>
[
]
)
[
0
]
;
final
List
<
CtAnnotation
<
?
Annotation
>
>
annotations
=
ctConstructor
.
getAnnotations
(
)
;
assertEquals
(
"Constructor must to have multi annotation of the same type"
,
2
,
annotations
.
size
(
)
)
;
assertEquals
(
"Type of the first annotation is AnnotationRepeated"
,
AnnotationRepeated
.
class
,
annotations
.
get
(
0
)
.
getAnnotationType
(
)
.
getActualClass
(
)
)
;
assertEquals
(
"Type of the second annotation is AnnotationRepeated"
,
AnnotationRepeated
.
class
,
annotations
.
get
(
1
)
.
getAnnotationType
(
)
.
getActualClass
(
)
)
;
assertEquals
(
"Argument of the first annotation is \"Constructor 1\""
,
"Constructor 1"
,
(
(
CtLiteral
)
annotations
.
get
(
0
)
.
getValue
(
"value"
)
)
.
getValue
(
)
)
;
assertEquals
(
"Argument of the second annotation is \"Constructor 2\""
,
"Constructor 2"
,
(
(
CtLiteral
)
annotations
.
get
(
1
)
.
getValue
(
"value"
)
)
.
getValue
(
)
)
;
}
