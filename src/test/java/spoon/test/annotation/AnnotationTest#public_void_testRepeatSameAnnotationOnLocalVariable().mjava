@Test
public
void
testRepeatSameAnnotationOnLocalVariable
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/AnnotationsRepeated.java"
)
;
launcher
.
buildModel
(
)
;
Factory
factory
=
launcher
.
getFactory
(
)
;
final
CtClass
<
?
>
ctClass
=
(
CtClass
<
?
>
)
factory
.
Type
(
)
.
get
(
AnnotationsRepeated
.
class
)
;
final
CtMethod
<
?
>
method
=
ctClass
.
getMethodsByName
(
"methodWithLocalVariable"
)
.
get
(
0
)
;
final
CtLocalVariable
<
?
>
ctLocalVariable
=
method
.
getBody
(
)
.
getElements
(
new
AbstractFilter
<
CtLocalVariable
<
?
>
>
(
CtLocalVariable
.
class
)
{
@Override
public
boolean
matches
(
CtLocalVariable
<
?
>
element
)
{
return
true
;
}
}
)
.
get
(
0
)
;
final
List
<
CtAnnotation
<
?
Annotation
>
>
annotations
=
ctLocalVariable
.
getAnnotations
(
)
;
assertEquals
(
"Local variable must to have multi annotation of the same type"
,
2
,
annotations
.
size
(
)
)
;
assertEquals
(
"Type of the first annotation is AnnotationRepeated"
,
AnnotationRepeated
.
class
,
annotations
.
get
(
0
)
.
getAnnotationType
(
)
.
getActualClass
(
)
)
;
assertEquals
(
"Type of the second annotation is AnnotationRepeated"
,
AnnotationRepeated
.
class
,
annotations
.
get
(
1
)
.
getAnnotationType
(
)
.
getActualClass
(
)
)
;
assertEquals
(
"Argument of the first annotation is \"Local 1\""
,
"Local 1"
,
(
(
CtLiteral
)
annotations
.
get
(
0
)
.
getValue
(
"value"
)
)
.
getValue
(
)
)
;
assertEquals
(
"Argument of the second annotation is \"Local 2\""
,
"Local 2"
,
(
(
CtLiteral
)
annotations
.
get
(
1
)
.
getValue
(
"value"
)
)
.
getValue
(
)
)
;
}
