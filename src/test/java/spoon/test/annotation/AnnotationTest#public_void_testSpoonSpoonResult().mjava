@Test
public
void
testSpoonSpoonResult
(
)
throws
Exception
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/dropwizard/GraphiteReporterFactory.java"
)
;
String
output
=
"target/spooned-"
+
this
.
getClass
(
)
.
getSimpleName
(
)
+
"-firstspoon/"
;
spoon
.
setSourceOutputDirectory
(
output
)
;
Factory
factory
=
spoon
.
getFactory
(
)
;
spoon
.
run
(
)
;
Launcher
spoon2
=
new
Launcher
(
)
;
spoon2
.
addInputResource
(
output
+
"/spoon/test/annotation/testclasses/dropwizard/GraphiteReporterFactory.java"
)
;
spoon2
.
buildModel
(
)
;
List
<
CtField
<
?
>
>
fields
=
spoon2
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
(
CtField
.
class
,
"port"
)
)
;
assertEquals
(
"Number of fields port should be 1"
,
1
,
fields
.
size
(
)
)
;
CtField
<
?
>
getport
=
fields
.
get
(
0
)
;
CtTypeReference
returnType
=
getport
.
getType
(
)
;
List
<
CtAnnotation
<
?
>
>
annotations
=
returnType
.
getAnnotations
(
)
;
assertEquals
(
"Number of annotation for return type of method getPort should be 1"
,
1
,
annotations
.
size
(
)
)
;
CtAnnotation
annotation
=
annotations
.
get
(
0
)
;
assertEquals
(
"Annotation should be @spoon.test.annotation.testclasses.PortRange"
,
"spoon.test.annotation.testclasses.PortRange"
,
annotation
.
getAnnotationType
(
)
.
getQualifiedName
(
)
)
;
}
