@Test
public
void
testUsageOfTypeAnnotationInReturnTypeInMethod
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/annotation/testclasses/AnnotationsAppliedOnAnyTypeInAClass.java"
)
;
launcher
.
buildModel
(
)
;
Factory
factory
=
launcher
.
getFactory
(
)
;
final
CtClass
<
?
>
ctClass
=
(
CtClass
<
?
>
)
factory
.
Type
(
)
.
get
(
"spoon.test.annotation.testclasses.AnnotationsAppliedOnAnyTypeInAClass"
)
;
final
CtMethod
<
?
>
method
=
ctClass
.
getMethodsByName
(
"m3"
)
.
get
(
0
)
;
final
List
<
CtAnnotation
<
?
Annotation
>
>
typeAnnotations
=
method
.
getType
(
)
.
getAnnotations
(
)
;
assertEquals
(
"Return type with a type annotation must have it in its model"
,
1
,
typeAnnotations
.
size
(
)
)
;
assertEquals
(
"Type annotation with the return type must be typed by TypeAnnotation"
,
TypeAnnotation
.
class
,
typeAnnotations
.
get
(
0
)
.
getAnnotationType
(
)
.
getActualClass
(
)
)
;
assertEquals
(
CtAnnotatedElementType
.
TYPE_USE
,
typeAnnotations
.
get
(
0
)
.
getAnnotatedElementType
(
)
)
;
assertEquals
(
"Return type with an type annotation must be well printed"
,
"public java.lang.@spoon.test.annotation.testclasses.TypeAnnotation"
+
System
.
lineSeparator
(
)
+
"String m3() {"
+
System
.
lineSeparator
(
)
+
"    return \"\";"
+
System
.
lineSeparator
(
)
+
"}"
,
method
.
toString
(
)
)
;
}
