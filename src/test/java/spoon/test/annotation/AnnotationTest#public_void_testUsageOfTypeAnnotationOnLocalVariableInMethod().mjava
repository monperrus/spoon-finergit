@Test
public
void
testUsageOfTypeAnnotationOnLocalVariableInMethod
(
)
throws
Exception
{
final
CtClass
<
?
>
ctClass
=
(
CtClass
<
?
>
)
this
.
factory
.
Type
(
)
.
get
(
AnnotationsAppliedOnAnyTypeInAClass
.
class
)
;
final
CtMethod
<
?
>
method
=
ctClass
.
getMethodsByName
(
"m6"
)
.
get
(
0
)
;
final
CtLocalVariable
<
?
>
ctLocalVariable
=
method
.
getBody
(
)
.
getElements
(
new
AbstractFilter
<
CtLocalVariable
<
?
>
>
(
CtLocalVariable
.
class
)
{
@Override
public
boolean
matches
(
CtLocalVariable
<
?
>
element
)
{
return
true
;
}
}
)
.
get
(
0
)
;
final
CtTypeReference
<
?
>
localVariableType
=
ctLocalVariable
.
getType
(
)
;
final
List
<
CtAnnotation
<
?
Annotation
>
>
typeAnnotations
=
localVariableType
.
getTypeAnnotations
(
)
;
assertEquals
(
"Local variable type with a type annotation must have it in its model"
,
1
,
typeAnnotations
.
size
(
)
)
;
assertEquals
(
"Type annotation with the local variable type must be typed by TypeAnnotation"
,
TypeAnnotation
.
class
,
typeAnnotations
.
get
(
0
)
.
getAnnotationType
(
)
.
getActualClass
(
)
)
;
assertEquals
(
"Local variable type with an type annotation must be well printed"
,
"@spoon.test.annotation.testclasses.TypeAnnotation\njava.lang.String s = \"\""
,
ctLocalVariable
.
toString
(
)
)
;
}
