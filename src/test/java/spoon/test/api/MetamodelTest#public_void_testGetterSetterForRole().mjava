@Test
public
void
testGetterSetterForRole
(
)
{
SpoonAPI
interfaces
=
new
Launcher
(
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/declaration"
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/code"
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/reference"
)
;
interfaces
.
buildModel
(
)
;
Factory
factory
=
interfaces
.
getFactory
(
)
;
CtTypeReference
propertyGetter
=
factory
.
Type
(
)
.
get
(
PropertyGetter
.
class
)
.
getReference
(
)
;
CtTypeReference
propertySetter
=
factory
.
Type
(
)
.
get
(
PropertySetter
.
class
)
.
getReference
(
)
;
Set
<
String
>
expectedRoles
=
Arrays
.
stream
(
CtRole
.
values
(
)
)
.
map
(
r
->
r
.
name
(
)
)
.
collect
(
Collectors
.
toSet
(
)
)
;
List
<
CtMethod
<
?
>
>
getters
=
interfaces
.
getModel
(
)
.
getElements
(
new
AnnotationFilter
<
>
(
PropertyGetter
.
class
)
)
;
Set
<
String
>
getterRoles
=
getters
.
stream
(
)
.
map
(
g
->
(
(
CtFieldRead
)
g
.
getAnnotation
(
propertyGetter
)
.
getValue
(
"role"
)
)
.
getVariable
(
)
.
getSimpleName
(
)
)
.
collect
(
Collectors
.
toSet
(
)
)
;
Set
<
CtMethod
<
?
>
>
isNotGetter
=
getters
.
stream
(
)
.
filter
(
m
->
!
(
m
.
getSimpleName
(
)
.
startsWith
(
"get"
)
||
m
.
getSimpleName
(
)
.
startsWith
(
"is"
)
)
)
.
collect
(
Collectors
.
toSet
(
)
)
;
List
<
CtMethod
<
?
>
>
setters
=
interfaces
.
getModel
(
)
.
getElements
(
new
AnnotationFilter
<
>
(
PropertySetter
.
class
)
)
;
Set
<
String
>
setterRoles
=
setters
.
stream
(
)
.
map
(
g
->
(
(
CtFieldRead
)
g
.
getAnnotation
(
propertySetter
)
.
getValue
(
"role"
)
)
.
getVariable
(
)
.
getSimpleName
(
)
)
.
collect
(
Collectors
.
toSet
(
)
)
;
Set
<
CtMethod
<
?
>
>
isNotSetter
=
setters
.
stream
(
)
.
filter
(
m
->
!
(
m
.
getSimpleName
(
)
.
startsWith
(
"set"
)
||
m
.
getSimpleName
(
)
.
startsWith
(
"add"
)
||
m
.
getSimpleName
(
)
.
startsWith
(
"insert"
)
||
m
.
getSimpleName
(
)
.
startsWith
(
"remove"
)
)
)
.
collect
(
Collectors
.
toSet
(
)
)
;
assertEquals
(
expectedRoles
,
getterRoles
)
;
expectedRoles
.
remove
(
CtRole
.
DECLARED_MODULE
.
name
(
)
)
;
expectedRoles
.
remove
(
CtRole
.
DECLARED_TYPE
.
name
(
)
)
;
assertEquals
(
expectedRoles
,
setterRoles
)
;
assertEquals
(
Collections
.
EMPTY_SET
,
isNotGetter
)
;
assertEquals
(
Collections
.
EMPTY_SET
,
isNotSetter
)
;
}
