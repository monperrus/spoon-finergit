@Test
public
void
testInheritanceInNoClassPathWithClasses
(
)
{
String
sourceInputDirPath
=
"./src/test/resources/spoon/test/inheritance"
;
String
targetBinPath
=
"./target/spoon-nocp-bin"
;
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
getEnvironment
(
)
.
setShouldCompile
(
true
)
;
spoon
.
addInputResource
(
sourceInputDirPath
)
;
spoon
.
setBinaryOutputDirectory
(
targetBinPath
)
;
spoon
.
run
(
)
;
spoon
=
new
Launcher
(
)
;
spoon
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
spoon
.
getEnvironment
(
)
.
setSourceClasspath
(
new
String
[
]
{
targetBinPath
}
)
;
spoon
.
addInputResource
(
sourceInputDirPath
+
"/AnotherClass.java"
)
;
spoon
.
buildModel
(
)
;
CtType
anotherclass
=
spoon
.
getFactory
(
)
.
Type
(
)
.
get
(
"org.acme.AnotherClass"
)
;
assertEquals
(
1
,
anotherclass
.
getFields
(
)
.
size
(
)
)
;
CtField
field
=
(
CtField
)
anotherclass
.
getFields
(
)
.
get
(
0
)
;
CtTypeReference
myClassReference
=
spoon
.
getFactory
(
)
.
Type
(
)
.
createReference
(
"fr.acme.MyClass"
)
;
assertEquals
(
myClassReference
,
field
.
getType
(
)
)
;
assertNotNull
(
myClassReference
.
getActualClass
(
)
)
;
CtTypeReference
myInterfaceReference
=
spoon
.
getFactory
(
)
.
Type
(
)
.
createReference
(
"org.myorganization.MyInterface"
)
;
assertTrue
(
myClassReference
.
isSubtypeOf
(
myInterfaceReference
)
)
;
assertTrue
(
field
.
getType
(
)
.
isSubtypeOf
(
myInterfaceReference
)
)
;
}
