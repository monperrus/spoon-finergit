@Test
public
void
metamodelPackageRule
(
)
throws
Exception
{
SpoonAPI
implementations
=
new
Launcher
(
)
;
implementations
.
addInputResource
(
"src/main/java/spoon/support/reflect/declaration"
)
;
implementations
.
addInputResource
(
"src/main/java/spoon/support/reflect/code"
)
;
implementations
.
addInputResource
(
"src/main/java/spoon/support/reflect/reference"
)
;
implementations
.
buildModel
(
)
;
SpoonAPI
interfaces
=
new
Launcher
(
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/declaration"
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/code"
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/reflect/reference"
)
;
interfaces
.
addInputResource
(
"src/main/java/spoon/support/DefaultCoreFactory.java"
)
;
interfaces
.
buildModel
(
)
;
for
(
CtType
<
?
>
t
:
implementations
.
getModel
(
)
.
getAllTypes
(
)
)
{
String
impl
=
t
.
getQualifiedName
(
)
.
replace
(
".support"
,
""
)
.
replace
(
"Impl"
,
""
)
;
CtType
itf
=
interfaces
.
getFactory
(
)
.
Type
(
)
.
get
(
impl
)
;
assertTrue
(
itf
.
isSubtypeOf
(
t
.
getReference
(
)
)
)
;
}
}
