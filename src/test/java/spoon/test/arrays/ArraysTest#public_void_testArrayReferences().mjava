@Test
public
void
testArrayReferences
(
)
throws
Exception
{
CtType
<
?
>
type
=
build
(
"spoon.test.arrays.testclasses"
,
"ArrayClass"
)
;
assertEquals
(
"ArrayClass"
,
type
.
getSimpleName
(
)
)
;
assertEquals
(
"int[][][]"
,
type
.
getField
(
"i"
)
.
getType
(
)
.
getSimpleName
(
)
)
;
assertEquals
(
3
,
(
(
CtArrayTypeReference
<
?
>
)
type
.
getField
(
"i"
)
.
getType
(
)
)
.
getDimensionCount
(
)
)
;
final
CtArrayTypeReference
<
?
>
arrayTypeReference
=
(
CtArrayTypeReference
<
?
>
)
type
.
getField
(
"i"
)
.
getDefaultExpression
(
)
.
getType
(
)
;
assertEquals
(
1
,
arrayTypeReference
.
getArrayType
(
)
.
getAnnotations
(
)
.
size
(
)
)
;
assertEquals
(
"@spoon.test.arrays.testclasses.ArrayClass.TypeAnnotation(integer = 1)"
,
arrayTypeReference
.
getArrayType
(
)
.
getAnnotations
(
)
.
get
(
0
)
.
toString
(
)
)
;
CtField
<
?
>
x
=
type
.
getField
(
"x"
)
;
assertTrue
(
x
.
getType
(
)
instanceof
CtArrayTypeReference
)
;
assertEquals
(
"int[]"
,
x
.
getType
(
)
.
getSimpleName
(
)
)
;
assertEquals
(
"int[]"
,
x
.
getType
(
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"int"
,
(
(
CtArrayTypeReference
<
?
>
)
x
.
getType
(
)
)
.
getComponentType
(
)
.
getSimpleName
(
)
)
;
assertTrue
(
(
(
CtArrayTypeReference
<
?
>
)
x
.
getType
(
)
)
.
getComponentType
(
)
.
getActualClass
(
)
.
equals
(
int
.
class
)
)
;
}
