@Test
public
void
testInitializeWithNewArray
(
)
throws
Exception
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
setArgs
(
new
String
[
]
{
"--output-type"
,
"nooutput"
}
)
;
launcher
.
addInputResource
(
"./src/test/resources/noclasspath/Foo.java"
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
run
(
)
;
CtType
<
Object
>
aType
=
launcher
.
getFactory
(
)
.
Type
(
)
.
get
(
"com.example.Foo"
)
;
final
List
<
CtNewArray
>
elements
=
aType
.
getElements
(
new
TypeFilter
<
>
(
CtNewArray
.
class
)
)
;
assertEquals
(
2
,
elements
.
size
(
)
)
;
final
CtNewArray
attribute
=
elements
.
get
(
0
)
;
assertEquals
(
1
,
attribute
.
getDimensionExpressions
(
)
.
size
(
)
)
;
assertEquals
(
0
,
(
(
CtLiteral
)
attribute
.
getDimensionExpressions
(
)
.
get
(
0
)
)
.
getValue
(
)
)
;
assertTrue
(
attribute
.
getType
(
)
instanceof
CtArrayTypeReference
)
;
assertEquals
(
"new java.lang.String[0]"
,
attribute
.
toString
(
)
)
;
final
CtNewArray
local
=
elements
.
get
(
1
)
;
assertEquals
(
1
,
local
.
getDimensionExpressions
(
)
.
size
(
)
)
;
assertTrue
(
local
.
getDimensionExpressions
(
)
.
get
(
0
)
instanceof
CtInvocation
)
;
assertTrue
(
local
.
getType
(
)
instanceof
CtArrayTypeReference
)
;
assertEquals
(
"new Type[list.size()]"
,
local
.
toString
(
)
)
;
}
