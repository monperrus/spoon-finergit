@Test
public
void
testCase4
(
)
throws
Exception
{
CtType
<
?
>
type
=
build
(
"spoon.test.casts.testclasses"
,
"Castings"
)
;
final
CtMethod
<
?
>
getValueMethod
=
type
.
getMethodsByName
(
"getValue"
)
.
get
(
0
)
;
final
CtInvocation
<
?
>
getValueInvocation
=
Query
.
getElements
(
type
,
new
TypeFilter
<
CtInvocation
<
?
>
>
(
CtInvocation
.
class
)
{
@Override
public
boolean
matches
(
CtInvocation
element
)
{
return
"getValue"
.
equals
(
element
.
getExecutable
(
)
.
getSimpleName
(
)
)
&&
super
.
matches
(
element
)
;
}
}
)
.
get
(
0
)
;
assertEquals
(
"T"
,
getValueMethod
.
getType
(
)
.
getSimpleName
(
)
)
;
assertEquals
(
"T"
,
getValueMethod
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
toString
(
)
)
;
assertEquals
(
type
.
getFactory
(
)
.
Class
(
)
.
INTEGER
,
getValueInvocation
.
getType
(
)
)
;
}
