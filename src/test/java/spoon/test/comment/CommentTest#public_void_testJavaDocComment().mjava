@Test
public
void
testJavaDocComment
(
)
{
String
EOL
=
System
.
getProperty
(
"line.separator"
)
;
Factory
f
=
getSpoonFactory
(
)
;
CtClass
<
?
>
type
=
(
CtClass
<
?
>
)
f
.
Type
(
)
.
get
(
JavaDocComment
.
class
)
;
CtJavaDoc
classJavaDoc
=
(
CtJavaDoc
)
type
.
getComments
(
)
.
get
(
0
)
;
assertEquals
(
"JavaDoc test class."
+
EOL
+
EOL
+
"Long description"
,
classJavaDoc
.
getContent
(
)
)
;
List
<
CtJavaDocTag
>
elements
=
type
.
getElements
(
new
TypeFilter
<
>
(
CtJavaDocTag
.
class
)
)
;
assertEquals
(
8
,
elements
.
size
(
)
)
;
List
<
CtJavaDocTag
>
authorTags
=
getTagByType
(
elements
,
CtJavaDocTag
.
TagType
.
AUTHOR
)
;
assertEquals
(
1
,
authorTags
.
size
(
)
)
;
assertEquals
(
"Thomas Durieux"
,
authorTags
.
get
(
0
)
.
getContent
(
)
)
;
List
<
CtJavaDocTag
>
deprecatedTags
=
getTagByType
(
elements
,
CtJavaDocTag
.
TagType
.
DEPRECATED
)
;
assertEquals
(
1
,
deprecatedTags
.
size
(
)
)
;
assertEquals
(
""
,
deprecatedTags
.
get
(
0
)
.
getContent
(
)
)
;
List
<
CtJavaDocTag
>
sinceTags
=
getTagByType
(
elements
,
CtJavaDocTag
.
TagType
.
SINCE
)
;
assertEquals
(
2
,
sinceTags
.
size
(
)
)
;
assertEquals
(
"1.3"
,
sinceTags
.
get
(
0
)
.
getContent
(
)
)
;
assertEquals
(
"1.3"
,
sinceTags
.
get
(
1
)
.
getContent
(
)
)
;
List
<
CtJavaDocTag
>
paramTags
=
getTagByType
(
elements
,
CtJavaDocTag
.
TagType
.
PARAM
)
;
assertEquals
(
1
,
paramTags
.
size
(
)
)
;
assertEquals
(
"the parameters"
,
paramTags
.
get
(
0
)
.
getContent
(
)
)
;
assertEquals
(
"i"
,
paramTags
.
get
(
0
)
.
getParam
(
)
)
;
CtJavaDocTag
tagClone
=
paramTags
.
get
(
0
)
.
clone
(
)
;
assertEquals
(
"the parameters"
,
tagClone
.
getContent
(
)
)
;
assertEquals
(
"i"
,
tagClone
.
getParam
(
)
)
;
List
<
CtJavaDocTag
>
throwsTags
=
getTagByType
(
elements
,
CtJavaDocTag
.
TagType
.
THROWS
)
;
assertEquals
(
1
,
throwsTags
.
size
(
)
)
;
assertEquals
(
"an exception"
,
throwsTags
.
get
(
0
)
.
getContent
(
)
)
;
assertEquals
(
"RuntimeException"
,
throwsTags
.
get
(
0
)
.
getParam
(
)
)
;
assertEquals
(
"JavaDoc test class."
,
classJavaDoc
.
getShortDescription
(
)
)
;
assertEquals
(
"Long description"
,
classJavaDoc
.
getLongDescription
(
)
)
;
CtJavaDocTag
deprecatedTag
=
classJavaDoc
.
getTags
(
)
.
get
(
0
)
;
assertTrue
(
classJavaDoc
.
toString
(
)
.
indexOf
(
"@deprecated"
)
>=
0
)
;
classJavaDoc
.
removeTag
(
0
)
;
assertEquals
(
-
1
,
classJavaDoc
.
toString
(
)
.
indexOf
(
"@deprecated"
)
)
;
classJavaDoc
.
addTag
(
deprecatedTag
)
;
assertTrue
(
classJavaDoc
.
toString
(
)
.
indexOf
(
"@deprecated"
)
>=
0
)
;
}
