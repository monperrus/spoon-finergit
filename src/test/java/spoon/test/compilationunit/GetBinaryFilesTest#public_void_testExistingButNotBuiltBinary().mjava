@Test
public
void
testExistingButNotBuiltBinary
(
)
throws
IOException
{
tmpFolder
.
newFolder
(
"compilation"
)
;
tmpFolder
.
newFile
(
"compilation/IBar$Test.class"
)
;
final
String
input
=
"./src/test/resources/compilation/compilation-tests/IBar.java"
;
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
input
)
;
launcher
.
setBinaryOutputDirectory
(
tmpFolder
.
getRoot
(
)
)
;
launcher
.
buildModel
(
)
;
launcher
.
getModelBuilder
(
)
.
compile
(
SpoonModelBuilder
.
InputType
.
FILES
)
;
final
Map
<
String
,
CompilationUnit
>
cus
=
launcher
.
getFactory
(
)
.
CompilationUnit
(
)
.
getMap
(
)
;
assertEquals
(
1
,
cus
.
size
(
)
)
;
final
List
<
File
>
binaries
=
cus
.
values
(
)
.
iterator
(
)
.
next
(
)
.
getBinaryFiles
(
)
;
assertEquals
(
1
,
binaries
.
size
(
)
)
;
assertEquals
(
"IBar.class"
,
binaries
.
get
(
0
)
.
getName
(
)
)
;
assertTrue
(
binaries
.
get
(
0
)
.
isFile
(
)
)
;
final
File
[
]
files
=
binaries
.
get
(
0
)
.
getParentFile
(
)
.
listFiles
(
)
;
assertNotNull
(
files
)
;
assertEquals
(
2
,
files
.
length
)
;
assertTrue
(
"IBar$Test.class"
.
equals
(
files
[
0
]
.
getName
(
)
)
||
"IBar$Test.class"
.
equals
(
files
[
1
]
.
getName
(
)
)
)
;
}
