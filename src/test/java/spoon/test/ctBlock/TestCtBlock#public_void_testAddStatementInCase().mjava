@Test
public
void
testAddStatementInCase
(
)
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addInputResource
(
"./src/test/java/spoon/test/ctBlock/testclasses/Toto.java"
)
;
spoon
.
buildModel
(
)
;
CtClass
<
?
>
toto
=
spoon
.
getFactory
(
)
.
Class
(
)
.
get
(
Toto
.
class
)
;
CtMethod
bar
=
toto
.
getMethodsByName
(
"bar"
)
.
get
(
0
)
;
CtSwitch
<
?
>
ctSwitch
=
(
CtSwitch
)
bar
.
getBody
(
)
.
getStatement
(
0
)
;
CtCase
firstCase
=
ctSwitch
.
getCases
(
)
.
get
(
0
)
;
CtCase
originalFirstCase
=
firstCase
.
clone
(
)
;
CtCase
secondCase
=
ctSwitch
.
getCases
(
)
.
get
(
1
)
;
CtCase
originalSecondCase
=
secondCase
.
clone
(
)
;
assertEquals
(
3
,
firstCase
.
getStatements
(
)
.
size
(
)
)
;
firstCase
.
addStatement
(
3
,
spoon
.
getFactory
(
)
.
createBreak
(
)
)
;
assertEquals
(
4
,
firstCase
.
getStatements
(
)
.
size
(
)
)
;
for
(
int
i
=
0
;
i
<
3
;
i
++
)
{
assertEquals
(
originalFirstCase
.
getStatements
(
)
.
get
(
i
)
,
firstCase
.
getStatements
(
)
.
get
(
i
)
)
;
}
assertEquals
(
2
,
secondCase
.
getStatements
(
)
.
size
(
)
)
;
secondCase
.
addStatement
(
1
,
(
CtStatement
)
spoon
.
getFactory
(
)
.
createInvocation
(
)
.
setExecutable
(
bar
.
getReference
(
)
)
)
;
assertEquals
(
3
,
secondCase
.
getStatements
(
)
.
size
(
)
)
;
assertEquals
(
originalSecondCase
.
getStatements
(
)
.
get
(
0
)
,
secondCase
.
getStatements
(
)
.
get
(
0
)
)
;
assertEquals
(
originalSecondCase
.
getStatements
(
)
.
get
(
1
)
,
secondCase
.
getStatements
(
)
.
get
(
2
)
)
;
}
