@Test
public
void
getConstructor
(
)
throws
Exception
{
final
Factory
build
=
build
(
Foo
.
class
)
;
final
CtClass
<
?
>
foo
=
(
CtClass
<
?
>
)
build
.
Type
(
)
.
get
(
Foo
.
class
)
;
assertEquals
(
3
,
foo
.
getConstructors
(
)
.
size
(
)
)
;
CtTypeReference
<
Object
>
typeString
=
build
.
Code
(
)
.
createCtTypeReference
(
String
.
class
)
;
CtConstructor
<
?
>
constructor
=
foo
.
getConstructor
(
typeString
)
;
assertEquals
(
typeString
,
constructor
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
)
;
CtArrayTypeReference
<
Object
>
typeStringArray
=
build
.
Core
(
)
.
createArrayTypeReference
(
)
;
typeStringArray
.
setComponentType
(
typeString
)
;
constructor
=
foo
.
getConstructor
(
typeStringArray
)
;
assertEquals
(
typeStringArray
,
constructor
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
)
;
CtArrayTypeReference
<
Object
>
typeStringArrayArray
=
build
.
Core
(
)
.
createArrayTypeReference
(
)
;
typeStringArrayArray
.
setComponentType
(
typeStringArray
)
;
constructor
=
foo
.
getConstructor
(
typeStringArrayArray
)
;
assertEquals
(
typeStringArrayArray
,
constructor
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
)
;
CtConstructor
cons
=
foo
.
getConstructors
(
)
.
toArray
(
new
CtConstructor
[
]
)
[
0
]
.
clone
(
)
;
foo
.
addConstructor
(
cons
)
;
assertEquals
(
3
,
foo
.
getConstructors
(
)
.
size
(
)
)
;
cons
.
addParameter
(
cons
.
getFactory
(
)
.
createParameter
(
)
.
setType
(
cons
.
getFactory
(
)
.
Type
(
)
.
OBJECT
)
)
;
assertEquals
(
4
,
foo
.
getConstructors
(
)
.
size
(
)
)
;
assertSame
(
cons
,
foo
.
getTypeMembers
(
)
.
get
(
3
)
)
;
assertSame
(
foo
,
cons
.
getParent
(
)
)
;
}
