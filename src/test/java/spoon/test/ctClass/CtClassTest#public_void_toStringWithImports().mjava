@Test
public
void
toStringWithImports
(
)
{
String
newLine
=
System
.
getProperty
(
"line.separator"
)
;
final
Launcher
launcher2
=
new
Launcher
(
)
;
launcher2
.
addInputResource
(
"./src/test/java/spoon/test/ctClass/"
)
;
launcher2
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher2
.
buildModel
(
)
;
final
CtClass
<
Object
>
aClass2
=
launcher2
.
getFactory
(
)
.
Class
(
)
.
get
(
AnonymousClass
.
class
)
;
DefaultJavaPrettyPrinter
djpp
=
new
DefaultJavaPrettyPrinter
(
launcher2
.
getEnvironment
(
)
)
;
aClass2
.
accept
(
djpp
)
;
assertEquals
(
"package spoon.test.ctClass.testclasses;"
+
newLine
+
"/**"
+
newLine
+
" * Created by urli on 11/10/2017."
+
newLine
+
" */"
+
newLine
+
"public class AnonymousClass {"
+
newLine
+
"    final int machin = new java.util.Comparator<java.lang.Integer>() {"
+
newLine
+
"        @java.lang.Override"
+
newLine
+
"        public int compare(java.lang.Integer o1, java.lang.Integer o2) {"
+
newLine
+
"            return 0;"
+
newLine
+
"        }"
+
newLine
+
"    }.compare(1, 2);"
+
newLine
+
"}"
,
aClass2
.
toStringWithImports
(
)
)
;
aClass2
.
getFactory
(
)
.
getEnvironment
(
)
.
setAutoImports
(
true
)
;
assertEquals
(
"package spoon.test.ctClass.testclasses;"
+
newLine
+
"import java.util.Comparator;"
+
newLine
+
"/**"
+
newLine
+
" * Created by urli on 11/10/2017."
+
newLine
+
" */"
+
newLine
+
"public class AnonymousClass {"
+
newLine
+
"    final int machin = new Comparator<Integer>() {"
+
newLine
+
"        @Override"
+
newLine
+
"        public int compare(Integer o1, Integer o2) {"
+
newLine
+
"            return 0;"
+
newLine
+
"        }"
+
newLine
+
"    }.compare(1, 2);"
+
newLine
+
"}"
,
aClass2
.
toStringWithImports
(
)
)
;
assertEquals
(
"package foo;"
+
newLine
+
"import java.io.File;"
+
newLine
+
"class Bar extends File {}"
,
launcher2
.
getFactory
(
)
.
createClass
(
"foo.Bar"
)
.
setSuperclass
(
launcher2
.
getFactory
(
)
.
Type
(
)
.
get
(
File
.
class
)
.
getReference
(
)
)
.
toStringWithImports
(
)
)
;
}
