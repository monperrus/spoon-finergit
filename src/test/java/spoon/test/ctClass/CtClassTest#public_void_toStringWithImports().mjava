@Test
public
void
toStringWithImports
(
)
{
final
Launcher
launcher2
=
new
Launcher
(
)
;
launcher2
.
addInputResource
(
"./src/test/java/spoon/test/ctClass/"
)
;
launcher2
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher2
.
buildModel
(
)
;
final
CtClass
<
Object
>
aClass2
=
launcher2
.
getFactory
(
)
.
Class
(
)
.
get
(
AnonymousClass
.
class
)
;
DefaultJavaPrettyPrinter
djpp
=
new
DefaultJavaPrettyPrinter
(
launcher2
.
getEnvironment
(
)
)
;
aClass2
.
accept
(
djpp
)
;
assertEquals
(
"package spoon.test.ctClass.testclasses;\n"
+
"\n"
+
"\n"
+
"/**\n"
+
" * Created by urli on 11/10/2017.\n"
+
" */\n"
+
"public class AnonymousClass {\n"
+
"    final int machin = new java.util.Comparator<java.lang.Integer>() {\n"
+
"        @java.lang.Override\n"
+
"        public int compare(java.lang.Integer o1, java.lang.Integer o2) {\n"
+
"            return 0;\n"
+
"        }\n"
+
"    }.compare(1, 2);\n"
+
"}"
,
aClass2
.
toStringWithImports
(
)
)
;
aClass2
.
getFactory
(
)
.
getEnvironment
(
)
.
setAutoImports
(
true
)
;
assertEquals
(
"package spoon.test.ctClass.testclasses;\n"
+
"\n"
+
"\n"
+
"import java.util.Comparator;\n"
+
"\n"
+
"\n"
+
"/**\n"
+
" * Created by urli on 11/10/2017.\n"
+
" */\n"
+
"public class AnonymousClass {\n"
+
"    final int machin = new Comparator<Integer>() {\n"
+
"        @Override\n"
+
"        public int compare(Integer o1, Integer o2) {\n"
+
"            return 0;\n"
+
"        }\n"
+
"    }.compare(1, 2);\n"
+
"}"
,
aClass2
.
toStringWithImports
(
)
)
;
}
