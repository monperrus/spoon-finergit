@Test
public
void
testIsKnownAtCompileTime
(
)
throws
Exception
{
Launcher
launcher
=
new
Launcher
(
)
;
CtExpression
el
=
launcher
.
getFactory
(
)
.
Code
(
)
.
createCodeSnippetExpression
(
"(0+1)*3"
)
.
compile
(
)
;
assertTrue
(
EvalHelper
.
isKnownAtCompileTime
(
el
)
)
;
CtClass
<
?
>
type
=
build
(
"spoon.test.eval.testclasses"
,
"ToEvaluate"
)
;
assertEquals
(
"ToEvaluate"
,
type
.
getSimpleName
(
)
)
;
CtExpression
<
?
>
foo
=
(
(
CtReturn
)
type
.
getMethodsByName
(
"foo"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
0
)
)
.
getReturnedExpression
(
)
;
assertFalse
(
EvalHelper
.
isKnownAtCompileTime
(
foo
)
)
;
CtExpression
<
?
>
foo2
=
(
(
CtReturn
)
type
.
getMethodsByName
(
"foo2"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
0
)
)
.
getReturnedExpression
(
)
;
assertTrue
(
EvalHelper
.
isKnownAtCompileTime
(
foo2
)
)
;
CtExpression
<
?
>
foo3
=
(
(
CtReturn
)
type
.
getMethodsByName
(
"foo3"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
0
)
)
.
getReturnedExpression
(
)
;
assertTrue
(
EvalHelper
.
isKnownAtCompileTime
(
foo3
)
)
;
}
