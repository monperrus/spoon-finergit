@Test
public
void
testconvertElementToRuntimeObject
(
)
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"src/test/java/spoon/test/eval/testclasses/Foo.java"
)
;
launcher
.
buildModel
(
)
;
CtType
<
?
>
foo
=
launcher
.
getFactory
(
)
.
Type
(
)
.
get
(
(
Class
<
?
>
)
Foo
.
class
)
;
assertEquals
(
false
,
EvalHelper
.
convertElementToRuntimeObject
(
foo
.
getField
(
"b6"
)
.
getDefaultExpression
(
)
)
)
;
try
{
assertEquals
(
false
,
EvalHelper
.
getCorrespondingRuntimeObject
(
foo
.
getField
(
"b6"
)
.
getDefaultExpression
(
)
)
)
;
fail
(
)
;
}
catch
(
SpoonException
expected
)
{
}
assertEquals
(
Integer
.
MAX_VALUE
,
EvalHelper
.
convertElementToRuntimeObject
(
foo
.
getField
(
"i1"
)
.
getDefaultExpression
(
)
)
)
;
assertEquals
(
Integer
.
MAX_VALUE
,
EvalHelper
.
getCorrespondingRuntimeObject
(
foo
.
getField
(
"i1"
)
.
getDefaultExpression
(
)
)
)
;
assertEquals
(
File
.
pathSeparator
,
EvalHelper
.
convertElementToRuntimeObject
(
foo
.
getField
(
"str1"
)
.
getDefaultExpression
(
)
)
)
;
assertEquals
(
File
.
pathSeparator
,
EvalHelper
.
getCorrespondingRuntimeObject
(
foo
.
getField
(
"str1"
)
.
getDefaultExpression
(
)
)
)
;
}
