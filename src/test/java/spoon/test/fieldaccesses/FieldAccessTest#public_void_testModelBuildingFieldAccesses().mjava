@Test
public
void
testModelBuildingFieldAccesses
(
)
throws
Exception
{
CtSimpleType
<
?
>
type
=
build
(
"spoon.test.fieldaccesses"
,
"Mouse"
)
;
assertEquals
(
"Mouse"
,
type
.
getSimpleName
(
)
)
;
CtMethod
<
?
>
meth1
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"meth1"
)
)
.
get
(
0
)
;
CtMethod
<
?
>
meth1b
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"meth1b"
)
)
.
get
(
0
)
;
assertEquals
(
3
,
meth1
.
getElements
(
new
TypeFilter
<
CtFieldAccess
<
?
>
>
(
CtFieldAccess
.
class
)
)
.
size
(
)
)
;
assertEquals
(
2
,
meth1b
.
getElements
(
new
TypeFilter
<
CtFieldAccess
<
?
>
>
(
CtFieldAccess
.
class
)
)
.
size
(
)
)
;
CtMethod
<
?
>
meth2
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"meth2"
)
)
.
get
(
0
)
;
assertEquals
(
2
,
meth2
.
getElements
(
new
TypeFilter
<
CtFieldAccess
<
?
>
>
(
CtFieldAccess
.
class
)
)
.
size
(
)
)
;
CtMethod
<
?
>
meth3
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"meth3"
)
)
.
get
(
0
)
;
assertEquals
(
3
,
meth3
.
getElements
(
new
TypeFilter
<
CtFieldAccess
<
?
>
>
(
CtFieldAccess
.
class
)
)
.
size
(
)
)
;
CtMethod
<
?
>
meth4
=
type
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"meth4"
)
)
.
get
(
0
)
;
assertEquals
(
1
,
meth4
.
getElements
(
new
TypeFilter
<
CtFieldAccess
<
?
>
>
(
CtFieldAccess
.
class
)
)
.
size
(
)
)
;
}
