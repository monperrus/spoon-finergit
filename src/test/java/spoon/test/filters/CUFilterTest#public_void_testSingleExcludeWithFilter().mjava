@Test
public
void
testSingleExcludeWithFilter
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
addInputResource
(
"./src/test/resources/noclasspath/same-package"
)
;
launcher
.
getModelBuilder
(
)
.
addCompilationUnitFilter
(
new
CompilationUnitFilter
(
)
{
@Override
public
boolean
exclude
(
final
String
path
)
{
return
path
.
endsWith
(
"B.java"
)
;
}
}
)
;
launcher
.
buildModel
(
)
;
final
CtModel
model
=
launcher
.
getModel
(
)
;
assertEquals
(
1
,
model
.
getAllTypes
(
)
.
size
(
)
)
;
assertEquals
(
"A"
,
model
.
getAllTypes
(
)
.
iterator
(
)
.
next
(
)
.
getSimpleName
(
)
)
;
final
CtReturn
ctReturn
=
model
.
getAllTypes
(
)
.
iterator
(
)
.
next
(
)
.
getMethod
(
"createB"
)
.
getBody
(
)
.
getStatement
(
0
)
;
final
CtConstructorCall
ctConstructorCall
=
(
CtConstructorCall
)
ctReturn
.
getReturnedExpression
(
)
;
assertEquals
(
"spoon.test.same.B"
,
ctConstructorCall
.
getType
(
)
.
getQualifiedName
(
)
)
;
}
