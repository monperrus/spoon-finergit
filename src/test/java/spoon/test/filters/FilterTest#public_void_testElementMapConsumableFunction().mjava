@Test
public
void
testElementMapConsumableFunction
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
setArgs
(
new
String
[
]
{
"--output-type"
,
"nooutput"
,
"--level"
,
"info"
}
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/filters/testclasses"
)
;
launcher
.
run
(
)
;
CtClass
<
?
>
cls
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
Tacos
.
class
)
;
class
aFunction
implements
CtConsumableFunction
<
CtClass
>
{
@Override
public
void
apply
(
CtClass
c
,
CtConsumer
out
)
{
out
.
accept
(
c
.
getParent
(
)
)
;
}
}
assertEquals
(
cls
.
getParent
(
)
,
cls
.
map
(
new
aFunction
(
)
)
.
list
(
)
.
get
(
0
)
)
;
assertEquals
(
cls
.
getParent
(
)
,
cls
.
map
(
(
CtClass
<
?
>
c
,
CtConsumer
<
Object
>
out
)
->
out
.
accept
(
c
.
getParent
(
)
)
)
.
list
(
)
.
get
(
0
)
)
;
}
