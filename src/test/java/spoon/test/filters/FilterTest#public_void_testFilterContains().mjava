@Test
public
void
testFilterContains
(
)
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addInputResource
(
"./src/test/java/spoon/test/filters/testclasses"
)
;
spoon
.
buildModel
(
)
;
CtType
<
?
>
type
=
spoon
.
getFactory
(
)
.
Type
(
)
.
get
(
Foo
.
class
)
;
CtStatement
s
=
type
.
getMethodsByName
(
"foo"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
0
)
;
assertEquals
(
"int x = 3"
,
s
.
toString
(
)
)
;
class
ContainFilter
implements
Filter
{
private
final
CtElement
el
;
ContainFilter
(
CtElement
orig
)
{
this
.
el
=
orig
;
}
@Override
public
boolean
matches
(
CtElement
element
)
{
return
element
.
equals
(
el
)
;
}
}
List
<
CtElement
>
l
=
spoon
.
getFactory
(
)
.
Type
(
)
.
get
(
FooLine
.
class
)
.
filterChildren
(
new
ContainFilter
(
s
)
)
.
list
(
)
;
assertEquals
(
1
,
l
.
size
(
)
)
;
assertEquals
(
"int x = 3"
,
l
.
get
(
0
)
.
toString
(
)
)
;
assertTrue
(
l
.
get
(
0
)
.
getPosition
(
)
.
toString
(
)
.
endsWith
(
"src/test/java/spoon/test/filters/testclasses/FooLine.java:5)"
)
)
;
}
