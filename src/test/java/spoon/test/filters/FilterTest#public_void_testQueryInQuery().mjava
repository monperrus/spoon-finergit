@Test
public
void
testQueryInQuery
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
setArgs
(
new
String
[
]
{
"--output-type"
,
"nooutput"
,
"--level"
,
"info"
}
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/filters/testclasses"
)
;
launcher
.
run
(
)
;
class
Context
{
int
count
=
0
;
}
Context
context
=
new
Context
(
)
;
CtClass
<
?
>
cls
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
Tacos
.
class
)
;
CtQuery
allChildPublicClasses
=
launcher
.
getFactory
(
)
.
Query
(
)
.
createQuery
(
)
.
filterChildren
(
(
CtClass
clazz
)
->
clazz
.
hasModifier
(
ModifierKind
.
PUBLIC
)
)
;
CtQuery
q
=
launcher
.
getFactory
(
)
.
Package
(
)
.
getRootPackage
(
)
.
map
(
(
CtElement
in
)
->
allChildPublicClasses
.
setInput
(
in
)
.
list
(
)
)
;
q
.
forEach
(
(
CtElement
clazz
)
->
{
context
.
count
++
;
assertTrue
(
clazz
instanceof
CtClass
)
;
assertTrue
(
(
(
CtClass
<
?
>
)
clazz
)
.
hasModifier
(
ModifierKind
.
PUBLIC
)
)
;
}
)
;
assertEquals
(
6
,
context
.
count
)
;
context
.
count
=
0
;
CtQuery
q2
=
launcher
.
getFactory
(
)
.
Package
(
)
.
getRootPackage
(
)
.
map
(
(
CtElement
in
,
CtConsumer
<
Object
>
out
)
->
allChildPublicClasses
.
setInput
(
in
)
.
forEach
(
out
)
)
;
q2
.
forEach
(
(
CtElement
clazz
)
->
{
context
.
count
++
;
assertTrue
(
clazz
instanceof
CtClass
)
;
assertTrue
(
(
(
CtClass
<
?
>
)
clazz
)
.
hasModifier
(
ModifierKind
.
PUBLIC
)
)
;
}
)
;
assertEquals
(
6
,
context
.
count
)
;
context
.
count
=
0
;
CtQuery
q3
=
launcher
.
getFactory
(
)
.
Package
(
)
.
getRootPackage
(
)
.
map
(
(
in
,
out
)
->
(
(
CtQueryImpl
)
allChildPublicClasses
)
.
evaluate
(
in
,
out
)
)
;
q3
.
forEach
(
(
CtElement
clazz
)
->
{
context
.
count
++
;
assertTrue
(
clazz
instanceof
CtClass
)
;
assertTrue
(
(
(
CtClass
<
?
>
)
clazz
)
.
hasModifier
(
ModifierKind
.
PUBLIC
)
)
;
}
)
;
assertEquals
(
6
,
context
.
count
)
;
}
