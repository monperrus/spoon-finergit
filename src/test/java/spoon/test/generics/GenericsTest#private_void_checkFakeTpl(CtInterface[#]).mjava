private
void
checkFakeTpl
(
CtInterface
<
?
>
fakeTplItf
)
{
assertNotNull
(
fakeTplItf
)
;
CtMethod
<
?
>
applyMethod
=
fakeTplItf
.
getMethodsByName
(
"apply"
)
.
get
(
0
)
;
CtTypeReference
<
?
>
returnType
=
applyMethod
.
getType
(
)
;
assertEquals
(
"T"
,
returnType
.
getSimpleName
(
)
)
;
assertTrue
(
returnType
instanceof
CtTypeParameterReference
)
;
assertEquals
(
"CtElement"
,
returnType
.
getSuperclass
(
)
.
getSimpleName
(
)
)
;
CtParameter
<
?
>
targetType
=
applyMethod
.
getParameters
(
)
.
get
(
0
)
;
List
<
CtTypeReference
<
?
>
>
targetTypeArgument
=
targetType
.
getType
(
)
.
getActualTypeArguments
(
)
;
assertEquals
(
1
,
targetTypeArgument
.
size
(
)
)
;
assertTrue
(
targetTypeArgument
.
get
(
0
)
instanceof
CtWildcardReference
)
;
CtMethod
<
?
>
testMethod
=
fakeTplItf
.
getMethodsByName
(
"test"
)
.
get
(
0
)
;
List
<
CtParameter
<
?
>
>
parameters
=
testMethod
.
getParameters
(
)
;
assertEquals
(
3
,
parameters
.
size
(
)
)
;
CtParameter
thirdParam
=
parameters
.
get
(
2
)
;
assertTrue
(
thirdParam
.
getType
(
)
instanceof
CtTypeParameterReference
)
;
}
