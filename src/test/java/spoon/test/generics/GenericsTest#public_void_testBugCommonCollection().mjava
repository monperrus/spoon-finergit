@Test
public
void
testBugCommonCollection
(
)
throws
Exception
{
try
{
CtClass
<
?
>
type
=
build
(
"spoon.test.generics"
,
"BugCollection"
)
;
CtField
INSTANCE
=
(
CtField
)
type
.
getElements
(
new
NameFilter
(
"INSTANCE"
)
)
.
get
(
0
)
;
assertEquals
(
"public static final spoon.test.generics.ACLass<?> INSTANCE = new spoon.test.generics.ACLass();"
,
INSTANCE
.
toString
(
)
)
;
CtField
INSTANCE2
=
(
CtField
)
type
.
getElements
(
new
NameFilter
(
"INSTANCE2"
)
)
.
get
(
0
)
;
INSTANCE2
.
getAnnotations
(
)
.
clear
(
)
;
assertEquals
(
"public static final spoon.test.generics.ACLass<?> INSTANCE2 = new spoon.test.generics.ACLass();"
,
INSTANCE2
.
toString
(
)
)
;
CtClass
ComparableComparator
=
(
CtClass
)
type
.
getPackage
(
)
.
getElements
(
new
NameFilter
(
"ComparableComparator"
)
)
.
get
(
0
)
;
assertTrue
(
ComparableComparator
.
toString
(
)
.
startsWith
(
"class ComparableComparator<E extends java.lang.Comparable<? super E>>"
)
)
;
CtField
x
=
(
CtField
)
type
.
getElements
(
new
NameFilter
(
"x"
)
)
.
get
(
0
)
;
CtTypeReference
ref
=
x
.
getType
(
)
;
DefaultJavaPrettyPrinter
pp
=
new
DefaultJavaPrettyPrinter
(
new
StandardEnvironment
(
)
)
;
assertFalse
(
pp
.
getContext
(
)
.
getIgnoreImport
(
)
)
;
assertEquals
(
"java.util.Map$Entry"
,
ref
.
getQualifiedName
(
)
)
;
assertEquals
(
"java.util.Map$Entry"
,
ref
.
toString
(
)
)
;
assertEquals
(
java
.
util
.
Map
.
class
,
ref
.
getDeclaringType
(
)
.
getActualClass
(
)
)
;
pp
.
visitCtTypeReference
(
ref
)
;
assertEquals
(
"java.util.Map.Entry"
,
pp
.
getResult
(
)
.
toString
(
)
)
;
CtField
y
=
(
CtField
)
type
.
getElements
(
new
NameFilter
(
"y"
)
)
.
get
(
0
)
;
assertEquals
(
"java.util.Map.Entry<?, ?> y;"
,
y
.
toString
(
)
)
;
CtField
z
=
(
CtField
)
type
.
getElements
(
new
NameFilter
(
"z"
)
)
.
get
(
0
)
;
assertEquals
(
"java.util.Map.Entry<java.lang.String, java.lang.Integer> z;"
,
z
.
toString
(
)
)
;
CtLocalVariable
lx
=
(
CtLocalVariable
)
type
.
getElements
(
new
NameFilter
(
"lx"
)
)
.
get
(
0
)
;
assertEquals
(
"java.util.Map.Entry lx"
,
lx
.
toString
(
)
)
;
CtLocalVariable
ly
=
(
CtLocalVariable
)
type
.
getElements
(
new
NameFilter
(
"ly"
)
)
.
get
(
0
)
;
assertEquals
(
"java.util.Map.Entry<?, ?> ly"
,
ly
.
toString
(
)
)
;
CtLocalVariable
lz
=
(
CtLocalVariable
)
type
.
getElements
(
new
NameFilter
(
"lz"
)
)
.
get
(
0
)
;
assertEquals
(
"java.util.Map.Entry<java.lang.String, java.lang.Integer> lz"
,
lz
.
toString
(
)
)
;
CtLocalVariable
it
=
(
CtLocalVariable
)
type
.
getElements
(
new
NameFilter
(
"it"
)
)
.
get
(
0
)
;
assertEquals
(
"java.util.Iterator<java.util.Map.Entry<?, ?>> it"
,
it
.
toString
(
)
)
;
}
catch
(
Exception
e
)
{
e
.
printStackTrace
(
)
;
throw
e
;
}
}
