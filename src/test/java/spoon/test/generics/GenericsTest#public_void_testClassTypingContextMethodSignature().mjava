@Test
public
void
testClassTypingContextMethodSignature
(
)
throws
Exception
{
Factory
factory
=
build
(
new
File
(
"src/test/java/spoon/test/generics/testclasses"
)
)
;
CtClass
<
?
>
ctClassLunch
=
factory
.
Class
(
)
.
get
(
Lunch
.
class
)
;
CtClass
<
?
>
ctClassWeddingLunch
=
factory
.
Class
(
)
.
get
(
WeddingLunch
.
class
)
;
CtMethod
<
?
>
trLunch_eatMe
=
ctClassLunch
.
filterChildren
(
new
NameFilter
<
>
(
"eatMe"
)
)
.
first
(
)
;
CtMethod
<
?
>
trWeddingLunch_eatMe
=
ctClassWeddingLunch
.
filterChildren
(
new
NameFilter
<
>
(
"eatMe"
)
)
.
first
(
)
;
ClassTypingContext
ctcWeddingLunch
=
new
ClassTypingContext
(
ctClassWeddingLunch
)
;
assertTrue
(
ctcWeddingLunch
.
isOverriding
(
trLunch_eatMe
,
trLunch_eatMe
)
)
;
assertTrue
(
ctcWeddingLunch
.
isOverriding
(
trLunch_eatMe
,
trWeddingLunch_eatMe
)
)
;
assertTrue
(
ctcWeddingLunch
.
isSubSignature
(
trLunch_eatMe
,
trWeddingLunch_eatMe
)
)
;
assertTrue
(
ctcWeddingLunch
.
isOverriding
(
trWeddingLunch_eatMe
,
trLunch_eatMe
)
)
;
assertTrue
(
ctcWeddingLunch
.
isOverriding
(
trWeddingLunch_eatMe
,
trWeddingLunch_eatMe
)
)
;
assertTrue
(
ctcWeddingLunch
.
isSubSignature
(
trWeddingLunch_eatMe
,
trWeddingLunch_eatMe
)
)
;
}
