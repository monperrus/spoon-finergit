@Test
public
void
testDeepGenericsInExecutableReference
(
)
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/generics/testclasses4/C.java"
)
;
CtModel
model
=
launcher
.
buildModel
(
)
;
CtClass
<
?
>
c
=
model
.
getElements
(
new
NamedElementFilter
<
>
(
CtClass
.
class
,
"C"
)
)
.
get
(
0
)
;
CtMethod
<
?
>
m
=
c
.
getMethodsByName
(
"m"
)
.
get
(
0
)
;
CtTypeReference
<
?
>
execParamType
=
m
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
;
assertEquals
(
CtTypeParameterReferenceImpl
.
class
,
execParamType
.
getClass
(
)
)
;
assertEquals
(
"W"
,
execParamType
.
getSimpleName
(
)
)
;
{
CtExecutableReference
<
?
>
mRef
=
(
(
CtInvocation
)
m
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
)
.
getExecutable
(
)
;
CtTypeReference
<
?
>
execRefParamType
=
mRef
.
getParameters
(
)
.
get
(
0
)
;
assertEquals
(
CtTypeReferenceImpl
.
class
,
execRefParamType
.
getClass
(
)
)
;
assertEquals
(
"java.util.List<java.lang.String>"
,
execRefParamType
.
toString
(
)
)
;
}
{
CtExecutableReference
<
?
>
mRef
=
m
.
getReference
(
)
;
CtTypeReference
<
?
>
execRefParamType
=
mRef
.
getParameters
(
)
.
get
(
0
)
;
assertEquals
(
CtTypeReferenceImpl
.
class
,
execRefParamType
.
getClass
(
)
)
;
assertEquals
(
"java.util.List<java.lang.String>"
,
execRefParamType
.
toString
(
)
)
;
}
}
