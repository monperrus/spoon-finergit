@Test
public
void
testDiamond1
(
)
{
Factory
factory
=
createFactory
(
)
;
CtClass
<
?
>
clazz
=
factory
.
Code
(
)
.
createCodeSnippetStatement
(
"class Diamond {\n"
+
"	java.util.List<String> f = new java.util.ArrayList<>();\n"
+
"}"
)
.
compile
(
)
;
CtField
<
?
>
f
=
clazz
.
getFields
(
)
.
get
(
0
)
;
CtConstructorCall
<
?
>
val
=
(
CtConstructorCall
<
?
>
)
f
.
getDefaultExpression
(
)
;
assertTrue
(
val
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
isImplicit
(
)
)
;
assertEquals
(
"java.lang.String"
,
val
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
toString
(
)
)
;
assertEquals
(
"java.lang.String"
,
val
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"java.util.ArrayList<>"
,
val
.
getType
(
)
.
toString
(
)
)
;
assertEquals
(
"new ArrayList<>()"
,
val
.
prettyprint
(
)
)
;
}
