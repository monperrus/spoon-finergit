@Test
public
void
testGenericsInQualifiedNameInConstructorCall
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
run
(
new
String
[
]
{
"-i"
,
"./src/test/java/spoon/test/generics/testclasses/"
,
"-o"
,
"./target/spooned/"
}
)
;
final
CtClass
<
Tacos
>
aTacos
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
Tacos
.
class
)
;
final
CtType
<
?
>
burritos
=
aTacos
.
getNestedType
(
"Burritos"
)
;
SortedList
<
CtConstructorCall
>
elements
=
new
SortedList
<
>
(
new
CtLineElementComparator
(
)
)
;
elements
.
addAll
(
burritos
.
getElements
(
new
TypeFilter
<
>
(
CtConstructorCall
.
class
)
)
)
;
assertEquals
(
3
,
elements
.
size
(
)
)
;
assertEquals
(
0
,
elements
.
get
(
1
)
.
getExecutable
(
)
.
getType
(
)
.
getActualTypeArguments
(
)
.
size
(
)
)
;
assertNotNull
(
elements
.
get
(
1
)
.
getType
(
)
.
getDeclaringType
(
)
)
;
assertEquals
(
"new Pozole()"
,
elements
.
get
(
1
)
.
toString
(
)
)
;
assertEquals
(
2
,
elements
.
get
(
0
)
.
getExecutable
(
)
.
getType
(
)
.
getActualTypeArguments
(
)
.
size
(
)
)
;
assertNotNull
(
elements
.
get
(
0
)
.
getType
(
)
.
getDeclaringType
(
)
)
;
assertEquals
(
"new Burritos<K, V>()"
,
elements
.
get
(
0
)
.
toString
(
)
)
;
assertEquals
(
2
,
elements
.
get
(
2
)
.
getExecutable
(
)
.
getType
(
)
.
getActualTypeArguments
(
)
.
size
(
)
)
;
assertNotNull
(
elements
.
get
(
2
)
.
getType
(
)
.
getDeclaringType
(
)
)
;
assertEquals
(
"new Burritos<K, V>() {}"
,
elements
.
get
(
2
)
.
toString
(
)
)
;
}
