@Test
public
void
testGetDeclarationOfTypeParameterReference
(
)
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/generics/testclasses/ExtendedPaella.java"
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/generics/testclasses/Paella.java"
)
;
launcher
.
buildModel
(
)
;
Factory
factory
=
launcher
.
getFactory
(
)
;
CtClass
extendedPaella
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtClass
.
class
,
"ExtendedPaella"
)
)
.
get
(
0
)
;
List
<
CtTypeParameter
>
typeParameterList
=
extendedPaella
.
getFormalCtTypeParameters
(
)
;
assertEquals
(
1
,
typeParameterList
.
size
(
)
)
;
CtMethod
totoMethod
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"toto"
)
)
.
get
(
0
)
;
CtTypeReference
returnTypeToto
=
totoMethod
.
getType
(
)
;
CtTypeReference
paramToto
=
(
(
CtParameter
)
totoMethod
.
getParameters
(
)
.
get
(
0
)
)
.
getType
(
)
;
CtType
declaration
=
returnTypeToto
.
getDeclaration
(
)
;
assertSame
(
typeParameterList
.
get
(
0
)
,
declaration
)
;
assertSame
(
typeParameterList
.
get
(
0
)
,
paramToto
.
getDeclaration
(
)
)
;
CtMethod
machinMethod
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"machin"
)
)
.
get
(
0
)
;
CtTypeReference
returnTypeMachin
=
machinMethod
.
getType
(
)
;
List
<
CtTypeParameter
>
formalCtTypeParameters
=
machinMethod
.
getFormalCtTypeParameters
(
)
;
assertEquals
(
1
,
formalCtTypeParameters
.
size
(
)
)
;
CtType
declarationMachin
=
returnTypeMachin
.
getDeclaration
(
)
;
assertNotSame
(
typeParameterList
.
get
(
0
)
,
declarationMachin
)
;
assertSame
(
formalCtTypeParameters
.
get
(
0
)
,
declarationMachin
)
;
CtClass
innerPaella
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtClass
.
class
,
"InnerPaella"
)
)
.
get
(
0
)
;
List
<
CtTypeParameter
>
innerTypeParametersList
=
innerPaella
.
getFormalCtTypeParameters
(
)
;
assertEquals
(
typeParameterList
.
get
(
0
)
,
innerTypeParametersList
.
get
(
0
)
.
getSuperclass
(
)
.
getDeclaration
(
)
)
;
CtMethod
innerMachinMethod
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"innerMachin"
)
)
.
get
(
0
)
;
CtTypeReference
returnTypeInnerMachin
=
innerMachinMethod
.
getType
(
)
;
CtTypeReference
paramInnerMachinType
=
(
(
CtParameter
)
innerMachinMethod
.
getParameters
(
)
.
get
(
0
)
)
.
getType
(
)
;
List
<
CtTypeParameter
>
innerMachinFormalCtType
=
innerMachinMethod
.
getFormalCtTypeParameters
(
)
;
assertSame
(
typeParameterList
.
get
(
0
)
,
returnTypeInnerMachin
.
getDeclaration
(
)
)
;
assertSame
(
innerMachinFormalCtType
.
get
(
0
)
,
paramInnerMachinType
.
getDeclaration
(
)
)
;
CtMethod
innerTotoMethod
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"innerToto"
)
)
.
get
(
0
)
;
CtTypeReference
returnInnerToto
=
innerTotoMethod
.
getType
(
)
;
CtTypeReference
paramInnerToto
=
(
(
CtParameter
)
innerTotoMethod
.
getParameters
(
)
.
get
(
0
)
)
.
getType
(
)
;
List
<
CtTypeParameter
>
innerTotoFormatCtType
=
innerTotoMethod
.
getFormalCtTypeParameters
(
)
;
assertSame
(
innerTotoFormatCtType
.
get
(
0
)
,
paramInnerToto
.
getDeclaration
(
)
)
;
assertSame
(
innerTypeParametersList
.
get
(
0
)
,
returnInnerToto
.
getDeclaration
(
)
)
;
}
