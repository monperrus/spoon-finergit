@Test
public
void
testIsGenericTypeEqual
(
)
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/generics/testclasses2/LikeCtClass.java"
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/generics/testclasses2/LikeCtClassImpl.java"
)
;
launcher
.
buildModel
(
)
;
CtType
<
?
>
ctIFace
=
launcher
.
getFactory
(
)
.
Interface
(
)
.
get
(
LikeCtClass
.
class
)
;
CtMethod
<
?
>
ifaceGetter
=
(
CtMethod
)
ctIFace
.
getMethodsByName
(
"getConstructors"
)
.
get
(
0
)
;
CtMethod
<
?
>
ifaceSetter
=
(
CtMethod
)
ctIFace
.
getMethodsByName
(
"setConstructors"
)
.
get
(
0
)
;
assertEquals
(
ifaceGetter
.
getType
(
)
.
toString
(
)
,
ifaceSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
.
toString
(
)
)
;
assertEquals
(
ifaceGetter
.
getType
(
)
,
ifaceSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
)
;
CtType
<
?
>
ctClass
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
LikeCtClassImpl
.
class
)
;
CtMethod
<
?
>
classGetter
=
(
CtMethod
)
ctClass
.
getMethodsByName
(
"getConstructors"
)
.
get
(
0
)
;
CtMethod
<
?
>
classSetter
=
(
CtMethod
)
ctClass
.
getMethodsByName
(
"setConstructors"
)
.
get
(
0
)
;
assertEquals
(
classGetter
.
getType
(
)
.
toString
(
)
,
classSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
.
toString
(
)
)
;
assertEquals
(
classGetter
.
getType
(
)
,
classSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
)
;
assertEquals
(
ifaceGetter
.
getType
(
)
.
toString
(
)
,
classGetter
.
getType
(
)
.
toString
(
)
)
;
assertEquals
(
ifaceGetter
.
getType
(
)
,
classGetter
.
getType
(
)
)
;
assertEquals
(
ifaceSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
.
toString
(
)
,
classSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
.
toString
(
)
)
;
assertEquals
(
ifaceSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
,
classSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
)
;
assertEquals
(
ifaceSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
,
classGetter
.
getType
(
)
)
;
MethodTypingContext
mtc
=
new
MethodTypingContext
(
)
.
setClassTypingContext
(
new
ClassTypingContext
(
ctClass
)
)
.
setMethod
(
ifaceSetter
)
;
CtMethod
<
?
>
adaptedMethod
=
(
CtMethod
<
?
>
)
mtc
.
getAdaptationScope
(
)
;
assertEquals
(
adaptedMethod
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
,
classGetter
.
getType
(
)
)
;
assertEquals
(
adaptedMethod
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
,
classSetter
.
getParameters
(
)
.
get
(
0
)
.
getType
(
)
)
;
new
ContractVerifier
(
launcher
.
getFactory
(
)
.
getModel
(
)
.
getRootPackage
(
)
)
.
checkParentConsistency
(
)
;
new
ContractVerifier
(
)
.
checkParentConsistency
(
adaptedMethod
)
;
}
