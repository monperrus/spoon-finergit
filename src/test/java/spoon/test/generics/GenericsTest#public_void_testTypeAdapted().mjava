@Test
public
void
testTypeAdapted
(
)
throws
Exception
{
CtClass
<
?
>
ctModel
=
(
CtClass
<
?
>
)
buildClass
(
ErasureModelA
.
class
)
;
CtTypeParameter
tpA
=
ctModel
.
getFormalCtTypeParameters
(
)
.
get
(
0
)
;
CtTypeParameter
tpB
=
ctModel
.
getFormalCtTypeParameters
(
)
.
get
(
1
)
;
CtTypeParameter
tpC
=
ctModel
.
getFormalCtTypeParameters
(
)
.
get
(
2
)
;
CtTypeParameter
tpD
=
ctModel
.
getFormalCtTypeParameters
(
)
.
get
(
3
)
;
CtClass
<
?
>
ctModelB
=
ctModel
.
filterChildren
(
new
NamedElementFilter
<
>
(
CtClass
.
class
,
"ModelB"
)
)
.
first
(
)
;
ClassTypingContext
sth
=
new
ClassTypingContext
(
ctModelB
)
;
assertEquals
(
"A2"
,
sth
.
adaptType
(
tpA
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"B2"
,
sth
.
adaptType
(
tpB
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"C2"
,
sth
.
adaptType
(
tpC
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"D2"
,
sth
.
adaptType
(
tpD
)
.
getQualifiedName
(
)
)
;
CtClass
<
?
>
ctModelC
=
ctModel
.
filterChildren
(
new
NamedElementFilter
<
>
(
CtClass
.
class
,
"ModelC"
)
)
.
first
(
)
;
ClassTypingContext
sthC
=
new
ClassTypingContext
(
ctModelC
)
;
assertEquals
(
"java.lang.Integer"
,
sthC
.
adaptType
(
tpA
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"java.lang.RuntimeException"
,
sthC
.
adaptType
(
tpB
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"java.lang.IllegalArgumentException"
,
sthC
.
adaptType
(
tpC
)
.
getQualifiedName
(
)
)
;
assertEquals
(
"java.util.List"
,
sthC
.
adaptType
(
tpD
)
.
getQualifiedName
(
)
)
;
}
