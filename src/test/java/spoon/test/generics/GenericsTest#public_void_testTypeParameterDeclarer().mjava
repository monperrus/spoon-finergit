@Test
public
void
testTypeParameterDeclarer
(
)
throws
Exception
{
CtClass
<
?
>
classThatDefinesANewTypeArgument
=
build
(
"spoon.test.generics.testclasses3"
,
"ClassThatDefinesANewTypeArgument"
)
;
CtTypeParameter
typeParam
=
classThatDefinesANewTypeArgument
.
getFormalCtTypeParameters
(
)
.
get
(
0
)
;
assertEquals
(
"T"
,
classThatDefinesANewTypeArgument
.
getFormalCtTypeParameters
(
)
.
get
(
0
)
.
getSimpleName
(
)
)
;
assertSame
(
classThatDefinesANewTypeArgument
,
typeParam
.
getTypeParameterDeclarer
(
)
)
;
CtTypeParameterReference
typeParamReference
=
typeParam
.
getReference
(
)
;
assertSame
(
typeParam
,
typeParamReference
.
getDeclaration
(
)
)
;
CtMethod
m
=
classThatDefinesANewTypeArgument
.
getFactory
(
)
.
createMethod
(
)
;
m
.
setParent
(
classThatDefinesANewTypeArgument
)
;
m
.
setType
(
typeParamReference
)
;
classThatDefinesANewTypeArgument
.
addMethod
(
m
)
;
assertSame
(
typeParam
,
typeParamReference
.
getDeclaration
(
)
)
;
assertSame
(
classThatDefinesANewTypeArgument
,
typeParamReference
.
getDeclaration
(
)
.
getParent
(
)
)
;
CtClass
<
?
>
c2
=
classThatDefinesANewTypeArgument
.
clone
(
)
;
c2
.
addMethod
(
m
)
;
assertSame
(
c2
,
typeParamReference
.
getDeclaration
(
)
.
getParent
(
)
)
;
typeParamReference
.
setSimpleName
(
"R"
)
;
c2
.
getFormalCtTypeParameters
(
)
.
get
(
0
)
.
setSimpleName
(
"R"
)
;
assertSame
(
c2
,
typeParamReference
.
getDeclaration
(
)
.
getParent
(
)
)
;
}
