@Test
public
void
testTypeParameterReference
(
)
throws
Exception
{
Factory
factory
=
build
(
ClassThatBindsAGenericType
.
class
,
ClassThatDefinesANewTypeArgument
.
class
)
;
CtClass
<
?
>
classThatBindsAGenericType
=
factory
.
Class
(
)
.
get
(
ClassThatBindsAGenericType
.
class
)
;
CtClass
<
?
>
classThatDefinesANewTypeArgument
=
factory
.
Class
(
)
.
get
(
ClassThatDefinesANewTypeArgument
.
class
)
;
CtTypeReference
<
?
>
tr1
=
classThatBindsAGenericType
.
getSuperclass
(
)
;
CtTypeReference
<
?
>
trExtends
=
tr1
.
getActualTypeArguments
(
)
.
get
(
0
)
;
CtTypeParameter
tr2
=
classThatDefinesANewTypeArgument
.
getFormalCtTypeParameters
(
)
.
get
(
0
)
;
CtTypeReference
<
?
>
tr3
=
classThatDefinesANewTypeArgument
.
getMethodsByName
(
"foo"
)
.
get
(
0
)
.
getParameters
(
)
.
get
(
0
)
.
getReference
(
)
.
getType
(
)
;
assertTrue
(
!
(
trExtends
instanceof
CtTypeParameterReference
)
)
;
assertTrue
(
tr3
instanceof
CtTypeParameterReference
)
;
assertEquals
(
"File"
,
trExtends
.
getSimpleName
(
)
)
;
assertEquals
(
java
.
io
.
File
.
class
,
trExtends
.
getActualClass
(
)
)
;
assertEquals
(
"T"
,
tr2
.
getSimpleName
(
)
)
;
assertEquals
(
"T"
,
tr3
.
getSimpleName
(
)
)
;
}
