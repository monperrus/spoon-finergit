@Test
public
void
testAnotherMissingImport
(
)
throws
Exception
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
setArgs
(
new
String
[
]
{
"--output-type"
,
"nooutput"
}
)
;
Factory
factory
=
spoon
.
createFactory
(
)
;
factory
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
factory
.
getEnvironment
(
)
.
setLevel
(
"OFF"
)
;
SpoonModelBuilder
compiler
=
spoon
.
createCompiler
(
factory
,
SpoonResourceHelper
.
resources
(
"./src/test/resources/import-resources/fr/inria/AnotherMissingImport.java"
)
)
;
compiler
.
build
(
)
;
List
<
CtMethod
>
methods
=
factory
.
getModel
(
)
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"doSomething"
)
)
;
List
<
CtParameter
>
parameters
=
methods
.
get
(
0
)
.
getParameters
(
)
;
CtTypeReference
<
?
>
type
=
parameters
.
get
(
0
)
.
getType
(
)
;
assertEquals
(
"SomeType"
,
type
.
getSimpleName
(
)
)
;
assertEquals
(
"externallib"
,
type
.
getPackage
(
)
.
getSimpleName
(
)
)
;
CtMethod
<
?
>
mainMethod
=
factory
.
Class
(
)
.
getAll
(
)
.
get
(
0
)
.
getMethodsByName
(
"main"
)
.
get
(
0
)
;
List
<
CtStatement
>
statements
=
mainMethod
.
getBody
(
)
.
getStatements
(
)
;
CtStatement
invocationStatement
=
statements
.
get
(
1
)
;
assertTrue
(
invocationStatement
instanceof
CtInvocation
)
;
CtInvocation
invocation
=
(
CtInvocation
)
invocationStatement
;
CtExecutableReference
executableReference
=
invocation
.
getExecutable
(
)
;
assertEquals
(
"fr.inria.AnotherMissingImport#doSomething(externallib.SomeType)"
,
executableReference
.
getSignature
(
)
)
;
assertSame
(
methods
.
get
(
0
)
,
executableReference
.
getDeclaration
(
)
)
;
}
