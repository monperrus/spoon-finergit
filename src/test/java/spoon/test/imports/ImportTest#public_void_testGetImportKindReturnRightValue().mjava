@Test
public
void
testGetImportKindReturnRightValue
(
)
{
final
Launcher
spoon
=
new
Launcher
(
)
;
CtType
aType
=
spoon
.
getFactory
(
)
.
Type
(
)
.
get
(
Reflection
.
class
)
;
CtImport
ctImport
=
spoon
.
getFactory
(
)
.
createImport
(
aType
.
getReference
(
)
)
;
assertEquals
(
CtImportKind
.
TYPE
,
ctImport
.
getImportKind
(
)
)
;
ctImport
=
spoon
.
getFactory
(
)
.
createImport
(
spoon
.
getFactory
(
)
.
Type
(
)
.
createTypeMemberWildcardImportReference
(
aType
.
getReference
(
)
)
)
;
assertEquals
(
CtImportKind
.
ALL_STATIC_MEMBERS
,
ctImport
.
getImportKind
(
)
)
;
ctImport
=
spoon
.
getFactory
(
)
.
createImport
(
(
(
CtMethod
)
aType
.
getAllMethods
(
)
.
iterator
(
)
.
next
(
)
)
.
getReference
(
)
)
;
assertEquals
(
CtImportKind
.
METHOD
,
ctImport
.
getImportKind
(
)
)
;
ctImport
=
spoon
.
getFactory
(
)
.
createImport
(
(
(
CtField
)
aType
.
getFields
(
)
.
get
(
0
)
)
.
getReference
(
)
)
;
assertEquals
(
CtImportKind
.
FIELD
,
ctImport
.
getImportKind
(
)
)
;
ctImport
=
spoon
.
getFactory
(
)
.
createImport
(
aType
.
getPackage
(
)
.
getReference
(
)
)
;
assertEquals
(
CtImportKind
.
ALL_TYPES
,
ctImport
.
getImportKind
(
)
)
;
}
