@Test
public
void
testImportOfAnInnerClassInASuperClassAvailableInLibrary
(
)
throws
Exception
{
SpoonModelBuilder
comp
=
new
Launcher
(
)
.
createCompiler
(
)
;
List
<
SpoonResource
>
fileToBeSpooned
=
SpoonResourceHelper
.
resources
(
"./src/test/resources/visibility/YamlRepresenter.java"
)
;
assertEquals
(
1
,
fileToBeSpooned
.
size
(
)
)
;
comp
.
addInputSources
(
fileToBeSpooned
)
;
List
<
SpoonResource
>
classpath
=
SpoonResourceHelper
.
resources
(
"./src/test/resources/visibility/snakeyaml-1.9.jar"
)
;
assertEquals
(
1
,
classpath
.
size
(
)
)
;
comp
.
setSourceClasspath
(
classpath
.
get
(
0
)
.
getPath
(
)
)
;
comp
.
build
(
)
;
Factory
factory
=
comp
.
getFactory
(
)
;
CtType
<
?
>
theClass
=
factory
.
Type
(
)
.
get
(
"visibility.YamlRepresenter"
)
;
final
CtClass
<
?
>
innerClass
=
theClass
.
getNestedType
(
"RepresentConfigurationSection"
)
;
String
expected
=
"visibility.YamlRepresenter.RepresentConfigurationSection"
;
assertEquals
(
expected
,
innerClass
.
getReference
(
)
.
toString
(
)
)
;
expected
=
"org.yaml.snakeyaml.representer.Representer.RepresentMap"
;
assertEquals
(
expected
,
innerClass
.
getSuperclass
(
)
.
toString
(
)
)
;
}
