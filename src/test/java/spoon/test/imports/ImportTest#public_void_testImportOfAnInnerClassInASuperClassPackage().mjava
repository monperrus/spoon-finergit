@Test
@Ignore
public
void
testImportOfAnInnerClassInASuperClassPackage
(
)
throws
Exception
{
Launcher
spoon
=
new
Launcher
(
)
;
Factory
factory
=
spoon
.
createFactory
(
)
;
SpoonCompiler
compiler
=
spoon
.
createCompiler
(
factory
,
SpoonResourceHelper
.
resources
(
"./src/test/java/spoon/test/imports/testclasses/internal/SuperClass.java"
,
"./src/test/java/spoon/test/imports/testclasses/internal/ChildClass.java"
,
"./src/test/java/spoon/test/imports/testclasses/ClientClass.java"
)
)
;
compiler
.
build
(
)
;
final
List
<
CtClass
<
?
>
>
classes
=
Query
.
getElements
(
factory
,
new
NameFilter
<
CtClass
<
?
>
>
(
"ClientClass"
)
)
;
final
CtClass
<
?
>
innerClass
=
classes
.
get
(
0
)
.
getNestedType
(
"InnerClass"
)
;
String
expected
=
"spoon.test.imports.testclasses.ClientClass.InnerClass"
;
assertEquals
(
expected
,
innerClass
.
getReference
(
)
.
toString
(
)
)
;
expected
=
"spoon.test.imports.testclasses.internal.ChildClass.InnerClassProtected"
;
assertEquals
(
expected
,
innerClass
.
getSuperclass
(
)
.
toString
(
)
)
;
}
