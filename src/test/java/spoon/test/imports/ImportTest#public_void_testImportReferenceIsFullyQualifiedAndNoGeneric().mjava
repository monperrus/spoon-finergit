@Test
public
void
testImportReferenceIsFullyQualifiedAndNoGeneric
(
)
{
Factory
f
=
new
FactoryImpl
(
new
DefaultCoreFactory
(
)
,
new
StandardEnvironment
(
)
)
;
CtTypeReference
<
?
>
typeRef
=
f
.
Type
(
)
.
createReference
(
"some.foo.SomeType"
)
;
typeRef
.
addActualTypeArgument
(
f
.
Type
(
)
.
createTypeParameterReference
(
"T"
)
)
;
assertEquals
(
"some.foo.SomeType<T>"
,
typeRef
.
toString
(
)
)
;
typeRef
.
setImplicit
(
true
)
;
typeRef
.
setSimplyQualified
(
true
)
;
assertTrue
(
typeRef
.
isImplicit
(
)
)
;
assertTrue
(
typeRef
.
getPackage
(
)
.
isImplicit
(
)
)
;
CtImport
imprt
=
f
.
Type
(
)
.
createImport
(
typeRef
)
;
CtTypeReference
<
?
>
typeRef2
=
(
CtTypeReference
<
?
>
)
imprt
.
getReference
(
)
;
assertNotSame
(
typeRef2
,
typeRef
)
;
assertEquals
(
"some.foo.SomeType"
,
typeRef2
.
toString
(
)
)
;
assertFalse
(
typeRef2
.
isImplicit
(
)
)
;
assertFalse
(
typeRef2
.
getPackage
(
)
.
isImplicit
(
)
)
;
assertEquals
(
1
,
typeRef
.
getActualTypeArguments
(
)
.
size
(
)
)
;
assertTrue
(
typeRef
.
isImplicit
(
)
)
;
assertTrue
(
typeRef
.
getPackage
(
)
.
isImplicit
(
)
)
;
}
