@Test
public
void
testSortingOfImports
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setAutoImports
(
true
)
;
String
outputDir
=
"./target/spooned"
;
launcher
.
addInputResource
(
"./src/main/java/spoon/reflect/visitor/DefaultJavaPrettyPrinter.java"
)
;
launcher
.
setSourceOutputDirectory
(
outputDir
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
run
(
)
;
PrettyPrinter
prettyPrinter
=
launcher
.
createPrettyPrinter
(
)
;
CtType
element
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
DefaultJavaPrettyPrinter
.
class
)
;
List
<
CtType
<
?
>
>
toPrint
=
new
ArrayList
<
>
(
)
;
toPrint
.
add
(
element
)
;
prettyPrinter
.
calculate
(
element
.
getPosition
(
)
.
getCompilationUnit
(
)
,
toPrint
)
;
String
output
=
prettyPrinter
.
getResult
(
)
;
StringTokenizer
st
=
new
StringTokenizer
(
output
,
System
.
getProperty
(
"line.separator"
)
)
;
String
lastImport
=
null
;
int
countOfImports
=
0
;
while
(
st
.
hasMoreTokens
(
)
)
{
String
line
=
st
.
nextToken
(
)
;
if
(
line
.
startsWith
(
"import"
)
)
{
line
=
line
.
substring
(
0
,
line
.
length
(
)
-
2
)
;
countOfImports
++
;
if
(
lastImport
!=
null
)
{
assertTrue
(
lastImport
+
" should be before "
+
line
,
lastImport
.
compareTo
(
line
)
<
0
)
;
}
lastImport
=
line
;
}
else
{
if
(
lastImport
!=
null
)
{
break
;
}
}
}
assertTrue
(
countOfImports
>
10
)
;
}
