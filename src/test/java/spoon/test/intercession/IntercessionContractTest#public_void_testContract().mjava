@Test
public
void
testContract
(
)
throws
Throwable
{
Factory
factory
=
new
FactoryImpl
(
new
DefaultCoreFactory
(
)
,
new
StandardEnvironment
(
)
)
;
try
{
Object
element
=
declaringClass
.
newInstance
(
)
;
if
(
element
instanceof
FactoryAccessor
)
{
(
(
FactoryAccessor
)
element
)
.
setFactory
(
factory
)
;
}
toTest
.
invoke
(
element
,
new
Object
[
]
{
null
}
)
;
}
catch
(
NullPointerException
e
)
{
fail
(
"Shouldn't throw NPE."
)
;
}
catch
(
InvocationTargetException
e
)
{
if
(
!
(
e
.
getTargetException
(
)
instanceof
UnsupportedOperationException
)
)
{
throw
new
RuntimeException
(
"Unexpected exception happened with "
+
toTest
.
getName
(
)
+
" in "
+
declaringClass
.
getName
(
)
,
e
.
getTargetException
(
)
)
;
}
}
catch
(
Exception
e
)
{
throw
new
RuntimeException
(
"Unexpected exception happened with "
+
toTest
.
getName
(
)
+
" in "
+
declaringClass
.
getName
(
)
,
e
)
;
}
}
