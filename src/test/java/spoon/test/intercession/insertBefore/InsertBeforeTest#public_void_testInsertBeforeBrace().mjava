@Test
public
void
testInsertBeforeBrace
(
)
throws
Exception
{
CtClass
<
?
>
foo
=
factory
.
Package
(
)
.
get
(
"spoon.test.intercession.insertBefore"
)
.
getType
(
"InsertBeforeExample"
)
;
{
CtMethod
<
?
>
ifWithoutBraces_m
=
(
CtMethod
)
foo
.
getElements
(
new
NameFilter
(
"ifWithoutBraces"
)
)
.
get
(
0
)
;
CtCodeSnippetStatement
s
=
factory
.
Code
(
)
.
createCodeSnippetStatement
(
"return 2"
)
;
CtIf
ifWithoutBraces
=
ifWithoutBraces_m
.
getElements
(
new
TypeFilter
<
CtIf
>
(
CtIf
.
class
)
)
.
get
(
0
)
;
ifWithoutBraces
.
getThenStatement
(
)
.
insertBefore
(
s
)
;
assertTrue
(
ifWithoutBraces
.
getThenStatement
(
)
instanceof
CtBlock
)
;
assertEquals
(
s
,
(
(
CtBlock
)
ifWithoutBraces
.
getThenStatement
(
)
)
.
getStatement
(
0
)
)
;
}
{
CtMethod
<
?
>
ifWithBraces_m
=
(
CtMethod
)
foo
.
getElements
(
new
NameFilter
(
"ifWithBraces"
)
)
.
get
(
0
)
;
CtCodeSnippetStatement
s
=
factory
.
Code
(
)
.
createCodeSnippetStatement
(
"return 2"
)
;
CtIf
ifWithBraces
=
ifWithBraces_m
.
getElements
(
new
TypeFilter
<
CtIf
>
(
CtIf
.
class
)
)
.
get
(
0
)
;
ifWithBraces
.
getThenStatement
(
)
.
insertBefore
(
s
)
;
assertTrue
(
ifWithBraces
.
getThenStatement
(
)
instanceof
CtBlock
)
;
assertEquals
(
s
,
(
(
CtBlock
)
ifWithBraces
.
getThenStatement
(
)
)
.
getStatement
(
0
)
)
;
}
}
