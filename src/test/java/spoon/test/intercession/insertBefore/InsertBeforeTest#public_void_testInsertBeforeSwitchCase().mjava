@Test
public
void
testInsertBeforeSwitchCase
(
)
throws
Exception
{
CtClass
<
?
>
foo
=
factory
.
Package
(
)
.
get
(
"spoon.test.intercession.insertBefore"
)
.
getType
(
"InsertBeforeExample"
)
;
{
CtMethod
<
?
>
sm
=
(
CtMethod
)
foo
.
getElements
(
new
NameFilter
(
"switchMethod"
)
)
.
get
(
0
)
;
CtCase
s
=
factory
.
Core
(
)
.
createCase
(
)
;
CtLiteral
<
Object
>
literal
=
factory
.
Core
(
)
.
createLiteral
(
)
;
literal
.
setValue
(
1
)
;
s
.
setCaseExpression
(
literal
)
;
CtSwitch
sw
=
sm
.
getElements
(
new
TypeFilter
<
CtSwitch
>
(
CtSwitch
.
class
)
)
.
get
(
0
)
;
CtCase
ctCase1
=
(
CtCase
)
sw
.
getCases
(
)
.
get
(
2
)
;
CtCase
ctCase2
=
(
CtCase
)
sw
.
getCases
(
)
.
get
(
3
)
;
CtCodeSnippetStatement
snippet
=
factory
.
Code
(
)
.
createCodeSnippetStatement
(
"System.out.println(\"foo\")"
)
;
(
(
CtStatement
)
ctCase1
.
getStatements
(
)
.
get
(
0
)
)
.
insertBefore
(
snippet
)
;
(
(
CtStatement
)
ctCase2
.
getStatements
(
)
.
get
(
1
)
)
.
insertBefore
(
snippet
)
;
assertEquals
(
snippet
,
ctCase1
.
getStatements
(
)
.
get
(
0
)
)
;
assertEquals
(
snippet
,
ctCase2
.
getStatements
(
)
.
get
(
1
)
)
;
CtCase
ctCase
=
(
CtCase
)
sw
.
getCases
(
)
.
get
(
1
)
;
ctCase
.
insertBefore
(
s
)
;
assertEquals
(
5
,
sw
.
getCases
(
)
.
size
(
)
)
;
assertEquals
(
s
,
sw
.
getCases
(
)
.
get
(
1
)
)
;
assertEquals
(
ctCase
,
sw
.
getCases
(
)
.
get
(
2
)
)
;
}
}
