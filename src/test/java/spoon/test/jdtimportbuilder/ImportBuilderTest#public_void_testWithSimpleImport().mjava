@Test
public
void
testWithSimpleImport
(
)
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addInputResource
(
"./src/test/java/spoon/test/imports/testclasses/ClassWithInvocation.java"
)
;
spoon
.
getEnvironment
(
)
.
setAutoImports
(
true
)
;
spoon
.
buildModel
(
)
;
CtClass
classA
=
spoon
.
getFactory
(
)
.
Class
(
)
.
get
(
ClassWithInvocation
.
class
)
;
CompilationUnit
unitA
=
spoon
.
getFactory
(
)
.
CompilationUnit
(
)
.
getMap
(
)
.
get
(
classA
.
getPosition
(
)
.
getFile
(
)
.
getPath
(
)
)
;
Collection
<
CtImport
>
imports
=
unitA
.
getImports
(
)
;
assertEquals
(
1
,
imports
.
size
(
)
)
;
CtImport
ref
=
imports
.
iterator
(
)
.
next
(
)
;
assertEquals
(
"import spoon.test.annotation.testclasses.GlobalAnnotation;"
+
nl
,
ref
.
toString
(
)
)
;
assertTrue
(
ref
.
getReference
(
)
instanceof
CtTypeReference
)
;
CtTypeReference
refType
=
(
CtTypeReference
)
ref
.
getReference
(
)
;
assertEquals
(
"spoon.test.annotation.testclasses.GlobalAnnotation"
,
refType
.
getQualifiedName
(
)
)
;
}
