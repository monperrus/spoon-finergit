@Test
public
void
testLambdaExpressionWithExpressionBodyAndWithMultiParametersTyped
(
)
throws
Exception
{
final
CtLambda
<
?
>
lambda
=
getLambdaByName
(
"lambda$4"
)
;
assertTypedBy
(
Foo
.
CheckPersons
.
class
,
lambda
.
getType
(
)
)
;
assertParametersSizeIs
(
2
,
lambda
.
getParameters
(
)
)
;
final
CtParameter
<
?
>
parameter1
=
(
CtParameter
<
?
>
)
lambda
.
getParameters
(
)
.
get
(
0
)
;
assertParameterTypedBy
(
Foo
.
Person
.
class
,
parameter1
)
;
assertParameterIsNamedBy
(
"p1"
,
parameter1
)
;
final
CtParameter
<
?
>
parameter2
=
(
CtParameter
<
?
>
)
lambda
.
getParameters
(
)
.
get
(
1
)
;
assertParameterTypedBy
(
Foo
.
Person
.
class
,
parameter2
)
;
assertParameterIsNamedBy
(
"p2"
,
parameter2
)
;
assertHasExpressionBody
(
lambda
)
;
assertIsWellPrinted
(
"((spoon.test.lambda.testclasses.Foo.CheckPersons) ((spoon.test.lambda.testclasses.Foo.Person p1,spoon.test.lambda.testclasses.Foo.Person p2) -> ((p1.age) - (p2.age)) > 0))"
,
lambda
)
;
}
