@Test
public
void
testLambdaWithGenericExtendingMultipleInterfaces
(
)
{
final
CtLambda
<
?
>
lambda
=
intersection
.
getElements
(
new
TypeFilter
<
CtLambda
<
?
>
>
(
CtLambda
.
class
)
)
.
get
(
0
)
;
assertEquals
(
1
,
lambda
.
getParameters
(
)
.
size
(
)
)
;
final
CtParameter
<
?
>
parameter
=
lambda
.
getParameters
(
)
.
get
(
0
)
;
assertEquals
(
"elt"
,
parameter
.
getSimpleName
(
)
)
;
assertTrue
(
parameter
.
getType
(
)
.
isImplicit
(
)
)
;
assertEquals
(
""
,
parameter
.
getType
(
)
.
toString
(
)
)
;
CtIntersectionTypeReference
typeReference
=
(
CtIntersectionTypeReference
)
parameter
.
getType
(
)
;
assertParameterIsNamedBy
(
"elt"
,
parameter
)
;
assertTrue
(
typeReference
.
getBounds
(
)
.
size
(
)
==
2
)
;
assertHasExpressionBody
(
lambda
)
;
assertIsWellPrinted
(
"( elt) -> elt.test()"
,
lambda
)
;
}
