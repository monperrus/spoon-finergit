@Test
public
void
testTypeParameterOfLambdaWithoutType
(
)
throws
Exception
{
final
CtLambda
<
?
>
lambda1
=
bar
.
getElements
(
new
NameFilter
<
CtLambda
<
?
>
>
(
"lambda$1"
)
)
.
get
(
0
)
;
assertEquals
(
1
,
lambda1
.
getParameters
(
)
.
size
(
)
)
;
final
CtParameter
<
?
>
ctParameterFirstLambda
=
lambda1
.
getParameters
(
)
.
get
(
0
)
;
assertEquals
(
"s"
,
ctParameterFirstLambda
.
getSimpleName
(
)
)
;
assertTrue
(
ctParameterFirstLambda
.
getType
(
)
instanceof
CtImplicitTypeReference
)
;
assertEquals
(
""
,
ctParameterFirstLambda
.
getType
(
)
.
toString
(
)
)
;
assertEquals
(
"SingleSubscriber"
,
ctParameterFirstLambda
.
getType
(
)
.
getSimpleName
(
)
)
;
final
CtLambda
<
?
>
lambda2
=
bar
.
getElements
(
new
NameFilter
<
CtLambda
<
?
>
>
(
"lambda$2"
)
)
.
get
(
0
)
;
assertEquals
(
2
,
lambda2
.
getParameters
(
)
.
size
(
)
)
;
final
CtParameter
<
?
>
ctParameterSecondLambda
=
lambda2
.
getParameters
(
)
.
get
(
0
)
;
assertEquals
(
"v"
,
ctParameterSecondLambda
.
getSimpleName
(
)
)
;
assertTrue
(
ctParameterSecondLambda
.
getType
(
)
instanceof
CtImplicitTypeReference
)
;
assertEquals
(
""
,
ctParameterSecondLambda
.
getType
(
)
.
toString
(
)
)
;
assertEquals
(
"?"
,
ctParameterSecondLambda
.
getType
(
)
.
getSimpleName
(
)
)
;
}
