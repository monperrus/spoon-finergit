@Test
public
void
testInternalClasses
(
)
throws
Exception
{
CtClass
<
?
>
type
=
build
(
"spoon.test.limits.utils.testclasses"
,
"ContainInternalClass"
)
;
assertEquals
(
"ContainInternalClass"
,
type
.
getSimpleName
(
)
)
;
List
<
CtClass
<
?
>
>
classes
=
type
.
getElements
(
new
TypeFilter
<
CtClass
<
?
>
>
(
CtClass
.
class
)
)
;
assertEquals
(
4
,
classes
.
size
(
)
)
;
CtClass
<
?
>
c1
=
classes
.
get
(
1
)
;
assertEquals
(
"InternalClass"
,
c1
.
getSimpleName
(
)
)
;
assertEquals
(
"spoon.test.limits.utils.testclasses.ContainInternalClass$InternalClass"
,
c1
.
getQualifiedName
(
)
)
;
assertEquals
(
"spoon.test.limits.utils.testclasses"
,
c1
.
getPackage
(
)
.
getQualifiedName
(
)
)
;
assertEquals
(
ContainInternalClass
.
InternalClass
.
class
,
c1
.
getActualClass
(
)
)
;
CtClass
<
?
>
c2
=
classes
.
get
(
2
)
;
assertEquals
(
"InsideInternalClass"
,
c2
.
getSimpleName
(
)
)
;
assertEquals
(
"spoon.test.limits.utils.testclasses.ContainInternalClass$InternalClass$InsideInternalClass"
,
c2
.
getQualifiedName
(
)
)
;
assertEquals
(
ContainInternalClass
.
InternalClass
.
InsideInternalClass
.
class
,
c2
.
getActualClass
(
)
)
;
}
