@Test
public
void
testBuildLiternal
(
)
throws
Exception
{
CtType
<
Tacos
>
ctType
=
buildClass
(
Tacos
.
class
)
;
TypeFactory
typeFactory
=
ctType
.
getFactory
(
)
.
Type
(
)
;
CtLiteral
<
?
>
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"a"
)
.
getDefaultExpression
(
)
;
assertEquals
(
0
,
literal
.
getValue
(
)
)
;
assertTrue
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
INTEGER_PRIMITIVE
,
literal
.
getType
(
)
)
;
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"b"
)
.
getDefaultExpression
(
)
;
assertEquals
(
0x0
,
literal
.
getValue
(
)
)
;
assertTrue
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
INTEGER_PRIMITIVE
,
literal
.
getType
(
)
)
;
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"c"
)
.
getDefaultExpression
(
)
;
assertEquals
(
0f
,
literal
.
getValue
(
)
)
;
assertTrue
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
FLOAT_PRIMITIVE
,
literal
.
getType
(
)
)
;
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"d"
)
.
getDefaultExpression
(
)
;
assertEquals
(
0l
,
literal
.
getValue
(
)
)
;
assertTrue
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
LONG_PRIMITIVE
,
literal
.
getType
(
)
)
;
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"e"
)
.
getDefaultExpression
(
)
;
assertEquals
(
0d
,
literal
.
getValue
(
)
)
;
assertTrue
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
DOUBLE_PRIMITIVE
,
literal
.
getType
(
)
)
;
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"f"
)
.
getDefaultExpression
(
)
;
assertEquals
(
'0'
,
literal
.
getValue
(
)
)
;
assertTrue
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
CHARACTER_PRIMITIVE
,
literal
.
getType
(
)
)
;
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"g"
)
.
getDefaultExpression
(
)
;
assertEquals
(
"0"
,
literal
.
getValue
(
)
)
;
assertFalse
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
STRING
,
literal
.
getType
(
)
)
;
literal
=
(
CtLiteral
<
?
>
)
ctType
.
getField
(
"h"
)
.
getDefaultExpression
(
)
;
assertEquals
(
null
,
literal
.
getValue
(
)
)
;
assertFalse
(
literal
.
getType
(
)
.
isPrimitive
(
)
)
;
assertEquals
(
typeFactory
.
NULL_TYPE
,
literal
.
getType
(
)
)
;
}
