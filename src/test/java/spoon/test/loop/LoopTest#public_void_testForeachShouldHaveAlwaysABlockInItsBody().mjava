@Test
public
void
testForeachShouldHaveAlwaysABlockInItsBody
(
)
throws
Exception
{
final
CtClass
<
Join
>
aType
=
build
(
Join
.
class
,
Condition
.
class
)
.
Class
(
)
.
get
(
Join
.
class
)
;
final
CtConstructor
<
Join
>
joinCtConstructor
=
aType
.
getConstructors
(
)
.
stream
(
)
.
findFirst
(
)
.
get
(
)
;
final
CtLoop
ctLoop
=
joinCtConstructor
.
getBody
(
)
.
getElements
(
new
TypeFilter
<
>
(
CtLoop
.
class
)
)
.
get
(
0
)
;
assertTrue
(
ctLoop
.
getBody
(
)
instanceof
CtBlock
)
;
String
expectedPrettyPrinted
=
"for (Condition<? super T> condition : conditions)"
+
nl
+
"    this.conditions.add(notNull(condition));"
+
nl
;
assertEquals
(
expectedPrettyPrinted
,
ctLoop
.
prettyprint
(
)
)
;
String
expectedDebug
=
"for (spoon.test.loop.testclasses.Condition<? super T> condition : conditions) {"
+
nl
+
"    this.conditions.add(spoon.test.loop.testclasses.Join.notNull(condition));"
+
nl
+
"}"
;
assertEquals
(
expectedDebug
,
ctLoop
.
toString
(
)
)
;
}
