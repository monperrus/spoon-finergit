@Test
public
void
testElementIsContainedInAttributeOfItsParent
(
)
{
rootPackage
.
accept
(
new
CtScanner
(
)
{
@Override
public
void
scan
(
CtRole
role
,
CtElement
element
)
{
if
(
element
!=
null
)
{
CtElement
parent
=
element
.
getParent
(
)
;
Object
attributeOfParent
=
parent
.
getValueByRole
(
role
)
;
if
(
attributeOfParent
instanceof
CtElement
)
{
assertSame
(
"Element of type "
+
element
.
getClass
(
)
.
getName
(
)
+
" is not the value of attribute of role "
+
role
.
name
(
)
+
" of parent type "
+
parent
.
getClass
(
)
.
getName
(
)
,
element
,
attributeOfParent
)
;
}
else
if
(
attributeOfParent
instanceof
Collection
)
{
assertTrue
(
"Element of type "
+
element
.
getClass
(
)
.
getName
(
)
+
" not found in Collection value of attribute of role "
+
role
.
name
(
)
+
" of parent type "
+
parent
.
getClass
(
)
.
getName
(
)
,
(
(
Collection
<
CtElement
>
)
attributeOfParent
)
.
stream
(
)
.
anyMatch
(
e
->
e
==
element
)
)
;
}
else
if
(
attributeOfParent
instanceof
Map
)
{
assertTrue
(
"Element of type "
+
element
.
getClass
(
)
.
getName
(
)
+
" not found in Map#values of attribute of role "
+
role
.
name
(
)
+
" of parent type "
+
parent
.
getClass
(
)
.
getName
(
)
,
(
(
Map
<
String
,
?
>
)
attributeOfParent
)
.
values
(
)
.
stream
(
)
.
anyMatch
(
e
->
e
==
element
)
)
;
}
else
{
fail
(
"Attribute of Role "
+
role
+
" not checked"
)
;
}
}
super
.
scan
(
role
,
element
)
;
}
}
)
;
}
