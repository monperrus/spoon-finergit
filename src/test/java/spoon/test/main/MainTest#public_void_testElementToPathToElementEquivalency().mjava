@Test
public
void
testElementToPathToElementEquivalency
(
)
{
rootPackage
.
getPackage
(
"spoon"
)
.
getElements
(
e
->
true
)
.
parallelStream
(
)
.
forEach
(
element
->
{
CtPath
path
=
element
.
getPath
(
)
;
String
pathStr
=
path
.
toString
(
)
;
try
{
CtPath
pathRead
=
new
CtPathStringBuilder
(
)
.
fromString
(
pathStr
)
;
assertEquals
(
pathStr
,
pathRead
.
toString
(
)
)
;
Collection
<
CtElement
>
returnedElements
=
pathRead
.
evaluateOn
(
rootPackage
)
;
assertEquals
(
1
,
returnedElements
.
size
(
)
)
;
CtElement
actualElement
=
(
CtElement
)
returnedElements
.
toArray
(
)
[
0
]
;
assertSame
(
element
,
actualElement
)
;
}
catch
(
CtPathException
e
)
{
throw
new
AssertionError
(
"Path "
+
pathStr
+
" is either incorrectly generated or incorrectly read"
,
e
)
;
}
catch
(
AssertionError
e
)
{
throw
new
AssertionError
(
"Path "
+
pathStr
+
" detection failed on "
+
element
.
getClass
(
)
.
getSimpleName
(
)
+
": "
+
element
.
toString
(
)
,
e
)
;
}
}
)
;
}
