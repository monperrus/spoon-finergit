/** 
 * @return the super MMField which has same valueType and which is in root of the most implementations
 */
public
MetamodelProperty
getRootSuperField
(
)
{
List
<
MetamodelProperty
>
potentialRootSuperFields
=
new
ArrayList
<
>
(
)
;
if
(
roleMethods
.
size
(
)
>
0
)
{
potentialRootSuperFields
.
add
(
this
)
;
}
superProperties
.
forEach
(
superField
->
{
addUniqueObject
(
potentialRootSuperFields
,
superField
.
getRootSuperField
(
)
)
;
}
)
;
int
idx
=
0
;
if
(
potentialRootSuperFields
.
size
(
)
>
1
)
{
boolean
needsSetter
=
getMethod
(
MMMethodKind
.
SET
)
!=
null
;
CtTypeReference
<
?
>
expectedValueType
=
this
.
getValueType
(
)
.
getTypeErasure
(
)
;
for
(
int
i
=
1
;
i
<
potentialRootSuperFields
.
size
(
)
;
i
++
)
{
MetamodelProperty
superField
=
potentialRootSuperFields
.
get
(
i
)
;
if
(
superField
.
getValueType
(
)
.
getTypeErasure
(
)
.
equals
(
expectedValueType
)
==
false
)
{
break
;
}
if
(
needsSetter
&&
superField
.
getMethod
(
MMMethodKind
.
SET
)
==
null
)
{
break
;
}
idx
=
i
;
}
}
return
potentialRootSuperFields
.
get
(
idx
)
;
}
