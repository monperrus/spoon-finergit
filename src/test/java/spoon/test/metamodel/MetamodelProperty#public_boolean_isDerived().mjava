/** 
 * @return true if this {@link MetamodelProperty} is derived in owner concept
 */
public
boolean
isDerived
(
)
{
if
(
derived
==
null
)
{
if
(
isUnsettable
(
)
)
{
derived
=
true
;
return
true
;
}
MMMethod
getter
=
getMethod
(
MMMethodKind
.
GET
)
;
if
(
getter
==
null
)
{
throw
new
SpoonException
(
"No getter defined for "
+
this
)
;
}
CtTypeReference
<
DerivedProperty
>
derivedProperty
=
getter
.
getMethod
(
)
.
getFactory
(
)
.
createCtTypeReference
(
DerivedProperty
.
class
)
;
boolean
isConreteMethod
=
false
;
for
(
CtMethod
<
?
>
ctMethod
:
getter
.
getOwnMethods
(
)
)
{
if
(
ctMethod
.
getAnnotation
(
derivedProperty
)
!=
null
)
{
derived
=
Boolean
.
TRUE
;
return
true
;
}
isConreteMethod
=
isConreteMethod
||
ctMethod
.
getBody
(
)
!=
null
;
}
if
(
isConreteMethod
)
{
derived
=
Boolean
.
FALSE
;
return
false
;
}
derived
=
Boolean
.
FALSE
;
for
(
MetamodelProperty
superField
:
superProperties
)
{
if
(
superField
.
isDerived
(
)
)
{
derived
=
Boolean
.
TRUE
;
break
;
}
}
}
return
derived
;
}
