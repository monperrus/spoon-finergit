/** 
 * is called once for each  {@link MetamodelConcept}, to initialize it.
 * @param type a class or inteface of the spoon model element
 * @param mmConcept to be initialize {@link MetamodelConcept}
 */
private
void
initializeConcept
(
CtType
<
?
>
type
,
MetamodelConcept
mmConcept
)
{
if
(
type
instanceof
CtInterface
<
?
>
)
{
CtInterface
<
?
>
iface
=
(
CtInterface
<
?
>
)
type
;
mmConcept
.
setModelClass
(
getImplementationOfInterface
(
iface
)
)
;
mmConcept
.
setModelInterface
(
iface
)
;
}
else
if
(
type
instanceof
CtClass
<
?
>
)
{
CtClass
<
?
>
clazz
=
(
CtClass
<
?
>
)
type
;
mmConcept
.
setModelClass
(
clazz
)
;
mmConcept
.
setModelInterface
(
getInterfaceOfImplementation
(
clazz
)
)
;
}
else
{
throw
new
SpoonException
(
"Unexpected spoon model type: "
+
type
.
getQualifiedName
(
)
)
;
}
if
(
mmConcept
.
getModelClass
(
)
!=
null
)
{
addFieldsOfType
(
mmConcept
,
mmConcept
.
getModelClass
(
)
)
;
}
if
(
mmConcept
.
getModelInterface
(
)
!=
null
)
{
addFieldsOfType
(
mmConcept
,
mmConcept
.
getModelInterface
(
)
)
;
}
mmConcept
.
getRoleToProperty
(
)
.
forEach
(
(
role
,
mmField
)
->
{
mmField
.
sortByBestMatch
(
)
;
mmField
.
setValueType
(
mmField
.
detectValueType
(
)
)
;
}
)
;
}
