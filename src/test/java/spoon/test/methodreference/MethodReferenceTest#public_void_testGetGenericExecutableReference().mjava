@Test
public
void
testGetGenericExecutableReference
(
)
throws
Exception
{
CtType
<
?
>
classCloud
=
ModelUtils
.
buildClass
(
Cloud
.
class
)
;
List
<
CtMethod
<
?
>
>
methods
=
classCloud
.
getMethodsByName
(
"method"
)
;
assertThat
(
methods
.
size
(
)
,
is
(
3
)
)
;
int
n
=
0
;
for
(
CtMethod
<
?
>
method1
:
classCloud
.
getMethodsByName
(
"method"
)
)
{
CtExecutableReference
<
?
>
execRef
=
method1
.
getReference
(
)
;
Method
method
=
execRef
.
getActualMethod
(
)
;
assertNotNull
(
method
)
;
assertEquals
(
"method"
,
method
.
getName
(
)
)
;
List
<
CtParameter
<
?
>
>
parameters
=
method1
.
getParameters
(
)
;
assertThat
(
parameters
.
size
(
)
,
is
(
2
)
)
;
for
(
int
i
=
0
;
i
<
parameters
.
size
(
)
;
i
++
)
{
CtTypeReference
<
?
>
paramTypeRef
=
parameters
.
get
(
i
)
.
getType
(
)
;
Class
<
?
>
paramClass
=
paramTypeRef
.
getTypeErasure
(
)
.
getActualClass
(
)
;
assertSame
(
paramClass
,
method
.
getParameterTypes
(
)
[
i
]
)
;
CtType
<
?
>
paramType
=
paramTypeRef
.
getDeclaration
(
)
;
assertNotNull
(
paramType
)
;
CtTypeReference
otherParamTypeRef
=
paramType
.
getReference
(
)
;
assertEquals
(
paramTypeRef
,
otherParamTypeRef
)
;
assertSame
(
paramType
,
paramType
.
getReference
(
)
.
getDeclaration
(
)
)
;
n
++
;
}
assertSame
(
method1
,
execRef
.
getDeclaration
(
)
)
;
}
assertThat
(
n
,
is
(
2
*
3
)
)
;
}
