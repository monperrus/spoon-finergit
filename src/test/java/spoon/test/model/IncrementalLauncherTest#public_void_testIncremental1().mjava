@Test
public
void
testIncremental1
(
)
throws
IOException
,
InterruptedException
{
FileUtils
.
deleteDirectory
(
WORKING_DIR
)
;
FileUtils
.
copyDirectory
(
ORIGINAL_FILES_DIR
,
WORKING_DIR
)
;
Set
<
File
>
inputResources
=
Collections
.
singleton
(
WORKING_DIR
)
;
Set
<
String
>
sourceClasspath
=
Collections
.
emptySet
(
)
;
IncrementalLauncher
launcher1
=
new
IncrementalLauncher
(
inputResources
,
sourceClasspath
,
CACHE_DIR
)
;
assertTrue
(
launcher1
.
changesPresent
(
)
)
;
CtModel
originalModel
=
launcher1
.
buildModel
(
)
;
launcher1
.
saveCache
(
)
;
TimeUnit
.
MILLISECONDS
.
sleep
(
1000
)
;
FileUtils
.
copyFile
(
new
File
(
CHANGED_FILES_DIR
,
"D.java"
)
,
new
File
(
WORKING_DIR
,
"D.java"
)
,
true
)
;
FileUtils
.
touch
(
new
File
(
WORKING_DIR
,
"D.java"
)
)
;
IncrementalLauncher
launcher2
=
new
IncrementalLauncher
(
inputResources
,
sourceClasspath
,
CACHE_DIR
)
;
assertTrue
(
launcher2
.
changesPresent
(
)
)
;
CtModel
newModel
=
launcher2
.
buildModel
(
)
;
launcher2
.
saveCache
(
)
;
Collection
<
CtType
<
?
>
>
types1
=
originalModel
.
getAllTypes
(
)
;
Collection
<
CtType
<
?
>
>
types2
=
newModel
.
getAllTypes
(
)
;
assertFalse
(
types1
.
equals
(
types2
)
)
;
CtType
<
?
>
a1
=
getTypeByName
(
types1
,
"A"
)
;
CtType
<
?
>
b1
=
getTypeByName
(
types1
,
"B"
)
;
CtType
<
?
>
c1
=
getTypeByName
(
types1
,
"C"
)
;
CtType
<
?
>
d1
=
getTypeByName
(
types1
,
"D"
)
;
CtType
<
?
>
a2
=
getTypeByName
(
types2
,
"A"
)
;
CtType
<
?
>
b2
=
getTypeByName
(
types2
,
"B"
)
;
CtType
<
?
>
c2
=
getTypeByName
(
types2
,
"C"
)
;
CtType
<
?
>
d2
=
getTypeByName
(
types2
,
"D"
)
;
assertTrue
(
a1
.
equals
(
a2
)
)
;
assertTrue
(
b1
.
equals
(
b2
)
)
;
assertTrue
(
c1
.
equals
(
c2
)
)
;
assertFalse
(
d1
.
equals
(
d2
)
)
;
assertTrue
(
d1
.
getDeclaredFields
(
)
.
size
(
)
==
0
)
;
assertTrue
(
d2
.
getDeclaredFields
(
)
.
size
(
)
==
2
)
;
assertTrue
(
d1
.
getMethods
(
)
.
size
(
)
==
0
)
;
assertTrue
(
d2
.
getMethods
(
)
.
size
(
)
==
1
)
;
}
