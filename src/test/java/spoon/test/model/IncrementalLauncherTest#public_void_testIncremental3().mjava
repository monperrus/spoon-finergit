@Test
public
void
testIncremental3
(
)
throws
IOException
,
InterruptedException
{
FileUtils
.
deleteDirectory
(
WORKING_DIR
)
;
FileUtils
.
copyDirectory
(
ORIGINAL_FILES_DIR
,
WORKING_DIR
)
;
Set
<
File
>
inputResources
=
new
HashSet
<
>
(
)
;
inputResources
.
add
(
new
File
(
WORKING_DIR
,
"A.java"
)
)
;
inputResources
.
add
(
new
File
(
WORKING_DIR
,
"B.java"
)
)
;
inputResources
.
add
(
new
File
(
WORKING_DIR
,
"C.java"
)
)
;
Set
<
String
>
sourceClasspath
=
Collections
.
emptySet
(
)
;
IncrementalLauncher
launcher1
=
new
IncrementalLauncher
(
inputResources
,
sourceClasspath
,
CACHE_DIR
)
;
assertTrue
(
launcher1
.
changesPresent
(
)
)
;
CtModel
originalModel
=
launcher1
.
buildModel
(
)
;
launcher1
.
saveCache
(
)
;
CtType
<
?
>
c1
=
getTypeByName
(
originalModel
.
getAllTypes
(
)
,
"C"
)
;
assertTrue
(
c1
.
getField
(
"val"
)
.
getType
(
)
.
getSimpleName
(
)
.
equals
(
"int"
)
)
;
CtType
<
?
>
b1
=
getTypeByName
(
originalModel
.
getAllTypes
(
)
,
"B"
)
;
CtMethod
<
?
>
method1
=
b1
.
getMethodsByName
(
"func"
)
.
get
(
0
)
;
CtStatement
stmt1
=
method1
.
getBody
(
)
.
getStatement
(
0
)
;
CtAssignment
<
?
,
?
>
assignment1
=
(
CtAssignment
<
?
,
?
>
)
stmt1
;
CtExpression
<
?
>
lhs1
=
assignment1
.
getAssigned
(
)
;
assertTrue
(
assignment1
.
getType
(
)
.
getSimpleName
(
)
.
equals
(
"int"
)
)
;
assertTrue
(
lhs1
.
getType
(
)
.
getSimpleName
(
)
.
equals
(
"int"
)
)
;
TimeUnit
.
MILLISECONDS
.
sleep
(
1000
)
;
FileUtils
.
copyFile
(
new
File
(
CHANGED_FILES_DIR
,
"C.java"
)
,
new
File
(
WORKING_DIR
,
"C.java"
)
,
true
)
;
FileUtils
.
touch
(
new
File
(
WORKING_DIR
,
"C.java"
)
)
;
IncrementalLauncher
launcher2
=
new
IncrementalLauncher
(
inputResources
,
sourceClasspath
,
CACHE_DIR
)
;
assertTrue
(
launcher2
.
changesPresent
(
)
)
;
CtModel
newModel
=
launcher2
.
buildModel
(
)
;
launcher2
.
saveCache
(
)
;
CtType
<
?
>
c2
=
getTypeByName
(
newModel
.
getAllTypes
(
)
,
"C"
)
;
assertTrue
(
c2
.
getField
(
"val"
)
.
getType
(
)
.
getSimpleName
(
)
.
equals
(
"float"
)
)
;
CtType
<
?
>
b2
=
getTypeByName
(
newModel
.
getAllTypes
(
)
,
"B"
)
;
CtMethod
<
?
>
method2
=
b2
.
getMethodsByName
(
"func"
)
.
get
(
0
)
;
CtStatement
stmt2
=
method2
.
getBody
(
)
.
getStatement
(
0
)
;
CtAssignment
<
?
,
?
>
assignment2
=
(
CtAssignment
<
?
,
?
>
)
stmt2
;
CtExpression
<
?
>
lhs2
=
assignment2
.
getAssigned
(
)
;
assertTrue
(
assignment2
.
getType
(
)
.
getSimpleName
(
)
.
equals
(
"float"
)
)
;
assertTrue
(
lhs2
.
getType
(
)
.
getSimpleName
(
)
.
equals
(
"float"
)
)
;
}
