@Test
public
void
testJava12MultipleCaseExpressions
(
)
{
String
code
=
"class A { public void f(int i) { int x; switch(i) { case 1,2,3 -> x = 10; case 4 -> x = 20; default -> x = 30; }; } }"
;
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setComplianceLevel
(
12
)
;
launcher
.
getEnvironment
(
)
.
setPreviewFeaturesEnabled
(
true
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
addInputResource
(
new
VirtualFile
(
code
)
)
;
CtModel
model
=
launcher
.
buildModel
(
)
;
CtType
<
?
>
classA
=
model
.
getAllTypes
(
)
.
stream
(
)
.
filter
(
c
->
c
.
getSimpleName
(
)
.
equals
(
"A"
)
)
.
findFirst
(
)
.
get
(
)
;
CtCase
caseA1
=
classA
.
getElements
(
new
TypeFilter
<
>
(
CtCase
.
class
)
)
.
get
(
0
)
;
CtCase
caseA2
=
classA
.
getElements
(
new
TypeFilter
<
>
(
CtCase
.
class
)
)
.
get
(
1
)
;
CtCase
caseA3
=
classA
.
getElements
(
new
TypeFilter
<
>
(
CtCase
.
class
)
)
.
get
(
2
)
;
assertEquals
(
3
,
caseA1
.
getCaseExpressions
(
)
.
size
(
)
)
;
assertEquals
(
"1"
,
caseA1
.
getCaseExpressions
(
)
.
get
(
0
)
.
toString
(
)
)
;
assertEquals
(
"2"
,
caseA1
.
getCaseExpressions
(
)
.
get
(
1
)
.
toString
(
)
)
;
assertEquals
(
"3"
,
caseA1
.
getCaseExpressions
(
)
.
get
(
2
)
.
toString
(
)
)
;
assertEquals
(
1
,
caseA2
.
getCaseExpressions
(
)
.
size
(
)
)
;
assertEquals
(
"4"
,
caseA2
.
getCaseExpressions
(
)
.
get
(
0
)
.
toString
(
)
)
;
assertEquals
(
0
,
caseA3
.
getCaseExpressions
(
)
.
size
(
)
)
;
assertEquals
(
"default ->    x = 30;"
,
toSingleLineString
(
caseA3
)
)
;
}
