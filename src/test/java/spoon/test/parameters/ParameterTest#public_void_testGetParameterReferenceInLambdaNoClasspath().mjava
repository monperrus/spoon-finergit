@Test
public
void
testGetParameterReferenceInLambdaNoClasspath
(
)
throws
Exception
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/resources/noclasspath/Tacos.java"
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
buildModel
(
)
;
CtMethod
<
?
>
ctMethod
=
launcher
.
getFactory
(
)
.
Type
(
)
.
get
(
"Tacos"
)
.
getMethodsByName
(
"setStarRatings"
)
.
get
(
0
)
;
CtParameter
ctParameter
=
ctMethod
.
getBody
(
)
.
getStatement
(
0
)
.
getElements
(
new
TypeFilter
<
CtParameter
>
(
CtParameter
.
class
)
{
@Override
public
boolean
matches
(
CtParameter
element
)
{
return
"entryPair"
.
equals
(
element
.
getSimpleName
(
)
)
&&
super
.
matches
(
element
)
;
}
}
)
.
get
(
0
)
;
assertNotNull
(
ctParameter
.
getReference
(
)
)
;
List
<
CtParameterReference
>
elements
=
ctMethod
.
getBody
(
)
.
getStatement
(
0
)
.
getElements
(
new
TypeFilter
<
CtParameterReference
>
(
CtParameterReference
.
class
)
{
@Override
public
boolean
matches
(
CtParameterReference
element
)
{
return
"entryPair"
.
equals
(
element
.
getSimpleName
(
)
)
&&
super
.
matches
(
element
)
;
}
}
)
;
assertEquals
(
2
,
elements
.
size
(
)
)
;
for
(
CtParameterReference
element
:
elements
)
{
assertEquals
(
ctParameter
,
element
.
getDeclaration
(
)
)
;
assertEquals
(
ctParameter
.
getReference
(
)
,
element
)
;
}
}
