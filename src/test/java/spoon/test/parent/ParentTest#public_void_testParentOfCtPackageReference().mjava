@Test
public
void
testParentOfCtPackageReference
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
setArgs
(
new
String
[
]
{
"--output-type"
,
"nooutput"
}
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
addInputResource
(
"./src/test/resources/reference-package"
)
;
launcher
.
run
(
)
;
final
CtType
<
Object
>
panini
=
launcher
.
getFactory
(
)
.
Type
(
)
.
get
(
"Panini"
)
;
CtElement
topLevelParent
=
panini
.
getPackage
(
)
.
getParent
(
)
;
assertNotNull
(
topLevelParent
)
;
assertEquals
(
CtPackage
.
TOP_LEVEL_PACKAGE_NAME
,
panini
.
getPackage
(
)
.
getSimpleName
(
)
)
;
CtPackage
pack1
=
factory
.
Package
(
)
.
getRootPackage
(
)
;
assertNotEquals
(
factory
,
launcher
.
getFactory
(
)
)
;
assertNotEquals
(
pack1
,
topLevelParent
)
;
final
CtTypeReference
<
?
>
burritos
=
panini
.
getReferences
(
new
ReferenceTypeFilter
<
CtTypeReference
<
?
>
>
(
CtTypeReference
.
class
)
{
@Override
public
boolean
matches
(
CtTypeReference
<
?
>
reference
)
{
return
"Burritos"
.
equals
(
reference
.
getSimpleName
(
)
)
&&
super
.
matches
(
reference
)
;
}
}
)
.
get
(
0
)
;
assertNotNull
(
burritos
.
getPackage
(
)
.
getParent
(
)
)
;
assertEquals
(
"com.awesome"
,
burritos
.
getPackage
(
)
.
getSimpleName
(
)
)
;
assertEquals
(
burritos
,
burritos
.
getPackage
(
)
.
getParent
(
)
)
;
}
