@Test
public
void
testBuilderMethod
(
)
{
equalsSet
(
new
CtPathBuilder
(
)
.
name
(
"spoon"
)
.
name
(
"test"
)
.
name
(
"path"
)
.
name
(
"testclasses"
)
.
name
(
"Foo"
)
.
type
(
CtMethod
.
class
)
.
build
(
)
,
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
getMethods
(
)
)
;
equalsSet
(
new
CtPathBuilder
(
)
.
name
(
"spoon"
)
.
name
(
"test"
)
.
name
(
"path"
)
.
name
(
"testclasses"
)
.
name
(
"Foo"
)
.
name
(
"bar"
)
.
build
(
)
,
new
HashSet
<
>
(
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
getMethodsByName
(
"bar"
)
)
)
;
equalsSet
(
new
CtPathBuilder
(
)
.
name
(
"spoon"
)
.
name
(
"test"
)
.
name
(
"path"
)
.
name
(
"testclasses"
)
.
name
(
"Foo"
)
.
name
(
"bar\\(int,.*?\\)"
)
.
build
(
)
,
new
HashSet
<
>
(
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
filterChildren
(
(
CtMethod
m
)
->
"bar(int,int)"
.
equals
(
m
.
getSignature
(
)
)
)
.
list
(
)
)
)
;
equalsSet
(
new
CtPathBuilder
(
)
.
name
(
"spoon"
)
.
name
(
"test"
)
.
name
(
"path"
)
.
name
(
"testclasses"
)
.
name
(
"Foo"
)
.
name
(
"(java.lang.String)"
)
.
build
(
)
,
new
HashSet
<
>
(
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
filterChildren
(
(
CtConstructor
c
)
->
"spoon.test.path.testclasses.Foo(java.lang.String)"
.
equals
(
c
.
getSignature
(
)
)
)
.
list
(
)
)
)
;
equalsSet
(
new
CtPathBuilder
(
)
.
name
(
"spoon"
)
.
name
(
"test"
)
.
name
(
"path"
)
.
name
(
"testclasses"
)
.
name
(
"Foo"
)
.
name
(
"()"
)
.
build
(
)
,
new
HashSet
<
>
(
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
filterChildren
(
(
CtConstructor
c
)
->
"spoon.test.path.testclasses.Foo()"
.
equals
(
c
.
getSignature
(
)
)
)
.
list
(
)
)
)
;
equalsSet
(
new
CtPathBuilder
(
)
.
name
(
"spoon"
)
.
name
(
"test"
)
.
name
(
"path"
)
.
name
(
"testclasses"
)
.
name
(
"Foo"
)
.
role
(
CtRole
.
CONSTRUCTOR
,
new
String
[
]
{
"signature"
,
"()"
}
)
.
build
(
)
,
new
HashSet
<
>
(
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
filterChildren
(
(
CtConstructor
c
)
->
"spoon.test.path.testclasses.Foo()"
.
equals
(
c
.
getSignature
(
)
)
)
.
list
(
)
)
)
;
equalsSet
(
new
CtPathStringBuilder
(
)
.
fromString
(
".spoon.test.path.testclasses.Foo/CtMethod"
)
,
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
getMethods
(
)
)
;
}
