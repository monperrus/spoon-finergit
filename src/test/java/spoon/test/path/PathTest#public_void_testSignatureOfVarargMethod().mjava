@Test
public
void
testSignatureOfVarargMethod
(
)
{
List
<
CtMethod
<
?
>
>
methods
=
factory
.
Type
(
)
.
get
(
"spoon.test.path.testclasses.Foo"
)
.
getMethodsByName
(
"processors"
)
;
{
CtMethod
<
?
>
method
=
methods
.
get
(
0
)
;
CtPath
path
=
method
.
getPath
(
)
;
assertEquals
(
"#subPackage[name=spoon]#subPackage[name=test]#subPackage[name=path]#subPackage[name=testclasses]#containedType[name=Foo]#method[signature=processors(java.lang.String,java.lang.String)]"
,
path
.
toString
(
)
)
;
CtPath
pathFromString
=
new
CtPathStringBuilder
(
)
.
fromString
(
path
.
toString
(
)
)
;
assertEquals
(
path
.
toString
(
)
,
pathFromString
.
toString
(
)
)
;
List
<
CtElement
>
result
=
pathFromString
.
evaluateOn
(
factory
.
getModel
(
)
.
getRootPackage
(
)
)
;
assertEquals
(
1
,
result
.
size
(
)
)
;
assertSame
(
method
,
result
.
get
(
0
)
)
;
}
{
CtMethod
<
?
>
method
=
methods
.
get
(
1
)
;
CtPath
path
=
method
.
getPath
(
)
;
assertEquals
(
"#subPackage[name=spoon]#subPackage[name=test]#subPackage[name=path]#subPackage[name=testclasses]#containedType[name=Foo]#method[signature=processors(java.lang.String[])]"
,
path
.
toString
(
)
)
;
CtPath
pathFromString
=
new
CtPathStringBuilder
(
)
.
fromString
(
path
.
toString
(
)
)
;
assertEquals
(
path
.
toString
(
)
,
pathFromString
.
toString
(
)
)
;
List
<
CtElement
>
result
=
pathFromString
.
evaluateOn
(
factory
.
getModel
(
)
.
getRootPackage
(
)
)
;
assertEquals
(
1
,
result
.
size
(
)
)
;
assertSame
(
method
,
result
.
get
(
0
)
)
;
}
}
