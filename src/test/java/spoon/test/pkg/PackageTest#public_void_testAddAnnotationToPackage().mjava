@Test
public
void
testAddAnnotationToPackage
(
)
throws
Exception
{
final
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addInputResource
(
"./src/test/java/spoon/test/pkg/testclasses/Foo.java"
)
;
spoon
.
getEnvironment
(
)
.
setAutoImports
(
true
)
;
spoon
.
buildModel
(
)
;
CtAnnotationType
annotationType
=
(
CtAnnotationType
)
spoon
.
getFactory
(
)
.
Annotation
(
)
.
get
(
GlobalAnnotation
.
class
)
;
CtAnnotation
annotation
=
spoon
.
getFactory
(
)
.
Core
(
)
.
createAnnotation
(
)
;
annotation
.
setAnnotationType
(
annotationType
.
getReference
(
)
)
;
CtPackage
ctPackage
=
spoon
.
getFactory
(
)
.
Package
(
)
.
get
(
"spoon.test.pkg.testclasses"
)
;
ctPackage
.
addAnnotation
(
annotation
)
;
File
outputDir
=
new
File
(
"./target/spoon-packageinfo"
)
;
JavaOutputProcessor
outputProcessor
=
spoon
.
createOutputWriter
(
outputDir
,
spoon
.
getEnvironment
(
)
)
;
outputProcessor
.
process
(
ctPackage
)
;
File
packageInfo
=
new
File
(
outputDir
,
"spoon/test/pkg/testclasses/package-info.java"
)
;
assertTrue
(
packageInfo
.
exists
(
)
)
;
canBeBuilt
(
packageInfo
,
8
)
;
List
<
String
>
lines
=
Files
.
readAllLines
(
packageInfo
.
toPath
(
)
)
;
assertFalse
(
lines
.
isEmpty
(
)
)
;
for
(
String
s
:
lines
)
{
if
(
s
.
trim
(
)
.
startsWith
(
"import"
)
)
{
assertEquals
(
"import spoon.test.annotation.testclasses.GlobalAnnotation;"
,
s
.
trim
(
)
)
;
}
if
(
s
.
trim
(
)
.
startsWith
(
"@"
)
)
{
assertEquals
(
"@GlobalAnnotation"
,
s
.
trim
(
)
)
;
}
}
}
