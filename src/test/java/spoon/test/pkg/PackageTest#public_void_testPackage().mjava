@Test
public
void
testPackage
(
)
throws
Exception
{
final
String
classFilePath
=
"./src/test/java/spoon/test/pkg/name/PackageTestClass.java"
;
final
String
packageInfoFilePath
=
"./src/test/java/spoon/test/pkg/package-info.java"
;
final
File
packageInfoFile
=
new
File
(
packageInfoFilePath
)
;
Launcher
spoon
=
new
Launcher
(
)
;
Factory
factory
=
spoon
.
createFactory
(
)
;
factory
.
getEnvironment
(
)
.
setCommentEnabled
(
true
)
;
spoon
.
createCompiler
(
factory
,
SpoonResourceHelper
.
resources
(
classFilePath
,
packageInfoFilePath
)
)
.
build
(
)
;
CtClass
<
?
>
clazz
=
factory
.
Class
(
)
.
get
(
PackageTestClass
.
class
)
;
assertSame
(
PackageTestClass
.
class
,
clazz
.
getActualClass
(
)
)
;
CtPackage
ctPackage
=
clazz
.
getPackage
(
)
;
assertEquals
(
"spoon.test.pkg.name"
,
ctPackage
.
getQualifiedName
(
)
)
;
assertEquals
(
""
,
ctPackage
.
getDocComment
(
)
)
;
assertTrue
(
CtPackage
.
class
.
isAssignableFrom
(
ctPackage
.
getParent
(
)
.
getClass
(
)
)
)
;
assertFalse
(
ctPackage
.
hasPackageInfo
(
)
)
;
assertFalse
(
ctPackage
.
isEmpty
(
)
)
;
ctPackage
=
(
CtPackage
)
ctPackage
.
getParent
(
)
;
assertEquals
(
"spoon.test.pkg"
,
ctPackage
.
getQualifiedName
(
)
)
;
assertNotNull
(
ctPackage
.
getPosition
(
)
)
;
assertEquals
(
packageInfoFile
.
getCanonicalPath
(
)
,
ctPackage
.
getPosition
(
)
.
getFile
(
)
.
getCanonicalPath
(
)
)
;
assertEquals
(
1
,
ctPackage
.
getPosition
(
)
.
getLine
(
)
)
;
assertEquals
(
0
,
ctPackage
.
getPosition
(
)
.
getSourceStart
(
)
)
;
assertEquals
(
71
,
ctPackage
.
getPosition
(
)
.
getSourceEnd
(
)
)
;
assertEquals
(
1
,
ctPackage
.
getAnnotations
(
)
.
size
(
)
)
;
assertEquals
(
"This is test\nJavaDoc."
,
ctPackage
.
getComments
(
)
.
get
(
0
)
.
getContent
(
)
)
;
assertTrue
(
ctPackage
.
hasPackageInfo
(
)
)
;
CtAnnotation
<
?
>
annotation
=
ctPackage
.
getAnnotations
(
)
.
get
(
0
)
;
assertSame
(
Deprecated
.
class
,
annotation
.
getAnnotationType
(
)
.
getActualClass
(
)
)
;
assertEquals
(
packageInfoFile
.
getCanonicalPath
(
)
,
annotation
.
getPosition
(
)
.
getFile
(
)
.
getCanonicalPath
(
)
)
;
assertEquals
(
5
,
annotation
.
getPosition
(
)
.
getLine
(
)
)
;
assertTrue
(
CtPackage
.
class
.
isAssignableFrom
(
ctPackage
.
getParent
(
)
.
getClass
(
)
)
)
;
ctPackage
=
(
CtPackage
)
ctPackage
.
getParent
(
)
;
assertEquals
(
"spoon.test"
,
ctPackage
.
getQualifiedName
(
)
)
;
assertEquals
(
""
,
ctPackage
.
getDocComment
(
)
)
;
assertTrue
(
factory
.
createPackage
(
)
.
isEmpty
(
)
)
;
}
