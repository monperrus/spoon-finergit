@Test
public
void
testNestedLabels
(
)
throws
Exception
{
final
Factory
build
=
build
(
FooLabel
.
class
)
;
final
CtType
<
FooLabel
>
foo
=
build
.
Type
(
)
.
get
(
FooLabel
.
class
)
;
String
classContent
=
getClassContent
(
foo
)
;
{
CtStatement
stmt
=
foo
.
getMethodsByName
(
"m2"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
0
)
;
assertTrue
(
stmt
instanceof
CtBlock
)
;
assertFalse
(
stmt
.
isImplicit
(
)
)
;
assertEquals
(
"label1: {label2: while(x);}"
,
contentAtPosition
(
classContent
,
stmt
.
getPosition
(
)
)
)
;
assertEquals
(
"label2: while(x);"
,
contentAtPosition
(
classContent
,
(
(
CtBlock
)
stmt
)
.
getStatement
(
0
)
.
getPosition
(
)
)
)
;
}
{
CtStatement
stmt
=
foo
.
getMethodsByName
(
"m2"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
1
)
;
assertTrue
(
stmt
instanceof
CtBlock
)
;
assertTrue
(
stmt
.
isImplicit
(
)
)
;
assertEquals
(
"label1: label2: while(x);"
,
contentAtPosition
(
classContent
,
stmt
.
getPosition
(
)
)
)
;
assertEquals
(
"label2: while(x);"
,
contentAtPosition
(
classContent
,
(
(
CtBlock
)
stmt
)
.
getStatement
(
0
)
.
getPosition
(
)
)
)
;
}
{
CtStatementList
stmts
=
(
(
CtSwitch
<
?
>
)
foo
.
getMethodsByName
(
"m5"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
0
)
)
.
getCases
(
)
.
get
(
0
)
;
CtStatement
labelledEmtpyStatement
=
stmts
.
getStatement
(
0
)
;
assertTrue
(
labelledEmtpyStatement
instanceof
CtBlock
)
;
assertTrue
(
labelledEmtpyStatement
.
isImplicit
(
)
)
;
assertEquals
(
"label:;"
,
contentAtPosition
(
classContent
,
labelledEmtpyStatement
.
getPosition
(
)
)
)
;
CtStatement
multiLatbelledStatement
=
stmts
.
getStatement
(
1
)
;
assertTrue
(
multiLatbelledStatement
instanceof
CtBlock
)
;
assertTrue
(
multiLatbelledStatement
.
isImplicit
(
)
)
;
assertEquals
(
"laval3: label1: label2: while(true);"
,
contentAtPosition
(
classContent
,
multiLatbelledStatement
.
getPosition
(
)
)
)
;
}
{
CtWhile
stmt1
=
(
CtWhile
)
foo
.
getMethodsByName
(
"m6"
)
.
get
(
0
)
.
getBody
(
)
.
getStatement
(
0
)
;
assertEquals
(
"labelW"
,
stmt1
.
getLabel
(
)
)
;
CtTry
stmt2
=
(
(
CtBlock
)
stmt1
.
getBody
(
)
)
.
getStatement
(
0
)
;
assertNull
(
stmt2
.
getLabel
(
)
)
;
assertEquals
(
"try { label2: while(true); } finally {}"
,
contentAtPosition
(
classContent
,
stmt2
.
getPosition
(
)
)
)
;
CtWhile
stmt3
=
stmt2
.
getBody
(
)
.
getStatement
(
0
)
;
assertEquals
(
"label2"
,
stmt3
.
getLabel
(
)
)
;
assertEquals
(
"label2: while(true);"
,
contentAtPosition
(
classContent
,
stmt3
.
getPosition
(
)
)
)
;
}
}
