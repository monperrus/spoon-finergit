@Test
public
void
testNoClasspathVariableAccessInInnerClass1
(
)
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/resources/noclasspath/lambdas/InheritedClassesWithLambda1.java"
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
CtModel
model
=
launcher
.
buildModel
(
)
;
List
<
CtClass
>
allClasses
=
model
.
getElements
(
new
TypeFilter
<
>
(
CtClass
.
class
)
)
;
assertEquals
(
3
,
allClasses
.
size
(
)
)
;
CtClass
failing
=
allClasses
.
stream
(
)
.
filter
(
t
->
t
.
getSimpleName
(
)
.
equals
(
"Failing"
)
)
.
findFirst
(
)
.
get
(
)
;
assertEquals
(
"InheritedClassesWithLambda1.java"
,
failing
.
getPosition
(
)
.
getFile
(
)
.
getName
(
)
)
;
assertEquals
(
11
,
failing
.
getPosition
(
)
.
getLine
(
)
)
;
CtLambda
lambda
=
model
.
getElements
(
new
TypeFilter
<
>
(
CtLambda
.
class
)
)
.
get
(
0
)
;
CtFieldRead
field
=
(
CtFieldRead
)
(
(
(
CtInvocation
)
lambda
.
getExpression
(
)
)
.
getTarget
(
)
)
;
assertEquals
(
"com.pkg.InheritedClassesWithLambda1.Failing"
,
field
.
getVariable
(
)
.
getDeclaringType
(
)
.
toString
(
)
)
;
}
