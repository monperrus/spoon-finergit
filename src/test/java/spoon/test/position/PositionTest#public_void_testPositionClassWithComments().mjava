@Test
public
void
testPositionClassWithComments
(
)
{
final
Factory
build
=
build
(
new
File
(
"src/test/java/spoon/test/position/testclasses/"
)
)
;
final
CtType
<
FooClazzWithComments
>
foo
=
build
.
Type
(
)
.
get
(
FooClazzWithComments
.
class
)
;
String
classContent
=
getClassContent
(
foo
)
;
BodyHolderSourcePosition
position
=
(
BodyHolderSourcePosition
)
foo
.
getPosition
(
)
;
assertEquals
(
42
,
position
.
getSourceStart
(
)
)
;
assertEquals
(
132
,
position
.
getSourceEnd
(
)
)
;
assertEquals
(
"/*c1*/\n"
+
"//lc1\n"
+
"public /*c2*/\n"
+
"//lc2 /*\n"
+
"class \n"
+
"// */\n"
+
"/*c3 class // */\n"
+
"FooClazzWithComments {\n"
+
"\n"
+
"}"
,
contentAtPosition
(
classContent
,
position
)
)
;
assertEquals
(
"{\n\n}"
,
contentAtPosition
(
classContent
,
position
.
getBodyStart
(
)
,
position
.
getBodyEnd
(
)
)
)
;
final
CtType
<
FooClazz
>
foo2
=
build
.
Type
(
)
.
get
(
FooClazz2
.
class
)
;
assertEquals
(
42
,
foo2
.
getPosition
(
)
.
getSourceStart
(
)
)
;
assertEquals
(
4
,
foo2
.
getPosition
(
)
.
getLine
(
)
)
;
assertEquals
(
4
,
foo2
.
getPosition
(
)
.
getEndLine
(
)
)
;
assertEquals
(
"FooClazzWithComments"
,
contentAtPosition
(
classContent
,
position
.
getNameStart
(
)
,
position
.
getNameEnd
(
)
)
)
;
assertEquals
(
"/*c1*/\n"
+
"//lc1\n"
+
"public"
,
contentAtPosition
(
classContent
,
position
.
getModifierSourceStart
(
)
,
position
.
getModifierSourceEnd
(
)
)
)
;
}
