@Test
public
void
testSourceFragmentsOfCompilationUnit
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
false
)
;
launcher
.
getEnvironment
(
)
.
setCommentEnabled
(
true
)
;
SpoonModelBuilder
comp
=
launcher
.
createCompiler
(
)
;
comp
.
addInputSources
(
SpoonResourceHelper
.
resources
(
"./src/test/java/"
+
FooSourceFragments
.
class
.
getName
(
)
.
replace
(
'.'
,
'/'
)
+
".java"
)
)
;
comp
.
build
(
)
;
Factory
f
=
comp
.
getFactory
(
)
;
final
CtType
<
?
>
foo
=
f
.
Type
(
)
.
get
(
FooSourceFragments
.
class
)
;
CtCompilationUnit
compilationUnit
=
foo
.
getPosition
(
)
.
getCompilationUnit
(
)
;
ElementSourceFragment
fragment
=
compilationUnit
.
getOriginalSourceFragment
(
)
;
List
<
SourceFragment
>
children
=
fragment
.
getChildrenFragments
(
)
;
assertEquals
(
11
,
children
.
size
(
)
)
;
assertEquals
(
"/**\n"
+
" * Javadoc at top of file\n"
+
" */"
,
children
.
get
(
0
)
.
getSourceCode
(
)
)
;
assertEquals
(
"\n"
,
children
.
get
(
1
)
.
getSourceCode
(
)
)
;
assertEquals
(
"/* comment before package declaration*/\n"
+
"package spoon.test.position.testclasses;"
,
children
.
get
(
2
)
.
getSourceCode
(
)
)
;
assertEquals
(
"\n\n"
,
children
.
get
(
3
)
.
getSourceCode
(
)
)
;
assertEquals
(
"/*\n"
+
" * Comment before import\n"
+
" */\n"
+
"import java.lang.Deprecated;"
,
children
.
get
(
4
)
.
getSourceCode
(
)
)
;
assertEquals
(
"\n\n"
,
children
.
get
(
5
)
.
getSourceCode
(
)
)
;
assertEquals
(
"import java.lang.Class;"
,
children
.
get
(
6
)
.
getSourceCode
(
)
)
;
assertEquals
(
"\n\n"
,
children
.
get
(
7
)
.
getSourceCode
(
)
)
;
assertTrue
(
(
(
ElementSourceFragment
)
children
.
get
(
8
)
)
.
getElement
(
)
instanceof
CtClass
)
;
assertStartsWith
(
"/*\n"
+
" * Comment before type\n"
+
" */\n"
+
"public class FooSourceFragments"
,
children
.
get
(
8
)
.
getSourceCode
(
)
)
;
assertEndsWith
(
"//after last type member\n}"
,
children
.
get
(
8
)
.
getSourceCode
(
)
)
;
assertEquals
(
"\n\n"
,
children
.
get
(
9
)
.
getSourceCode
(
)
)
;
assertEquals
(
"//comment at the end of file"
,
children
.
get
(
10
)
.
getSourceCode
(
)
)
;
}
