@Test
public
void
testSourceFragmentsOfFieldAccess
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
false
)
;
launcher
.
getEnvironment
(
)
.
setCommentEnabled
(
true
)
;
SpoonModelBuilder
comp
=
launcher
.
createCompiler
(
)
;
comp
.
addInputSources
(
SpoonResourceHelper
.
resources
(
"./src/test/java/"
+
FooField
.
class
.
getName
(
)
.
replace
(
'.'
,
'/'
)
+
".java"
)
)
;
comp
.
build
(
)
;
Factory
f
=
comp
.
getFactory
(
)
;
final
CtType
<
?
>
foo
=
f
.
Type
(
)
.
get
(
FooField
.
class
)
;
CtAssignment
<
?
,
?
>
assignment
=
(
CtAssignment
<
?
,
?
>
)
foo
.
getMethodsByName
(
"m"
)
.
get
(
0
)
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
;
CtFieldWrite
<
?
>
fieldWrite
=
(
CtFieldWrite
<
?
>
)
assignment
.
getAssigned
(
)
;
CtFieldReference
<
?
>
fieldRef
=
fieldWrite
.
getVariable
(
)
;
CtFieldRead
<
?
>
fieldRead
=
(
CtFieldRead
<
?
>
)
fieldWrite
.
getTarget
(
)
;
CtFieldReference
<
?
>
fieldRef2
=
fieldRead
.
getVariable
(
)
;
ElementSourceFragment
fieldWriteSF
=
fieldWrite
.
getOriginalSourceFragment
(
)
;
List
<
SourceFragment
>
children
=
fieldWriteSF
.
getChildrenFragments
(
)
;
assertEquals
(
3
,
children
.
size
(
)
)
;
assertEquals
(
"FooField.f"
,
children
.
get
(
0
)
.
getSourceCode
(
)
)
;
assertEquals
(
"."
,
children
.
get
(
1
)
.
getSourceCode
(
)
)
;
assertEquals
(
"field2"
,
children
.
get
(
2
)
.
getSourceCode
(
)
)
;
List
<
SourceFragment
>
children2
=
(
(
ElementSourceFragment
)
children
.
get
(
0
)
)
.
getChildrenFragments
(
)
;
assertEquals
(
3
,
children2
.
size
(
)
)
;
assertEquals
(
"FooField"
,
children2
.
get
(
0
)
.
getSourceCode
(
)
)
;
assertEquals
(
"."
,
children2
.
get
(
1
)
.
getSourceCode
(
)
)
;
assertEquals
(
"f"
,
children2
.
get
(
2
)
.
getSourceCode
(
)
)
;
}
