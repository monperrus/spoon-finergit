@Test
public
void
testSourceFragmentsOfNewAnnonymousClass
(
)
throws
Exception
{
final
CtType
<
?
>
type
=
ModelUtils
.
buildClass
(
AnnonymousClassNewIface
.
class
)
;
CtLocalVariable
<
?
>
locVar
=
(
CtLocalVariable
<
?
>
)
type
.
getMethodsByName
(
"m"
)
.
get
(
0
)
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
;
CtNewClass
<
?
>
newClass
=
(
CtNewClass
<
?
>
)
locVar
.
getDefaultExpression
(
)
;
{
ElementSourceFragment
newClassSF
=
newClass
.
getOriginalSourceFragment
(
)
;
List
<
SourceFragment
>
children
=
newClassSF
.
getChildrenFragments
(
)
;
assertEquals
(
7
,
children
.
size
(
)
)
;
assertEquals
(
"new"
,
children
.
get
(
0
)
.
getSourceCode
(
)
)
;
assertEquals
(
" "
,
children
.
get
(
1
)
.
getSourceCode
(
)
)
;
assertEquals
(
"Consumer<Set<?>>"
,
children
.
get
(
2
)
.
getSourceCode
(
)
)
;
assertEquals
(
"("
,
children
.
get
(
3
)
.
getSourceCode
(
)
)
;
assertEquals
(
")"
,
children
.
get
(
4
)
.
getSourceCode
(
)
)
;
assertEquals
(
" "
,
children
.
get
(
5
)
.
getSourceCode
(
)
)
;
assertEquals
(
"{"
+
"			@Override"
+
"			public void accept(Set<?> t) {"
+
"			}"
+
"		}"
,
children
.
get
(
6
)
.
getSourceCode
(
)
.
replaceAll
(
"\\r|\\n"
,
""
)
)
;
}
{
ElementSourceFragment
typeSourceFragment
=
newClass
.
getExecutable
(
)
.
getType
(
)
.
getOriginalSourceFragment
(
)
;
assertEquals
(
"Consumer<Set<?>>"
,
typeSourceFragment
.
getSourceCode
(
)
)
;
}
{
ElementSourceFragment
newAnnClassSF
=
newClass
.
getAnonymousClass
(
)
.
getOriginalSourceFragment
(
)
;
List
<
SourceFragment
>
children
=
newAnnClassSF
.
getChildrenFragments
(
)
;
assertEquals
(
5
,
children
.
size
(
)
)
;
assertEquals
(
"{"
,
children
.
get
(
0
)
.
getSourceCode
(
)
)
;
assertEquals
(
"			"
,
children
.
get
(
1
)
.
getSourceCode
(
)
.
replaceAll
(
"\\r|\\n"
,
""
)
)
;
assertEquals
(
"@Override"
+
"			public void accept(Set<?> t) {"
+
"			}"
,
children
.
get
(
2
)
.
getSourceCode
(
)
.
replaceAll
(
"\\r|\\n"
,
""
)
)
;
assertEquals
(
"		"
,
children
.
get
(
3
)
.
getSourceCode
(
)
.
replaceAll
(
"\\r|\\n"
,
""
)
)
;
assertEquals
(
"}"
,
children
.
get
(
4
)
.
getSourceCode
(
)
)
;
}
}
