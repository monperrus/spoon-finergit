@Test
public
void
testIdenticalPrettyPrinter
(
)
throws
Exception
{
String
[
]
options
=
{
"--output-type"
,
"compilationunits"
,
"--output"
,
"target/testIdenticalPrettyPrinter"
,
"--enable-comments"
,
"--lines"
,
"--with-imports"
}
;
List
<
String
>
paths
=
new
ArrayList
<
>
(
)
;
paths
.
add
(
"spoon/test/prettyprinter/testclasses/A.java"
)
;
paths
.
add
(
"spoon/test/prettyprinter/testclasses/AClass.java"
)
;
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
setArgs
(
options
)
;
for
(
String
path
:
paths
)
{
launcher
.
addInputResource
(
"./src/test/java/"
+
path
)
;
}
launcher
.
run
(
)
;
final
Launcher
launcher2
=
new
Launcher
(
)
;
launcher2
.
setArgs
(
options
)
;
for
(
String
path
:
paths
)
{
launcher2
.
addInputResource
(
"./target/testIdenticalPrettyPrinter/"
+
path
)
;
}
launcher2
.
run
(
)
;
int
n
=
0
;
List
<
CtElement
>
elements
=
launcher
.
getModel
(
)
.
getElements
(
new
TypeFilter
<
>
(
CtElement
.
class
)
)
;
for
(
int
i
=
0
;
i
<
elements
.
size
(
)
;
i
++
)
{
n
++
;
CtElement
e
=
elements
.
get
(
i
)
;
CtElement
el2
=
launcher2
.
getModel
(
)
.
getElements
(
new
TypeFilter
<
>
(
CtElement
.
class
)
)
.
get
(
i
)
;
assertNotSame
(
e
,
el2
)
;
assertEquals
(
e
.
toString
(
)
+
" not handled"
,
e
.
getPosition
(
)
.
getLine
(
)
,
el2
.
getPosition
(
)
.
getLine
(
)
)
;
assertEquals
(
e
.
toString
(
)
+
" not handled"
,
e
.
getPosition
(
)
.
getEndLine
(
)
,
el2
.
getPosition
(
)
.
getEndLine
(
)
)
;
}
assertTrue
(
n
>
20
)
;
}
