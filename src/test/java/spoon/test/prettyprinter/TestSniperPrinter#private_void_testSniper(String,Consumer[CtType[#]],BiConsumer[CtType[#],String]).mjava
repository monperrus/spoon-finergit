/** 
 * 1) Runs spoon using sniper mode, 2) runs `typeChanger` to modify the code, 3) runs `resultChecker` to check if sources printed by sniper printer are as expected
 * @param testClass a file system path to test class
 * @param transformation a code which changes the Spoon model
 * @param resultChecker a code which checks that printed sources are as expected
 */
private
void
testSniper
(
String
testClass
,
Consumer
<
CtType
<
?
>
>
transformation
,
BiConsumer
<
CtType
<
?
>
,
String
>
resultChecker
)
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
getResourcePath
(
testClass
)
)
;
launcher
.
getEnvironment
(
)
.
setPrettyPrinterCreator
(
(
)
->
{
SniperJavaPrettyPrinter
printer
=
new
SniperJavaPrettyPrinter
(
launcher
.
getEnvironment
(
)
)
;
printer
.
setPreprocessors
(
Collections
.
unmodifiableList
(
Arrays
.
asList
(
new
ImportCleaner
(
)
.
setCanAddImports
(
false
)
,
new
ImportConflictDetector
(
)
,
new
ImportCleaner
(
)
)
)
)
;
return
printer
;
}
)
;
launcher
.
buildModel
(
)
;
Factory
f
=
launcher
.
getFactory
(
)
;
final
CtClass
<
?
>
ctClass
=
f
.
Class
(
)
.
get
(
testClass
)
;
transformation
.
accept
(
ctClass
)
;
launcher
.
prettyprint
(
)
;
resultChecker
.
accept
(
ctClass
,
getContentOfPrettyPrintedClassFromDisk
(
ctClass
)
)
;
}
