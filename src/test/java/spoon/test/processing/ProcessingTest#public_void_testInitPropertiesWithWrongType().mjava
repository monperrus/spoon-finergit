@Test
public
void
testInitPropertiesWithWrongType
(
)
{
class
AProcessor
extends
AbstractManualProcessor
{
@Property
String
aString
;
@Property
int
anInt
;
@Property
Object
anObject
;
@Override
public
void
process
(
)
{
}
}
;
AProcessor
p
=
new
AProcessor
(
)
;
Launcher
launcher
=
new
Launcher
(
)
;
p
.
setFactory
(
launcher
.
getFactory
(
)
)
;
ProcessorProperties
props
=
new
ProcessorPropertiesImpl
(
)
;
props
.
set
(
"aString"
,
"foo"
)
;
props
.
set
(
"anObject"
,
"foo"
)
;
props
.
set
(
"anInt"
,
"foo"
)
;
try
{
ProcessorUtils
.
initProperties
(
p
,
props
)
;
fail
(
)
;
}
catch
(
SpoonException
e
)
{
assertTrue
(
e
.
getMessage
(
)
.
contains
(
"anInt"
)
)
;
}
assertEquals
(
"foo"
,
p
.
aString
)
;
assertEquals
(
0
,
p
.
anInt
)
;
assertNull
(
p
.
anObject
)
;
}
