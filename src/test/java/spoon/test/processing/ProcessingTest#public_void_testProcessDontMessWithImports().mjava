@Test
public
void
testProcessDontMessWithImports
(
)
throws
IOException
{
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
false
)
;
launcher
.
getEnvironment
(
)
.
setAutoImports
(
true
)
;
launcher
.
addInputResource
(
"src/test/resources/spoon/test/processor/test"
)
;
File
tempDir
=
new
File
(
"target/testprocess"
)
;
launcher
.
setSourceOutputDirectory
(
tempDir
)
;
launcher
.
addProcessor
(
new
RenameProcessor
(
"A"
,
"D"
)
)
;
launcher
.
run
(
)
;
File
Dfile
=
new
File
(
tempDir
,
"spoon/test/processing/testclasses/test/sub/D.java"
)
;
assertTrue
(
Dfile
.
exists
(
)
)
;
File
Bfile
=
new
File
(
tempDir
,
"spoon/test/processing/testclasses/test/B.java"
)
;
assertTrue
(
Bfile
.
exists
(
)
)
;
String
fileContent
=
StringUtils
.
join
(
Files
.
readLines
(
Bfile
,
Charset
.
defaultCharset
(
)
)
,
"\n"
)
;
assertFalse
(
fileContent
.
contains
(
"import spoon.test.processing.testclasses.test.sub.A;"
)
)
;
assertTrue
(
fileContent
.
contains
(
"import spoon.test.processing.testclasses.test.sub.D;"
)
)
;
assertTrue
(
fileContent
.
contains
(
"private D a = new D();"
)
)
;
}
