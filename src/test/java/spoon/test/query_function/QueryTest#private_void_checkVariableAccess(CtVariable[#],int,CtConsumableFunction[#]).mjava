private
void
checkVariableAccess
(
CtVariable
<
?
>
var
,
int
value
,
CtConsumableFunction
<
?
>
query
)
{
class
Context
{
int
classCount
=
0
;
int
realCount
=
0
;
int
expectedCount
=
0
;
Set
<
String
>
unique
=
new
HashSet
<
>
(
)
;
}
Context
context
=
new
Context
(
)
;
var
.
map
(
query
)
.
forEach
(
(
CtVariableReference
<
?
>
fr
)
->
{
assertEquals
(
value
,
getVariableReferenceValue
(
fr
)
)
;
context
.
realCount
++
;
}
)
;
factory
.
Package
(
)
.
getRootPackage
(
)
.
filterChildren
(
(
CtElement
e
)
->
{
if
(
e
instanceof
CtType
)
{
context
.
classCount
++
;
}
if
(
e
instanceof
CtVariableReference
)
{
CtVariableReference
<
?
>
fr
=
(
CtVariableReference
<
?
>
)
e
;
if
(
"field"
.
equals
(
fr
.
getSimpleName
(
)
)
==
false
)
{
return
false
;
}
int
refValue
=
getVariableReferenceValue
(
fr
)
;
if
(
refValue
<
0
)
{
fail
(
)
;
}
if
(
refValue
==
value
)
{
context
.
expectedCount
++
;
}
}
return
false
;
}
)
.
list
(
)
;
assertEquals
(
"field="
+
value
,
context
.
expectedCount
,
context
.
realCount
)
;
System
.
out
.
println
(
"field="
+
value
+
" found "
+
context
.
realCount
+
" referenes"
)
;
}
