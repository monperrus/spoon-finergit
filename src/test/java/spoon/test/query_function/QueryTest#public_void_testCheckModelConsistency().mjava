@Test
public
void
testCheckModelConsistency
(
)
{
new
ClassA
(
)
;
class
Context
{
int
classCount
=
0
;
Map
<
Integer
,
CtElement
>
unique
=
new
HashMap
<
>
(
)
;
}
Context
context
=
new
Context
(
)
;
factory
.
Package
(
)
.
getRootPackage
(
)
.
filterChildren
(
(
CtElement
e
)
->
{
if
(
e
instanceof
CtType
)
{
context
.
classCount
++
;
}
if
(
e
instanceof
CtVariable
)
{
CtVariable
<
?
>
var
=
(
CtVariable
<
?
>
)
e
;
if
(
"field"
.
equals
(
var
.
getSimpleName
(
)
)
==
false
)
{
return
false
;
}
Integer
val
=
getLiteralValue
(
var
)
;
CtElement
ambiquous
=
context
.
unique
.
put
(
val
,
var
)
;
if
(
ambiquous
!=
null
)
{
fail
(
"Two variables ["
+
ambiquous
.
toString
(
)
+
","
+
var
.
toString
(
)
+
"] has same value"
)
;
}
}
return
false
;
}
)
.
list
(
)
;
assertEquals
(
countOfModelClasses
,
context
.
classCount
)
;
}
