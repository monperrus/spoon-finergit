void
m
(
)
{
assertTrue
(
field
==
0
)
;
assertTrue
(
this
.
field
==
0
)
;
assertTrue
(
this
.
field
==
0
)
;
assertTrue
(
this
.
c1
.
field
==
3
)
;
assertTrue
(
this
.
c2
.
field
==
9
)
;
assertTrue
(
this
.
c3
.
field
==
10
)
;
assertTrue
(
this
.
c4
.
field
==
11
)
;
{
int
field
=
15
;
assertTrue
(
field
==
15
)
;
}
try
{
int
field
=
16
;
assertTrue
(
field
==
16
)
;
throw
new
IllegalArgumentException
(
)
;
}
catch
(
IllegalArgumentException
e
)
{
int
field
=
17
;
assertTrue
(
field
==
17
)
;
}
catch
(
Exception
field
)
{
field
.
getMessage
(
)
;
}
while
(
true
)
{
int
field
=
18
;
assertTrue
(
field
==
18
)
;
break
;
}
switch
(
7
)
{
case
7
:
int
field
=
19
;
assertTrue
(
field
==
19
)
;
break
;
}
{
int
field
=
22
;
assertTrue
(
field
==
22
)
;
{
assertTrue
(
field
==
22
)
;
assertTrue
(
this
.
field
==
0
)
;
assertTrue
(
this
.
field
==
0
)
;
assertTrue
(
this
.
c1
.
field
==
3
)
;
assertTrue
(
this
.
c2
.
field
==
9
)
;
assertTrue
(
this
.
c3
.
field
==
10
)
;
assertTrue
(
this
.
c4
.
field
==
11
)
;
}
}
int
field
=
20
;
assertTrue
(
field
==
20
)
;
{
assertTrue
(
field
==
20
)
;
assertTrue
(
this
.
field
==
0
)
;
assertTrue
(
this
.
field
==
0
)
;
assertTrue
(
this
.
c1
.
field
==
3
)
;
assertTrue
(
this
.
c2
.
field
==
9
)
;
assertTrue
(
this
.
c3
.
field
==
10
)
;
assertTrue
(
this
.
c4
.
field
==
11
)
;
}
}
