void
m
(
)
{
assertTrue
(
field
==
100
)
;
assertTrue
(
this
.
field
==
100
)
;
assertTrue
(
this
.
field
==
100
)
;
assertTrue
(
this
.
c1
.
field
==
103
)
;
assertTrue
(
this
.
c2
.
field
==
109
)
;
assertTrue
(
this
.
c3
.
field
==
110
)
;
assertTrue
(
this
.
c4
.
field
==
111
)
;
{
int
field
=
115
;
assertTrue
(
field
==
115
)
;
}
try
{
int
field
=
116
;
assertTrue
(
field
==
116
)
;
throw
new
IllegalArgumentException
(
)
;
}
catch
(
IllegalArgumentException
e
)
{
int
field
=
117
;
assertTrue
(
field
==
117
)
;
}
catch
(
Exception
field
)
{
field
.
getMessage
(
)
;
}
while
(
true
)
{
int
field
=
118
;
assertTrue
(
field
==
118
)
;
break
;
}
switch
(
7
)
{
case
7
:
int
field
=
119
;
assertTrue
(
field
==
119
)
;
break
;
}
{
int
field
=
122
;
assertTrue
(
field
==
122
)
;
{
assertTrue
(
field
==
122
)
;
assertTrue
(
this
.
field
==
100
)
;
assertTrue
(
this
.
field
==
100
)
;
assertTrue
(
this
.
c1
.
field
==
103
)
;
assertTrue
(
this
.
c2
.
field
==
109
)
;
assertTrue
(
this
.
c3
.
field
==
110
)
;
assertTrue
(
this
.
c4
.
field
==
111
)
;
}
}
int
field
=
120
;
assertTrue
(
field
==
120
)
;
{
assertTrue
(
field
==
120
)
;
assertTrue
(
this
.
field
==
100
)
;
assertTrue
(
this
.
field
==
100
)
;
assertTrue
(
this
.
c1
.
field
==
103
)
;
assertTrue
(
this
.
c2
.
field
==
109
)
;
assertTrue
(
this
.
c3
.
field
==
110
)
;
assertTrue
(
this
.
c4
.
field
==
111
)
;
}
}
