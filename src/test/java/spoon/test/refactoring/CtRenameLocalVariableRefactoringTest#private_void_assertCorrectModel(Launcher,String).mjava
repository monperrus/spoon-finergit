private
void
assertCorrectModel
(
Launcher
launcher
,
String
refactoringDescription
)
{
File
outputBinDirectory
=
new
File
(
"./target/spooned-refactoring-test"
)
;
if
(
!
outputBinDirectory
.
exists
(
)
)
{
outputBinDirectory
.
mkdirs
(
)
;
}
launcher
.
setBinaryOutputDirectory
(
outputBinDirectory
)
;
launcher
.
setSourceOutputDirectory
(
outputBinDirectory
)
;
try
{
launcher
.
getModelBuilder
(
)
.
generateProcessedSourceFiles
(
OutputType
.
CLASSES
)
;
}
catch
(
Throwable
e
)
{
new
AssertionError
(
"The printing of java sources failed after: "
+
refactoringDescription
,
e
)
;
}
try
{
launcher
.
getModelBuilder
(
)
.
compile
(
SpoonModelBuilder
.
InputType
.
CTTYPES
)
;
}
catch
(
Throwable
e
)
{
new
AssertionError
(
"The compilation of java sources in "
+
launcher
.
getEnvironment
(
)
.
getBinaryOutputDirectory
(
)
+
" failed after: "
+
refactoringDescription
,
e
)
;
}
try
(
TestClassloader
classLoader
=
new
TestClassloader
(
launcher
)
)
{
Class
testModelClass
=
classLoader
.
loadClass
(
CtRenameLocalVariableRefactoringTestSubject
.
class
.
getName
(
)
)
;
testModelClass
.
getMethod
(
"checkModelConsistency"
)
.
invoke
(
testModelClass
.
newInstance
(
)
)
;
}
catch
(
InvocationTargetException
e
)
{
throw
new
AssertionError
(
"The model validation of code in "
+
launcher
.
getEnvironment
(
)
.
getBinaryOutputDirectory
(
)
+
" failed after: "
+
refactoringDescription
,
e
.
getTargetException
(
)
)
;
}
catch
(
Throwable
e
)
{
throw
new
AssertionError
(
"The model validation of code in "
+
launcher
.
getEnvironment
(
)
.
getBinaryOutputDirectory
(
)
+
" failed after: "
+
refactoringDescription
,
e
)
;
}
}
