@Test
public
void
testRefactorWrongUsage
(
)
throws
Exception
{
CtType
varRenameClass
=
ModelUtils
.
buildClass
(
CtRenameLocalVariableRefactoringTestSubject
.
class
)
;
CtLocalVariable
<
?
>
local1Var
=
varRenameClass
.
filterChildren
(
(
CtLocalVariable
<
?
>
var
)
->
"local1"
.
equals
(
var
.
getSimpleName
(
)
)
)
.
first
(
)
;
CtRenameLocalVariableRefactoring
refactor
=
new
CtRenameLocalVariableRefactoring
(
)
;
refactor
.
setNewName
(
"local1"
)
;
try
{
refactor
.
refactor
(
)
;
fail
(
)
;
}
catch
(
SpoonException
e
)
{
}
refactor
.
setTarget
(
local1Var
)
;
try
{
refactor
.
setNewName
(
""
)
;
fail
(
)
;
}
catch
(
SpoonException
e
)
{
}
try
{
refactor
.
setNewName
(
"x "
)
;
fail
(
)
;
}
catch
(
SpoonException
e
)
{
}
try
{
refactor
.
setNewName
(
"x y"
)
;
fail
(
)
;
}
catch
(
SpoonException
e
)
{
}
try
{
refactor
.
setNewName
(
"x("
)
;
fail
(
)
;
}
catch
(
SpoonException
e
)
{
}
}
