/** 
 * The  {@link CtRenameLocalVariableRefactoringTestSubject} class is loaded as spoon model. Then:- It looks for each CtVariable and it's CtAnnotation and tries to rename that variable to the name defined by annotation. - If the annotation name is prefixed with "-", then that refactoring should fail. - If the annotation name is not prefixed, then that refactoring should pass. If it behaves different then expected, then this test fails
 */
@Test
public
void
testRenameAllLocalVariablesOfRenameTestSubject
(
)
throws
Exception
{
CtClass
<
?
>
varRenameClass
=
(
CtClass
<
?
>
)
ModelUtils
.
buildClass
(
CtRenameLocalVariableRefactoringTestSubject
.
class
)
;
CtTypeReference
<
TestTryRename
>
tryRename
=
varRenameClass
.
getFactory
(
)
.
createCtTypeReference
(
TestTryRename
.
class
)
;
varRenameClass
.
getMethods
(
)
.
forEach
(
method
->
{
if
(
DEBUG
.
length
==
3
&&
DEBUG
[
0
]
.
equals
(
method
.
getSimpleName
(
)
)
==
false
)
return
;
method
.
filterChildren
(
(
CtVariable
var
)
->
true
)
.
map
(
(
CtVariable
var
)
->
var
.
getAnnotation
(
tryRename
)
)
.
forEach
(
(
CtAnnotation
<
TestTryRename
>
annotation
)
->
{
String
[
]
newNames
=
annotation
.
getActualAnnotation
(
)
.
value
(
)
;
CtVariable
<
?
>
targetVariable
=
(
CtVariable
<
?
>
)
annotation
.
getAnnotatedElement
(
)
;
for
(
String
newName
:
newNames
)
{
boolean
renameShouldPass
=
newName
.
startsWith
(
"-"
)
==
false
;
if
(
!
renameShouldPass
)
{
newName
=
newName
.
substring
(
1
)
;
}
if
(
targetVariable
instanceof
CtLocalVariable
<
?
>
)
{
if
(
DEBUG
.
length
==
3
&&
DEBUG
[
1
]
.
equals
(
targetVariable
.
getSimpleName
(
)
)
&&
DEBUG
[
2
]
.
equals
(
newName
)
)
{
this
.
getClass
(
)
;
}
checkLocalVariableRename
(
(
CtLocalVariable
<
?
>
)
targetVariable
,
newName
,
renameShouldPass
)
;
}
else
{
}
}
}
)
;
}
)
;
}
