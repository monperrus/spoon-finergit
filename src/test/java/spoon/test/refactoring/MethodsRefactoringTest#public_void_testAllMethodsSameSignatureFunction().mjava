@Test
public
void
testAllMethodsSameSignatureFunction
(
)
{
Factory
factory
=
ModelUtils
.
build
(
new
File
(
"./src/test/java/spoon/test/refactoring/parameter/testclasses"
)
)
;
List
<
CtExecutable
<
?
>
>
executablesOfHierarchyA
=
getExecutablesOfHierarchy
(
factory
,
"A_method1"
)
;
checkMethodHierarchies
(
executablesOfHierarchyA
)
;
List
<
CtExecutable
<
?
>
>
executablesOfHierarchyR
=
getExecutablesOfHierarchy
(
factory
,
"R_method1"
)
;
checkMethodHierarchies
(
executablesOfHierarchyR
)
;
CtConstructor
<
?
>
constructorTypeA
=
factory
.
Class
(
)
.
get
(
TypeA
.
class
)
.
getConstructors
(
)
.
iterator
(
)
.
next
(
)
;
CtExecutable
<
?
>
exec
=
constructorTypeA
.
map
(
new
AllMethodsSameSignatureFunction
(
)
)
.
first
(
)
;
assertNull
(
"Unexpected executable found by Constructor of TypeA "
+
exec
,
exec
)
;
CtConstructor
<
?
>
constructorTypeB
=
factory
.
Class
(
)
.
get
(
TypeB
.
class
)
.
getConstructors
(
)
.
iterator
(
)
.
next
(
)
;
exec
=
constructorTypeA
.
map
(
new
AllMethodsSameSignatureFunction
(
)
)
.
first
(
)
;
assertNull
(
"Unexpected executable found by Constructor of TypeA "
+
exec
,
exec
)
;
assertSame
(
constructorTypeA
,
constructorTypeA
.
map
(
new
AllMethodsSameSignatureFunction
(
)
.
includingSelf
(
true
)
)
.
first
(
)
)
;
}
