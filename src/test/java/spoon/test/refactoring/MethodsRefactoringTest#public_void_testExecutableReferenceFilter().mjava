@Test
public
void
testExecutableReferenceFilter
(
)
{
Factory
factory
=
ModelUtils
.
build
(
new
File
(
"./src/test/java/spoon/test/refactoring/parameter/testclasses"
)
)
;
List
<
CtExecutable
<
?
>
>
executables
=
factory
.
getModel
(
)
.
filterChildren
(
(
CtExecutable
<
?
>
e
)
->
true
)
.
list
(
)
;
int
nrExecRefsTotal
=
0
;
for
(
CtExecutable
<
?
>
executable
:
executables
)
{
nrExecRefsTotal
=
checkExecutableReferenceFilter
(
factory
,
Collections
.
singletonList
(
executable
)
)
;
}
int
nrExecRefsTotal2
=
checkExecutableReferenceFilter
(
factory
,
executables
)
;
assertSame
(
nrExecRefsTotal
,
nrExecRefsTotal2
)
;
CtLambda
lambda
=
factory
.
getModel
(
)
.
filterChildren
(
(
CtLambda
<
?
>
e
)
->
true
)
.
first
(
)
;
assertNotNull
(
lambda
)
;
CtExecutableReference
<
?
>
lambdaRef
=
lambda
.
getReference
(
)
;
List
<
CtExecutableReference
<
?
>
>
refs
=
lambdaRef
.
filterChildren
(
null
)
.
select
(
new
ExecutableReferenceFilter
(
lambda
)
)
.
list
(
)
;
assertEquals
(
1
,
refs
.
size
(
)
)
;
assertSame
(
lambdaRef
,
refs
.
get
(
0
)
)
;
}
