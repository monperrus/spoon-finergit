private
List
<
CtExecutableReference
<
?
>
>
getCtConstructorsByCtConstructor
(
CtConstructor
<
?
>
aConstructor
)
{
if
(
aConstructor
.
getBody
(
)
.
getStatements
(
)
.
size
(
)
==
0
)
{
return
new
ArrayList
<
>
(
)
;
}
if
(
!
(
aConstructor
.
getBody
(
)
.
getStatement
(
0
)
instanceof
CtInvocation
)
)
{
return
new
ArrayList
<
>
(
)
;
}
final
CtInvocation
inv
=
aConstructor
.
getBody
(
)
.
getStatement
(
0
)
;
if
(
!
inv
.
getExecutable
(
)
.
getSimpleName
(
)
.
equals
(
CtExecutableReference
.
CONSTRUCTOR_NAME
)
)
{
return
new
ArrayList
<
>
(
)
;
}
return
inv
.
getExecutable
(
)
.
getElements
(
new
AbstractReferenceFilter
<
CtExecutableReference
<
?
>
>
(
CtExecutableReference
.
class
)
{
@Override
public
boolean
matches
(
CtExecutableReference
<
?
>
reference
)
{
return
reference
.
isConstructor
(
)
;
}
}
)
;
}
