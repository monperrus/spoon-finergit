@Test
public
void
testExecutableReferences
(
)
throws
Exception
{
CtClass
<
?
>
classMyClass
=
Query
.
getElements
(
factory
,
new
NameFilter
<
CtClass
>
(
"MyClass"
)
)
.
get
(
0
)
;
assertEquals
(
"MyClass"
,
classMyClass
.
getSimpleName
(
)
)
;
List
<
CtExecutableReference
<
?
>
>
refsExecutableClass1
=
Query
.
getElements
(
classMyClass
,
new
AbstractReferenceFilter
<
CtExecutableReference
<
?
>
>
(
CtExecutableReference
.
class
)
{
public
boolean
matches
(
CtExecutableReference
<
?
>
reference
)
{
return
true
;
}
}
)
;
CtClass
<
?
>
classMyClass2
=
Query
.
getElements
(
factory
,
new
NameFilter
<
CtClass
>
(
"MyClass2"
)
)
.
get
(
0
)
;
assertEquals
(
"MyClass2"
,
classMyClass2
.
getSimpleName
(
)
)
;
List
<
CtExecutableReference
<
?
>
>
refsExecutableClass2
=
Query
.
getElements
(
classMyClass2
,
new
AbstractReferenceFilter
<
CtExecutableReference
<
?
>
>
(
CtExecutableReference
.
class
)
{
public
boolean
matches
(
CtExecutableReference
<
?
>
reference
)
{
return
true
;
}
}
)
;
assertEquals
(
11
,
refsExecutableClass1
.
size
(
)
)
;
for
(
CtExecutableReference
<
?
>
ref
:
refsExecutableClass1
)
{
assertNotNull
(
ref
)
;
if
(
!
ref
.
toString
(
)
.
equals
(
"java.lang.Object#Object()"
)
)
{
assertNotNull
(
ref
.
getDeclaration
(
)
)
;
}
}
assertEquals
(
9
,
refsExecutableClass2
.
size
(
)
)
;
for
(
CtExecutableReference
<
?
>
ref
:
refsExecutableClass2
)
{
assertNotNull
(
ref
)
;
if
(
!
ref
.
toString
(
)
.
equals
(
"java.lang.Object#Object()"
)
)
{
assertNotNull
(
ref
.
getDeclaration
(
)
)
;
}
}
}
