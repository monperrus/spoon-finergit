@Test
public
void
testMultiReferenceBetweenMethodsWithGenericInSameClass
(
)
throws
Exception
{
final
CtClass
<
?
>
clazz
=
getCtClassByName
(
"MyClass"
)
;
CtMethod
<
?
>
method2
=
getCtMethodByNameFromCtClass
(
clazz
,
"method2"
)
;
List
<
CtExecutableReference
<
?
>
>
refsMethod2
=
getReferencesOfAMethod
(
method2
)
;
CtMethod
<
?
>
expectedMethod1
=
getCtMethodByNameFromCtClass
(
clazz
,
"method1"
)
;
CtMethod
<
?
>
expectedMethod5
=
getCtMethodByNameFromCtClass
(
clazz
,
"method5"
)
;
assertEquals
(
3
,
refsMethod2
.
size
(
)
)
;
CtExecutable
execRefsMethods2
=
refsMethod2
.
get
(
0
)
.
getDeclaration
(
)
;
assertEquals
(
execRefsMethods2
.
getSignature
(
)
,
"method1(T extends java.lang.String)"
)
;
assertEquals
(
expectedMethod1
,
refsMethod2
.
get
(
1
)
.
getDeclaration
(
)
)
;
assertEquals
(
expectedMethod5
,
refsMethod2
.
get
(
2
)
.
getDeclaration
(
)
)
;
}
