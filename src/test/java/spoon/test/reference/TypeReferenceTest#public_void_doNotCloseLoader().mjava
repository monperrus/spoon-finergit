@SuppressWarnings({"rawtypes","unchecked"})
@Test
public
void
doNotCloseLoader
(
)
throws
Exception
{
SpoonModelBuilder
comp
=
new
Launcher
(
)
.
createCompiler
(
)
;
Factory
factory
=
comp
.
getFactory
(
)
;
String
qualifiedName
=
"spoontest.a.ClassA"
;
String
referenceQualifiedName
=
"spoontest.b.ClassB"
;
List
<
SpoonResource
>
fileToBeSpooned
=
SpoonResourceHelper
.
resources
(
"./src/test/resources/reference-test-2/"
+
qualifiedName
.
replace
(
'.'
,
'/'
)
+
".java"
)
;
comp
.
addInputSources
(
fileToBeSpooned
)
;
assertEquals
(
1
,
fileToBeSpooned
.
size
(
)
)
;
List
<
SpoonResource
>
classpath
=
SpoonResourceHelper
.
resources
(
"./src/test/resources/reference-test-2/ReferenceTest2.jar"
)
;
String
[
]
dependencyClasspath
=
{
classpath
.
get
(
0
)
.
getPath
(
)
}
;
factory
.
getEnvironment
(
)
.
setSourceClasspath
(
dependencyClasspath
)
;
assertEquals
(
1
,
classpath
.
size
(
)
)
;
comp
.
build
(
)
;
CtType
<
?
>
theClass
=
factory
.
Type
(
)
.
get
(
qualifiedName
)
;
List
<
CtField
<
?
>
>
fields
=
theClass
.
getFields
(
)
;
assertEquals
(
1
,
fields
.
size
(
)
)
;
CtField
<
?
>
bField
=
fields
.
get
(
0
)
;
CtTypeReference
referencedType
=
bField
.
getType
(
)
;
assertEquals
(
referenceQualifiedName
,
referencedType
.
getQualifiedName
(
)
)
;
Collection
<
CtFieldReference
<
?
>
>
fieldsOfB
=
referencedType
.
getAllFields
(
)
;
if
(
fieldsOfB
.
size
(
)
==
2
)
{
final
CtFieldReference
<
?
>
potentialJacoco
=
(
CtFieldReference
<
?
>
)
fieldsOfB
.
toArray
(
)
[
1
]
;
if
(
"$jacocoData"
.
equals
(
potentialJacoco
.
getSimpleName
(
)
)
)
{
fieldsOfB
.
remove
(
potentialJacoco
)
;
}
}
assertEquals
(
1
,
fieldsOfB
.
size
(
)
)
;
CtFieldReference
<
?
>
cField
=
fieldsOfB
.
iterator
(
)
.
next
(
)
;
assertEquals
(
"spoontest.c.ClassC"
,
cField
.
getType
(
)
.
getQualifiedName
(
)
)
;
}
