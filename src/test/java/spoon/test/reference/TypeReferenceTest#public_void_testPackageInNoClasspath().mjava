@Test
public
void
testPackageInNoClasspath
(
)
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/resources/noclasspath/Demo.java"
)
;
launcher
.
setSourceOutputDirectory
(
"./target/class-declaration"
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
run
(
)
;
final
CtClass
<
Object
>
aClass
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
"Demo"
)
;
final
Set
<
CtTypeReference
<
?
>
>
referencedTypes
=
aClass
.
getReferencedTypes
(
)
;
boolean
containsDemoReference
=
false
;
boolean
containsVoidReference
=
false
;
boolean
containsStringReference
=
false
;
boolean
containsJoinerReference
=
false
;
for
(
CtTypeReference
<
?
>
reference
:
referencedTypes
)
{
if
(
"Demo"
.
equals
(
reference
.
toString
(
)
)
)
{
containsDemoReference
=
true
;
}
else
if
(
"void"
.
equals
(
reference
.
toString
(
)
)
)
{
containsVoidReference
=
true
;
}
else
if
(
"java.lang.String"
.
equals
(
reference
.
toString
(
)
)
)
{
containsStringReference
=
true
;
}
else
if
(
"com.google.common.base.Joiner"
.
equals
(
reference
.
toString
(
)
)
)
{
containsJoinerReference
=
true
;
}
}
assertTrue
(
"Reference to Demo is missing"
,
containsDemoReference
)
;
assertTrue
(
"Reference to void is missing"
,
containsVoidReference
)
;
assertTrue
(
"Reference to String is missing"
,
containsStringReference
)
;
assertTrue
(
"Reference to Joiner is missing"
,
containsJoinerReference
)
;
}
