@Test
public
void
testRecursiveTypeReferenceInGenericType
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/reference/testclasses/EnumValue.java"
)
;
launcher
.
setSourceOutputDirectory
(
"./target/spoon-test"
)
;
launcher
.
run
(
)
;
final
CtClass
<
EnumValue
>
aClass
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
EnumValue
.
class
)
;
final
CtMethod
<
?
>
asEnum
=
aClass
.
getMethodsByName
(
"asEnum"
)
.
get
(
0
)
;
final
CtTypeParameterReference
genericType
=
(
CtTypeParameterReference
)
asEnum
.
getFormalTypeParameters
(
)
.
get
(
0
)
;
assertNotNull
(
genericType
)
;
assertEquals
(
1
,
genericType
.
getBounds
(
)
.
size
(
)
)
;
final
CtTypeReference
<
?
>
extendsGeneric
=
genericType
.
getBounds
(
)
.
get
(
0
)
;
assertNotNull
(
extendsGeneric
)
;
assertEquals
(
1
,
extendsGeneric
.
getActualTypeArguments
(
)
.
size
(
)
)
;
final
CtTypeReference
circularRef
=
extendsGeneric
.
getActualTypeArguments
(
)
.
get
(
0
)
;
assertNotNull
(
circularRef
)
;
assertTrue
(
circularRef
instanceof
CtCircularTypeReference
)
;
}
