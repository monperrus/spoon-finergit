@Test
public
void
testTypeDeclarationWildcard
(
)
{
CtLocalVariable
<
?
>
s
=
new
Launcher
(
)
.
getFactory
(
)
.
Code
(
)
.
createCodeSnippetStatement
(
"java.util.List<?> l = null"
)
.
compile
(
)
;
assertEquals
(
"?"
,
s
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
getSimpleName
(
)
)
;
assertTrue
(
CtWildcardReference
.
class
.
isInstance
(
s
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
)
)
;
assertEquals
(
"Object"
,
s
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
getTypeDeclaration
(
)
.
getSimpleName
(
)
)
;
assertEquals
(
Object
.
class
,
s
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
getTypeDeclaration
(
)
.
getActualClass
(
)
)
;
CtLocalVariable
<
?
>
s2
=
new
Launcher
(
)
.
getFactory
(
)
.
Code
(
)
.
createCodeSnippetStatement
(
"java.util.List<String> l = null"
)
.
compile
(
)
;
assertEquals
(
"String"
,
s2
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
getSimpleName
(
)
)
;
assertEquals
(
String
.
class
,
s2
.
getType
(
)
.
getActualTypeArguments
(
)
.
get
(
0
)
.
getTypeDeclaration
(
)
.
getActualClass
(
)
)
;
}
