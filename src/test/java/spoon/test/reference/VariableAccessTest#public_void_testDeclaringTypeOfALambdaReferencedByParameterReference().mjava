@Test
public
void
testDeclaringTypeOfALambdaReferencedByParameterReference
(
)
{
final
spoon
.
Launcher
launcher
=
new
spoon
.
Launcher
(
)
;
launcher
.
addInputResource
(
"src/test/resources/noclasspath/Foo3.java"
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
getEnvironment
(
)
.
setComplianceLevel
(
8
)
;
launcher
.
buildModel
(
)
;
launcher
.
getModel
(
)
.
getElements
(
new
TypeFilter
<
CtExecutable
<
?
>
>
(
CtExecutable
.
class
)
{
@Override
public
boolean
matches
(
CtExecutable
<
?
>
exec
)
{
final
List
<
CtParameterReference
<
?
>
>
guiParams
=
exec
.
getParameters
(
)
.
stream
(
)
.
map
(
CtParameter
::
getReference
)
.
collect
(
Collectors
.
toList
(
)
)
;
if
(
guiParams
.
size
(
)
!=
1
)
{
return
false
;
}
final
CtParameterReference
<
?
>
param
=
guiParams
.
get
(
0
)
;
exec
.
getBody
(
)
.
getElements
(
new
TypeFilter
<
CtParameterReference
<
?
>
>
(
CtParameterReference
.
class
)
{
@Override
public
boolean
matches
(
CtParameterReference
<
?
>
p
)
{
assertEquals
(
p
,
param
)
;
return
super
.
matches
(
p
)
;
}
}
)
;
return
super
.
matches
(
exec
)
;
}
}
)
;
}
