@Test
public
void
testGetDeclarationAfterClone
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
addInputResource
(
"./src/test/resources/noclasspath/A2.java"
)
;
launcher
.
buildModel
(
)
;
final
CtClass
<
Object
>
a2
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
"A2"
)
;
final
CtClass
<
Object
>
a2Cloned
=
a2
.
clone
(
)
;
assertEquals
(
a2
,
a2Cloned
)
;
final
CtMethod
<
Object
>
methodA2
=
getMethod
(
launcher
,
a2
)
;
final
CtMethod
<
Object
>
methodA2Cloned
=
getMethod
(
launcher
,
a2Cloned
)
;
final
CtLocalVariable
declaration
=
methodA2
.
getBody
(
)
.
getStatement
(
0
)
;
final
CtLocalVariable
declarationCloned
=
methodA2Cloned
.
getBody
(
)
.
getStatement
(
0
)
;
final
CtLocalVariableReference
localVarRef
=
getLocalVariableRefF1
(
methodA2
)
;
final
CtLocalVariableReference
localVarRefCloned
=
getLocalVariableRefF1
(
methodA2Cloned
)
;
assertEquals
(
localVarRef
.
getDeclaration
(
)
,
declaration
)
;
assertTrue
(
localVarRef
.
getDeclaration
(
)
==
declaration
)
;
assertEquals
(
localVarRefCloned
.
getDeclaration
(
)
,
declarationCloned
)
;
assertTrue
(
localVarRefCloned
.
getDeclaration
(
)
==
declarationCloned
)
;
}
