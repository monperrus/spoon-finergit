@Test
public
void
testVariableAccessDeclarationInAnonymousClass
(
)
throws
Exception
{
CtClass
<
?
>
type
=
build
(
"spoon.test.reference.testclasses"
,
"FooBar"
)
;
assertEquals
(
"FooBar"
,
type
.
getSimpleName
(
)
)
;
final
CtParameterReference
<
?
>
ref
=
type
.
getElements
(
new
AbstractReferenceFilter
<
CtParameterReference
<
?
>
>
(
CtParameterReference
.
class
)
{
@Override
public
boolean
matches
(
CtParameterReference
<
?
>
reference
)
{
return
"myArg"
.
equals
(
reference
.
getSimpleName
(
)
)
;
}
}
)
.
get
(
0
)
;
assertNotNull
(
"Parameter can't be null"
,
ref
.
getDeclaration
(
)
)
;
assertNotNull
(
"Declaring method reference can't be null"
,
ref
.
getDeclaringExecutable
(
)
)
;
assertNotNull
(
"Declaring type of the method can't be null"
,
ref
.
getDeclaringExecutable
(
)
.
getDeclaringType
(
)
)
;
assertNotNull
(
"Declaration of declaring type of the method can't be null"
,
ref
.
getDeclaringExecutable
(
)
.
getDeclaringType
(
)
.
getDeclaration
(
)
)
;
assertNotNull
(
"Declaration of root class can't be null"
,
ref
.
getDeclaringExecutable
(
)
.
getDeclaringType
(
)
.
getDeclaringType
(
)
.
getDeclaration
(
)
)
;
}
