@Test
public
void
testReplaceAllTypeRefenceWithGenerics
(
)
throws
Exception
{
final
Factory
factory
=
TestUtils
.
build
(
Tacos
.
class
)
;
final
List
<
CtTypeReference
>
references
=
Query
.
getReferences
(
factory
,
new
ReferenceTypeFilter
<
CtTypeReference
>
(
CtTypeReference
.
class
)
{
@Override
public
boolean
matches
(
CtTypeReference
reference
)
{
return
reference
.
getActualTypeArguments
(
)
.
size
(
)
>
0
&&
super
.
matches
(
reference
)
;
}
}
)
;
references
.
get
(
0
)
.
replace
(
factory
.
Type
(
)
.
createReference
(
references
.
get
(
0
)
.
getQualifiedName
(
)
)
)
;
final
CtType
<
Tacos
>
aTacos
=
factory
.
Type
(
)
.
get
(
Tacos
.
class
)
;
final
CtMethod
<
?
>
aMethod
=
aTacos
.
getMethodsByName
(
"m2"
)
.
get
(
0
)
;
final
CtTypeReference
<
Object
>
expected
=
factory
.
Type
(
)
.
createReference
(
"spoon.test.replace.testclasses.Tacos"
)
;
assertEquals
(
expected
,
aMethod
.
getType
(
)
)
;
assertEquals
(
expected
,
aMethod
.
getElements
(
new
TypeFilter
<
>
(
CtConstructorCall
.
class
)
)
.
get
(
0
)
.
getType
(
)
)
;
}
