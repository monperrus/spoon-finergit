@Test
public
void
testReplaceExecutableReferenceByAnotherOne
(
)
throws
Exception
{
final
CtType
<
Tacos
>
aTacos
=
factory
.
Type
(
)
.
get
(
Tacos
.
class
)
;
final
CtInvocation
inv
=
aTacos
.
getMethodsByName
(
"m3"
)
.
get
(
0
)
.
getElements
(
new
TypeFilter
<
>
(
CtInvocation
.
class
)
)
.
get
(
0
)
;
final
CtExecutableReference
oldExecutable
=
inv
.
getExecutable
(
)
;
final
CtExecutableReference
<
Object
>
newExecutable
=
factory
.
Executable
(
)
.
createReference
(
"void java.io.PrintStream#print(java.lang.String)"
)
;
assertEquals
(
inv
.
getExecutable
(
)
,
oldExecutable
)
;
assertEquals
(
"java.io.PrintStream#println(java.lang.String)"
,
inv
.
getExecutable
(
)
.
toString
(
)
)
;
oldExecutable
.
replace
(
newExecutable
)
;
assertEquals
(
inv
.
getExecutable
(
)
,
newExecutable
)
;
assertEquals
(
"java.io.PrintStream#print(java.lang.String)"
,
inv
.
getExecutable
(
)
.
toString
(
)
)
;
}
