@Test
public
void
testReplaceReplace
(
)
throws
Exception
{
CtClass
<
?
>
foo
=
factory
.
Package
(
)
.
get
(
"spoon.test.replace.testclasses"
)
.
getType
(
"Foo"
)
;
CtMethod
<
?
>
fooMethod
=
foo
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"foo"
)
)
.
get
(
0
)
;
assertEquals
(
"foo"
,
fooMethod
.
getSimpleName
(
)
)
;
CtMethod
<
?
>
barMethod
=
foo
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"bar"
)
)
.
get
(
0
)
;
assertEquals
(
"bar"
,
barMethod
.
getSimpleName
(
)
)
;
CtLocalVariable
<
?
>
assignment
=
(
CtLocalVariable
<
?
>
)
fooMethod
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
;
CtLocalVariable
<
?
>
newAssignment
=
barMethod
.
getBody
(
)
.
getStatement
(
0
)
;
assignment
.
replace
(
newAssignment
)
;
assertEquals
(
fooMethod
.
getBody
(
)
,
newAssignment
.
getParent
(
)
)
;
CtLiteral
<
Integer
>
lit
=
(
CtLiteral
<
Integer
>
)
foo
.
getElements
(
new
TypeFilter
<
CtLiteral
<
?
>
>
(
CtLiteral
.
class
)
)
.
get
(
0
)
;
final
CtElement
parent
=
lit
.
getParent
(
)
;
CtLiteral
<
Integer
>
newLit
=
factory
.
Code
(
)
.
createLiteral
(
0
)
;
lit
.
replace
(
newLit
)
;
assertEquals
(
"int y = 0"
,
fooMethod
.
getBody
(
)
.
getStatement
(
0
)
.
toString
(
)
)
;
assertEquals
(
parent
,
newLit
.
getParent
(
)
)
;
}
