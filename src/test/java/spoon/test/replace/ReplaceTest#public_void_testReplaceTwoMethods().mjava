@Test
public
void
testReplaceTwoMethods
(
)
{
CtClass
<
?
>
sample
=
factory
.
Package
(
)
.
get
(
"spoon.test.replace.testclasses"
)
.
getType
(
"Foo"
)
;
assertNotNull
(
sample
.
getMethod
(
"foo"
)
)
;
assertNull
(
sample
.
getMethod
(
"notfoo"
)
)
;
CtMethod
bar
=
factory
.
Core
(
)
.
createMethod
(
)
;
bar
.
setSimpleName
(
"notfoo"
)
;
bar
.
setType
(
factory
.
Type
(
)
.
createReference
(
void
.
class
)
)
;
CtMethod
bar2
=
factory
.
Core
(
)
.
createMethod
(
)
;
bar2
.
setSimpleName
(
"notfoo2"
)
;
bar2
.
setType
(
factory
.
Type
(
)
.
createReference
(
void
.
class
)
)
;
int
originCountOfMethods
=
sample
.
getTypeMembers
(
)
.
size
(
)
;
sample
.
getMethod
(
"foo"
)
.
replace
(
Arrays
.
asList
(
bar
,
bar2
)
)
;
assertNull
(
sample
.
getMethod
(
"foo"
)
)
;
assertNotNull
(
sample
.
getMethod
(
"notfoo"
)
)
;
assertNotNull
(
sample
.
getMethod
(
"notfoo2"
)
)
;
assertEquals
(
originCountOfMethods
+
1
,
sample
.
getTypeMembers
(
)
.
size
(
)
)
;
}
