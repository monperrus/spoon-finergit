@Test
public
void
testNullSignatureInUnboundVariable
(
)
throws
Exception
{
Factory
factory
=
new
Launcher
(
)
.
createFactory
(
)
;
factory
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
String
unboundVarAccess
=
"Complex.I"
;
String
content
=
""
+
"class X {"
+
"public Object foo() {"
+
" Integer.toString("
+
unboundVarAccess
+
");"
+
" return null;"
+
"}};"
;
SpoonCompiler
builder
=
new
JDTSnippetCompiler
(
factory
,
content
)
;
try
{
builder
.
build
(
)
;
Assert
.
fail
(
)
;
}
catch
(
Exception
e
)
{
}
CtClass
<
?
>
clazz1
=
(
CtClass
<
?
>
)
factory
.
Type
(
)
.
getAll
(
)
.
get
(
0
)
;
CtMethod
<
?
>
method
=
(
CtMethod
<
?
>
)
clazz1
.
getAllMethods
(
)
.
toArray
(
)
[
0
]
;
CtInvocation
<
?
>
invo
=
(
CtInvocation
<
?
>
)
method
.
getBody
(
)
.
getStatement
(
0
)
;
CtExpression
<
?
>
argument1
=
invo
.
getArguments
(
)
.
get
(
0
)
;
String
signatureUnbound
=
argument1
.
getSignature
(
)
;
assertTrue
(
unboundVarAccess
.
equals
(
signatureUnbound
)
)
;
String
toStringUnbound
=
argument1
.
toString
(
)
;
assertTrue
(
unboundVarAccess
.
equals
(
toStringUnbound
)
)
;
}
