@Test
public
void
testUnboundFieldSignature
(
)
{
Factory
factory
=
new
FactoryImpl
(
new
DefaultCoreFactory
(
)
,
new
StandardEnvironment
(
)
)
;
factory
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
String
content
=
""
+
"class PR {"
+
"public Object foo(String p) {"
+
" this.mfield = p; 	"
+
" return null;"
+
"}"
+
"};"
;
SpoonCompiler
builder
=
new
JDTSnippetCompiler
(
factory
,
content
)
;
try
{
builder
.
build
(
)
;
fail
(
)
;
}
catch
(
Exception
e
)
{
}
CtClass
<
?
>
clazz1
=
(
CtClass
<
?
>
)
factory
.
Type
(
)
.
getAll
(
)
.
get
(
0
)
;
assertNotNull
(
clazz1
)
;
CtMethod
<
?
>
methodString
=
(
CtMethod
<
?
>
)
clazz1
.
getAllMethods
(
)
.
toArray
(
)
[
0
]
;
CtAssignment
<
?
,
?
>
invoToInt1
=
(
CtAssignment
<
?
,
?
>
)
methodString
.
getBody
(
)
.
getStatement
(
0
)
;
String
sigAssign
=
invoToInt1
.
getSignature
(
)
;
CtExpression
<
?
>
left
=
invoToInt1
.
getAssigned
(
)
;
String
sigleft
=
left
.
getSignature
(
)
;
assertNotEquals
(
""
,
sigleft
.
trim
(
)
)
;
assertTrue
(
sigAssign
.
contains
(
"<no type>"
)
)
;
}
