@Test
public
void
testUnboundFieldSignature
(
)
{
Factory
factory
=
new
FactoryImpl
(
new
DefaultCoreFactory
(
)
,
new
StandardEnvironment
(
)
)
;
factory
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
String
content
=
""
+
"class PR {"
+
"public java.io.File foo(String p) {"
+
" this.mfield = p; 	"
+
" return null;"
+
"}"
+
"};"
;
SpoonCompiler
builder
=
new
JDTSnippetCompiler
(
factory
,
content
)
;
try
{
builder
.
build
(
)
;
fail
(
)
;
}
catch
(
Exception
e
)
{
}
CtClass
<
?
>
clazz1
=
(
CtClass
<
?
>
)
factory
.
Type
(
)
.
getAll
(
)
.
get
(
0
)
;
assertNotNull
(
clazz1
)
;
CtMethod
<
?
>
methodString
=
(
CtMethod
<
?
>
)
clazz1
.
getMethods
(
)
.
toArray
(
)
[
0
]
;
assertEquals
(
"java.io.File foo(java.lang.String)"
,
methodString
.
getSignature
(
)
)
;
CtAssignment
<
?
,
?
>
invoToInt1
=
(
CtAssignment
<
?
,
?
>
)
methodString
.
getBody
(
)
.
getStatement
(
0
)
;
CtExpression
<
?
>
left
=
invoToInt1
.
getAssigned
(
)
;
assertEquals
(
"PR.this.mfield"
,
left
.
toString
(
)
)
;
assertEquals
(
null
,
left
.
getType
(
)
)
;
assertEquals
(
"PR.this.mfield = p"
,
invoToInt1
.
toString
(
)
)
;
}
