/** 
 * This test is too long for CI, but it checks that SpoonifierVisitor does produce equivalent Type for all files used for testing purposes.
 */
@Ignore
@Test
public
void
testOnAllTestClasses
(
)
throws
IOException
,
ClassNotFoundException
,
NoSuchMethodException
,
IllegalAccessException
,
InvocationTargetException
{
List
<
String
>
testCases
=
Files
.
walk
(
Paths
.
get
(
"src/test/java/spoon/test"
)
)
.
filter
(
Files
::
isRegularFile
)
.
filter
(
f
->
f
.
toString
(
)
.
endsWith
(
".java"
)
)
.
filter
(
f
->
!
f
.
toString
(
)
.
endsWith
(
"package-info.java"
)
)
.
filter
(
f
->
f
.
getParent
(
)
.
toString
(
)
.
endsWith
(
"testclasses"
)
)
.
map
(
f
->
f
.
toString
(
)
)
.
collect
(
Collectors
.
toList
(
)
)
;
testCases
.
remove
(
"src/test/java/spoon/test/refactoring/testclasses/CtRenameLocalVariableRefactoringTestSubject.java"
)
;
testCases
.
remove
(
"src/test/java/spoon/test/query_function/testclasses/VariableReferencesModelTest.java"
)
;
testCases
.
remove
(
"src/test/java/spoon/test/prettyprinter/testclasses/ToBeChanged.java"
)
;
testCases
.
remove
(
"src/test/java/spoon/test/position/testclasses/PositionParameterTypeWithReference.java"
)
;
testCases
.
remove
(
"src/test/java/spoon/test/position/testclasses/Expressions.java"
)
;
testCases
.
remove
(
"src/test/java/spoon/test/annotation/testclasses/Main.java"
)
;
int
i
=
0
;
for
(
String
path
:
testCases
)
{
System
.
out
.
println
(
"("
+
i
+
" / "
+
testCases
.
size
(
)
+
") Test on "
+
path
)
;
testSpoonifierWith
(
path
,
i
++
)
;
}
}
