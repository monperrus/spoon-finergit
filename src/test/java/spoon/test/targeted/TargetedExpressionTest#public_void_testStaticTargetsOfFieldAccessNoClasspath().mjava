@Test
public
void
testStaticTargetsOfFieldAccessNoClasspath
(
)
throws
Exception
{
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
addInputResource
(
"./src/test/resources/spoon/test/noclasspath/targeted/Foo.java"
)
;
launcher
.
setSourceOutputDirectory
(
"./target/noclasspath"
)
;
launcher
.
run
(
)
;
final
CtClass
<
Object
>
foo
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
"Foo"
)
;
final
CtTypeReference
<
Object
>
expectedFoo
=
foo
.
getReference
(
)
;
final
CtTypeReference
<
Object
>
bar
=
launcher
.
getFactory
(
)
.
Class
(
)
.
create
(
"Bar"
)
.
getReference
(
)
;
final
CtTypeReference
<
Object
>
fiiFuu
=
launcher
.
getFactory
(
)
.
Class
(
)
.
create
(
"Fii.Fuu"
)
.
getReference
(
)
;
final
CtThisAccess
<
Object
>
exepectedThisAccess
=
launcher
.
getFactory
(
)
.
Core
(
)
.
createThisAccess
(
)
;
exepectedThisAccess
.
setType
(
expectedFoo
)
;
final
CtTypeAccess
<
Object
>
expectedTypeAccess
=
launcher
.
getFactory
(
)
.
Code
(
)
.
createTypeAccess
(
foo
.
getReference
(
)
)
;
final
CtTypeAccess
<
Object
>
expectedBarTypeAccess
=
launcher
.
getFactory
(
)
.
Code
(
)
.
createTypeAccess
(
bar
)
;
final
CtMethod
<
?
>
fieldMethod
=
foo
.
getMethodsByName
(
"field"
)
.
get
(
0
)
;
final
List
<
CtFieldAccess
<
?
>
>
elements
=
fieldMethod
.
getElements
(
new
TypeFilter
<
>
(
CtFieldAccess
.
class
)
)
;
assertEquals
(
10
,
elements
.
size
(
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
expectedFoo
)
.
target
(
CtConstructorCallImpl
.
class
)
.
result
(
"new Foo().i"
)
,
elements
.
get
(
0
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
expectedFoo
)
.
target
(
elements
.
get
(
2
)
)
.
result
(
"foo.i"
)
,
elements
.
get
(
1
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
expectedFoo
)
.
target
(
exepectedThisAccess
)
.
result
(
"foo"
)
,
elements
.
get
(
2
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
expectedFoo
)
.
target
(
exepectedThisAccess
)
.
result
(
"Foo.this.i"
)
,
elements
.
get
(
3
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
expectedFoo
)
.
target
(
exepectedThisAccess
)
.
result
(
"foo"
)
,
elements
.
get
(
4
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
expectedFoo
)
.
target
(
expectedTypeAccess
)
.
result
(
"Foo.staticField"
)
,
elements
.
get
(
5
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
result
(
"staticField"
)
,
elements
.
get
(
6
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
bar
)
.
target
(
expectedBarTypeAccess
)
.
result
(
"Bar.staticFieldBar"
)
,
elements
.
get
(
7
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
bar
)
.
target
(
expectedBarTypeAccess
)
.
result
(
"Bar.staticFieldBar"
)
,
elements
.
get
(
8
)
)
;
assertEqualsFieldAccess
(
new
ExpectedTargetedExpression
(
)
.
declaringType
(
fiiFuu
)
.
target
(
launcher
.
getFactory
(
)
.
Code
(
)
.
createTypeAccess
(
fiiFuu
)
)
.
result
(
"Fii.Fuu.i"
)
,
elements
.
get
(
9
)
)
;
}
