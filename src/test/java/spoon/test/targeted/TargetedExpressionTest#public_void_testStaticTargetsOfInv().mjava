@Test
public
void
testStaticTargetsOfInv
(
)
throws
Exception
{
final
Factory
factory
=
build
(
Foo
.
class
,
Bar
.
class
,
SuperClass
.
class
)
;
final
CtClass
<
Foo
>
type
=
factory
.
Class
(
)
.
get
(
Foo
.
class
)
;
final
CtClass
<
Foo
.
Fii
.
Fuu
>
fuu
=
factory
.
Class
(
)
.
get
(
Foo
.
Fii
.
Fuu
.
class
)
;
final
CtTypeReference
<
Foo
>
expectedType
=
type
.
getReference
(
)
;
final
CtTypeReference
<
Bar
>
expectedBarType
=
factory
.
Class
(
)
.
get
(
Bar
.
class
)
.
getReference
(
)
;
final
CtTypeReference
<
Foo
.
Fii
.
Fuu
>
expectedFuuType
=
fuu
.
getReference
(
)
;
final
CtThisAccess
<
Foo
>
exepectedThisAccess
=
type
.
getFactory
(
)
.
Core
(
)
.
createThisAccess
(
)
;
exepectedThisAccess
.
setType
(
expectedType
)
;
final
CtTypeAccess
<
Foo
>
expectedTypeAccess
=
type
.
getFactory
(
)
.
Code
(
)
.
createTypeAccess
(
expectedType
)
;
final
CtTypeAccess
<
Bar
>
expectedBarTypeAccess
=
type
.
getFactory
(
)
.
Code
(
)
.
createTypeAccess
(
expectedBarType
)
;
final
CtMethod
<
?
>
invMethod
=
type
.
getMethodsByName
(
"invStatic"
)
.
get
(
0
)
;
final
List
<
CtInvocation
<
?
>
>
elements
=
invMethod
.
getElements
(
new
TypeFilter
<
CtInvocation
<
?
>
>
(
CtInvocation
.
class
)
)
;
assertEquals
(
8
,
elements
.
size
(
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedType
)
.
target
(
CtConstructorCallImpl
.
class
)
.
result
(
"new spoon.test.targeted.testclasses.Foo(0 , 0).staticMethod()"
)
,
elements
.
get
(
0
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedType
)
.
target
(
CtFieldReadImpl
.
class
)
.
result
(
"foo.staticMethod()"
)
,
elements
.
get
(
1
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedType
)
.
target
(
exepectedThisAccess
)
.
result
(
"spoon.test.targeted.testclasses.Foo.this.staticMethod()"
)
,
elements
.
get
(
2
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedType
)
.
target
(
expectedTypeAccess
)
.
result
(
"spoon.test.targeted.testclasses.Foo.staticMethod()"
)
,
elements
.
get
(
3
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedType
)
.
target
(
expectedTypeAccess
)
.
result
(
"spoon.test.targeted.testclasses.Foo.staticMethod()"
)
,
elements
.
get
(
4
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedBarType
)
.
target
(
expectedBarTypeAccess
)
.
result
(
"spoon.test.targeted.testclasses.Bar.staticMethodBar()"
)
,
elements
.
get
(
5
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedBarType
)
.
target
(
expectedBarTypeAccess
)
.
result
(
"spoon.test.targeted.testclasses.Bar.staticMethodBar()"
)
,
elements
.
get
(
6
)
)
;
assertInvocation
(
new
Expected
(
)
.
declaringType
(
expectedFuuType
)
.
target
(
factory
.
Code
(
)
.
createTypeAccess
(
expectedFuuType
)
)
.
result
(
"spoon.test.targeted.testclasses.Foo.Fii.Fuu.m()"
)
,
elements
.
get
(
7
)
)
;
}
