@Test
public
void
testTargetOfSuperAccesses
(
)
throws
Exception
{
final
Factory
factory
=
build
(
InternalSuperCall
.
class
)
;
final
CtClass
<
?
>
ctClass
=
factory
.
Class
(
)
.
get
(
InternalSuperCall
.
class
)
;
final
List
<
CtSuperAccess
>
superAccesses
=
ctClass
.
getElements
(
new
AbstractFilter
<
CtSuperAccess
>
(
CtSuperAccess
.
class
)
{
@Override
public
boolean
matches
(
CtSuperAccess
element
)
{
return
super
.
matches
(
element
)
;
}
}
)
;
assertEquals
(
2
,
superAccesses
.
size
(
)
)
;
assertNull
(
superAccesses
.
get
(
0
)
.
getTarget
(
)
)
;
assertNotNull
(
superAccesses
.
get
(
1
)
.
getTarget
(
)
)
;
CtMethod
<
?
>
method
=
ctClass
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"methode"
)
)
.
get
(
0
)
;
assertEquals
(
"spoon.test.targeted.testclasses.InternalSuperCall.super.toString()"
,
method
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
.
toString
(
)
)
;
CtMethod
<
?
>
toString
=
ctClass
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"toString"
)
)
.
get
(
0
)
;
assertEquals
(
"return super.toString()"
,
toString
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
.
toString
(
)
)
;
}
