@Test
public
void
testGenerateIfElse
(
)
throws
Exception
{
CtType
<
?
>
type
=
ModelUtils
.
buildClass
(
GenerateIfElse
.
class
)
;
Pattern
pattern
=
PatternBuilder
.
create
(
new
PatternBuilderHelper
(
type
)
.
setBodyOfMethod
(
"generator"
)
.
getPatternElements
(
)
)
.
configurePatternParameters
(
pb
->
{
pb
.
parameter
(
"option"
)
.
byVariable
(
"option"
)
;
}
)
.
configureInlineStatements
(
lsb
->
lsb
.
inlineIfOrForeachReferringTo
(
"option"
)
)
.
configurePatternParameters
(
pb
->
{
pb
.
parameter
(
"value"
)
.
byFilter
(
new
TypeFilter
(
CtLiteral
.
class
)
)
;
}
)
.
build
(
)
;
{
List
<
CtStatement
>
statements
=
pattern
.
generator
(
)
.
generate
(
CtStatement
.
class
,
new
ImmutableMapImpl
(
)
.
putValue
(
"option"
,
true
)
.
putValue
(
"value"
,
"spoon"
)
)
;
assertEquals
(
1
,
statements
.
size
(
)
)
;
assertEquals
(
"java.lang.System.out.print(\"spoon\")"
,
statements
.
get
(
0
)
.
toString
(
)
)
;
}
{
List
<
CtStatement
>
statements
=
pattern
.
generator
(
)
.
generate
(
CtStatement
.
class
,
new
ImmutableMapImpl
(
)
.
putValue
(
"option"
,
false
)
.
putValue
(
"value"
,
2.1
)
)
;
assertEquals
(
1
,
statements
.
size
(
)
)
;
assertEquals
(
"java.lang.System.out.println(2.1)"
,
statements
.
get
(
0
)
.
toString
(
)
)
;
}
}
