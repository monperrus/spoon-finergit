@Test
public
void
testMatchForeachWithOuterSubstitution
(
)
throws
Exception
{
CtType
<
?
>
ctClass
=
ModelUtils
.
buildClass
(
MatchForEach2
.
class
)
;
CtType
<
?
>
type
=
ctClass
.
getFactory
(
)
.
Type
(
)
.
get
(
MatchForEach2
.
class
)
;
Pattern
pattern
=
PatternBuilder
.
create
(
new
PatternBuilderHelper
(
type
)
.
setBodyOfMethod
(
"matcher1"
)
.
getPatternElements
(
)
)
.
configurePatternParameters
(
pb
->
{
pb
.
parameter
(
"values"
)
.
byVariable
(
"values"
)
.
setContainerKind
(
ContainerKind
.
LIST
)
.
matchInlinedStatements
(
)
;
pb
.
parameter
(
"varName"
)
.
byString
(
"var"
)
;
}
)
.
build
(
)
;
List
<
Match
>
matches
=
pattern
.
getMatches
(
ctClass
)
;
assertEquals
(
3
,
matches
.
size
(
)
)
;
{
Match
match
=
matches
.
get
(
0
)
;
assertEquals
(
Arrays
.
asList
(
"int var = 0"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
}
{
Match
match
=
matches
.
get
(
1
)
;
assertEquals
(
Arrays
.
asList
(
"int cc = 0"
,
"java.lang.System.out.println(\"Xxxx\")"
,
"cc++"
,
"java.lang.System.out.println(((java.lang.String) (null)))"
,
"cc++"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
assertEquals
(
"cc"
,
match
.
getParameters
(
)
.
getValue
(
"varName"
)
)
;
}
{
Match
match
=
matches
.
get
(
2
)
;
assertEquals
(
Arrays
.
asList
(
"int dd = 0"
,
"java.lang.System.out.println(java.lang.Long.class.toString())"
,
"dd++"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
assertEquals
(
"dd"
,
match
.
getParameters
(
)
.
getValue
(
"varName"
)
)
;
}
}
