@Test
public
void
testMatchParameterCondition
(
)
throws
Exception
{
CtType
<
?
>
ctClass
=
ModelUtils
.
buildClass
(
MatchWithParameterCondition
.
class
)
;
{
Pattern
pattern
=
PatternBuilder
.
create
(
new
PatternBuilderHelper
(
ctClass
)
.
setBodyOfMethod
(
"matcher1"
)
.
getPatternElements
(
)
)
.
configurePatternParameters
(
pb
->
{
pb
.
parameter
(
"value"
)
.
byVariable
(
"value"
)
;
pb
.
byCondition
(
null
,
(
Object
value
)
->
value
instanceof
CtLiteral
)
;
}
)
.
build
(
)
;
List
<
Match
>
matches
=
pattern
.
getMatches
(
ctClass
)
;
assertEquals
(
3
,
matches
.
size
(
)
)
;
{
Match
match
=
matches
.
get
(
0
)
;
assertEquals
(
Arrays
.
asList
(
"java.lang.System.out.println(\"a\")"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
assertTrue
(
match
.
getParameters
(
)
.
getValue
(
"value"
)
instanceof
CtLiteral
)
;
assertEquals
(
"\"a\""
,
match
.
getParameters
(
)
.
getValue
(
"value"
)
.
toString
(
)
)
;
}
{
Match
match
=
matches
.
get
(
1
)
;
assertEquals
(
Arrays
.
asList
(
"java.lang.System.out.println(\"Xxxx\")"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
assertTrue
(
match
.
getParameters
(
)
.
getValue
(
"value"
)
instanceof
CtLiteral
)
;
assertEquals
(
"\"Xxxx\""
,
match
.
getParameters
(
)
.
getValue
(
"value"
)
.
toString
(
)
)
;
}
{
Match
match
=
matches
.
get
(
2
)
;
assertEquals
(
Arrays
.
asList
(
"java.lang.System.out.println(((java.lang.String) (null)))"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
assertTrue
(
match
.
getParameters
(
)
.
getValue
(
"value"
)
instanceof
CtLiteral
)
;
assertEquals
(
"((java.lang.String) (null))"
,
match
.
getParameters
(
)
.
getValue
(
"value"
)
.
toString
(
)
)
;
}
}
}
