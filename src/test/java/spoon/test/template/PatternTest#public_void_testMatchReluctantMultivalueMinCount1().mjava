@Test
public
void
testMatchReluctantMultivalueMinCount1
(
)
throws
Exception
{
CtType
<
?
>
ctClass
=
ModelUtils
.
buildClass
(
MatchMultiple
.
class
)
;
Pattern
pattern
=
MatchMultiple
.
createPattern
(
Quantifier
.
RELUCTANT
,
1
,
null
)
;
List
<
Match
>
matches
=
pattern
.
getMatches
(
ctClass
.
getMethodsByName
(
"testMatch1"
)
.
get
(
0
)
)
;
assertEquals
(
2
,
matches
.
size
(
)
)
;
{
Match
match
=
matches
.
get
(
0
)
;
assertEquals
(
Arrays
.
asList
(
"int i = 0"
,
"i++"
,
"java.lang.System.out.println(i)"
,
"java.lang.System.out.println(\"Xxxx\")"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
assertEquals
(
Arrays
.
asList
(
"int i = 0"
,
"i++"
,
"java.lang.System.out.println(i)"
)
,
toListOfStrings
(
(
List
)
match
.
getParameters
(
)
.
getValue
(
"statements"
)
)
)
;
assertTrue
(
match
.
getParameters
(
)
.
getValue
(
"printedValue"
)
instanceof
CtLiteral
)
;
assertEquals
(
"\"Xxxx\""
,
match
.
getParameters
(
)
.
getValue
(
"printedValue"
)
.
toString
(
)
)
;
}
{
Match
match
=
matches
.
get
(
1
)
;
assertEquals
(
Arrays
.
asList
(
"java.lang.System.out.println(((java.lang.String) (null)))"
,
"java.lang.System.out.println(\"last one\")"
)
,
toListOfStrings
(
match
.
getMatchingElements
(
)
)
)
;
assertEquals
(
Arrays
.
asList
(
"java.lang.System.out.println(((java.lang.String) (null)))"
)
,
toListOfStrings
(
(
List
)
match
.
getParameters
(
)
.
getValue
(
"statements"
)
)
)
;
assertTrue
(
match
.
getParameters
(
)
.
getValue
(
"printedValue"
)
instanceof
CtLiteral
)
;
assertEquals
(
"\"last one\""
,
match
.
getParameters
(
)
.
getValue
(
"printedValue"
)
.
toString
(
)
)
;
}
}
