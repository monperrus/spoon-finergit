@Test
public
void
testPatternParameters
(
)
{
Factory
f
=
ModelUtils
.
build
(
new
File
(
"./src/test/java/spoon/test/template/testclasses/replace/DPPSample1.java"
)
,
new
File
(
"./src/test/java/spoon/test/template/testclasses/replace"
)
)
;
Pattern
p
=
OldPattern
.
createPatternFromMethodPatternModel
(
f
)
;
Map
<
String
,
ParameterInfo
>
parameterInfos
=
p
.
getParameterInfos
(
)
;
assertEquals
(
15
,
parameterInfos
.
size
(
)
)
;
assertEquals
(
new
HashSet
<
>
(
Arrays
.
asList
(
"next"
,
"item"
,
"startPrefixSpace"
,
"printer"
,
"start"
,
"statements"
,
"nextPrefixSpace"
,
"startSuffixSpace"
,
"elementPrinterHelper"
,
"endPrefixSpace"
,
"startKeyword"
,
"useStartKeyword"
,
"end"
,
"nextSuffixSpace"
,
"getIterable"
)
)
,
parameterInfos
.
keySet
(
)
)
;
for
(
Map
.
Entry
<
String
,
ParameterInfo
>
e
:
parameterInfos
.
entrySet
(
)
)
{
assertEquals
(
e
.
getKey
(
)
,
e
.
getValue
(
)
.
getName
(
)
)
;
}
}
