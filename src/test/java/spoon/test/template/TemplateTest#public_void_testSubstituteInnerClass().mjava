@Test
public
void
testSubstituteInnerClass
(
)
throws
Exception
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addTemplateResource
(
new
FileSystemFile
(
"./src/test/java/spoon/test/template/testclasses/InnerClassTemplate.java"
)
)
;
spoon
.
buildModel
(
)
;
Factory
factory
=
spoon
.
getFactory
(
)
;
CtClass
<
?
>
result
=
factory
.
Class
(
)
.
create
(
"x.Result"
)
;
new
InnerClassTemplate
(
)
.
apply
(
result
)
;
assertEquals
(
1
,
result
.
getNestedTypes
(
)
.
size
(
)
)
;
CtType
<
?
>
innerType
=
result
.
getNestedType
(
"Inner"
)
;
assertNotNull
(
innerType
)
;
CtField
<
?
>
innerField
=
innerType
.
getField
(
"innerField"
)
;
assertNotNull
(
innerField
)
;
assertSame
(
innerType
,
innerField
.
getDeclaringType
(
)
)
;
CtFieldReference
<
?
>
fr
=
innerType
.
filterChildren
(
(
CtFieldReference
<
?
>
e
)
->
true
)
.
first
(
)
;
assertEquals
(
"x.Result$Inner"
,
fr
.
getDeclaringType
(
)
.
getQualifiedName
(
)
)
;
}
