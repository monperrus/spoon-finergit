@Test
public
void
testTemplateInheritance
(
)
throws
Exception
{
Launcher
spoon
=
new
Launcher
(
)
;
Factory
factory
=
spoon
.
getFactory
(
)
;
spoon
.
getEnvironment
(
)
.
setCommentEnabled
(
true
)
;
spoon
.
createCompiler
(
factory
,
SpoonResourceHelper
.
resources
(
"./src/test/java/spoon/test/template/testclasses/inheritance/SubClass.java"
,
"./src/test/java/spoon/test/template/testclasses/inheritance/SuperClass.java"
)
,
SpoonResourceHelper
.
resources
(
"./src/test/java/spoon/test/template/testclasses/inheritance/SubTemplate.java"
,
"./src/test/java/spoon/test/template/testclasses/inheritance/SuperTemplate.java"
)
)
.
build
(
)
;
CtClass
<
?
>
superc
=
factory
.
Class
(
)
.
get
(
SuperClass
.
class
)
;
new
SuperTemplate
(
)
.
apply
(
superc
)
;
CtMethod
<
?
>
addedMethod
=
superc
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"toBeOverriden"
)
)
.
get
(
0
)
;
assertEquals
(
"toBeOverriden"
,
addedMethod
.
getSimpleName
(
)
)
;
CtClass
<
?
>
subc
=
factory
.
Class
(
)
.
get
(
SubClass
.
class
)
;
SubTemplate
template
=
new
SubTemplate
(
)
;
template
.
params
=
new
ArrayList
<
>
(
)
;
CtParameter
<
Integer
>
parameter
=
factory
.
Core
(
)
.
createParameter
(
)
;
parameter
.
setSimpleName
(
"x"
)
;
parameter
.
setType
(
factory
.
Type
(
)
.
createReference
(
int
.
class
)
)
;
template
.
params
.
add
(
parameter
)
;
template
.
invocation
=
factory
.
Code
(
)
.
createInvocation
(
null
,
addedMethod
.
getReference
(
)
)
;
template
.
intValues
=
new
CtExpression
[
]
;
template
.
intValues
[
0
]
=
factory
.
Code
(
)
.
createLiteral
(
0
)
;
template
.
intValues
[
1
]
=
factory
.
Code
(
)
.
createLiteral
(
1
)
;
template
.
apply
(
subc
)
;
CtMethod
<
?
>
addedMethod2
=
subc
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"toBeOverriden"
)
)
.
get
(
0
)
;
assertEquals
(
"toBeOverriden"
,
addedMethod2
.
getSimpleName
(
)
)
;
assertEquals
(
"super.toBeOverriden()"
,
addedMethod2
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
.
toString
(
)
)
;
CtMethod
<
?
>
methodWithTemplatedParameters
=
subc
.
getElements
(
new
NameFilter
<
CtMethod
<
?
>
>
(
"methodWithTemplatedParameters"
)
)
.
get
(
0
)
;
assertEquals
(
"methodWithTemplatedParameters"
,
methodWithTemplatedParameters
.
getSimpleName
(
)
)
;
assertEquals
(
"x"
,
methodWithTemplatedParameters
.
getParameters
(
)
.
get
(
0
)
.
getSimpleName
(
)
)
;
assertEquals
(
"int x"
,
methodWithTemplatedParameters
.
getParameters
(
)
.
get
(
0
)
.
toString
(
)
)
;
assertEquals
(
1
,
subc
.
getNestedTypes
(
)
.
size
(
)
)
;
assertEquals
(
"java.util.List newVarName = null"
,
methodWithTemplatedParameters
.
getBody
(
)
.
getStatement
(
0
)
.
toString
(
)
)
;
assertEquals
(
"java.util.LinkedList l = null"
,
methodWithTemplatedParameters
.
getBody
(
)
.
getStatement
(
1
)
.
toString
(
)
)
;
assertEquals
(
"java.util.List o = ((java.util.LinkedList) (new java.util.LinkedList()))"
,
methodWithTemplatedParameters
.
getBody
(
)
.
getStatement
(
2
)
.
toString
(
)
)
;
assertEquals
(
"toBeOverriden()"
,
methodWithTemplatedParameters
.
getBody
(
)
.
getStatement
(
3
)
.
toString
(
)
)
;
CtBlock
templatedForEach
=
methodWithTemplatedParameters
.
getBody
(
)
.
getStatement
(
4
)
;
assertEquals
(
"java.lang.System.out.println(0)"
,
templatedForEach
.
getStatement
(
0
)
.
toString
(
)
)
;
assertEquals
(
"java.lang.System.out.println(1)"
,
templatedForEach
.
getStatement
(
1
)
.
toString
(
)
)
;
}
