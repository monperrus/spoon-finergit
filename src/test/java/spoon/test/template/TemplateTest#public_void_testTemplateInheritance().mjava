@Test
public
void
testTemplateInheritance
(
)
throws
Exception
{
SpoonCompiler
compiler
=
Spoon
.
createCompiler
(
)
;
Factory
factory
=
Spoon
.
createFactory
(
)
;
compiler
.
build
(
factory
,
SpoonResourceHelper
.
files
(
"./src/test/java/spoon/test/template/SubClass.java"
,
"./src/test/java/spoon/test/template/SuperClass.java"
)
)
;
compiler
.
buildTemplates
(
factory
,
SpoonResourceHelper
.
files
(
"./src/test/java/spoon/test/template/SubTemplate.java"
,
"./src/test/java/spoon/test/template/SuperTemplate.java"
)
)
;
CtClass
<
?
>
superc
=
factory
.
Class
(
)
.
get
(
SuperClass
.
class
)
;
Substitution
.
insertAll
(
superc
,
new
SuperTemplate
(
)
)
;
CtMethod
<
?
>
addedMethod
=
(
CtMethod
<
?
>
)
superc
.
getElements
(
new
NameFilter
(
"toBeOverriden"
)
)
.
get
(
0
)
;
assertEquals
(
"toBeOverriden"
,
addedMethod
.
getSimpleName
(
)
)
;
CtClass
<
?
>
subc
=
factory
.
Class
(
)
.
get
(
SubClass
.
class
)
;
Substitution
.
insertAll
(
subc
,
new
SubTemplate
(
)
)
;
CtMethod
<
?
>
addedMethod2
=
(
CtMethod
<
?
>
)
subc
.
getElements
(
new
NameFilter
(
"toBeOverriden"
)
)
.
get
(
0
)
;
assertEquals
(
"toBeOverriden"
,
addedMethod2
.
getSimpleName
(
)
)
;
assertEquals
(
"super.toBeOverriden()"
,
addedMethod2
.
getBody
(
)
.
getStatements
(
)
.
get
(
0
)
.
toString
(
)
)
;
}
