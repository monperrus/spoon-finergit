@Test
public
void
testTemplateInvocationSubstitution
(
)
{
Launcher
spoon
=
new
Launcher
(
)
;
spoon
.
addTemplateResource
(
new
FileSystemFile
(
"./src/test/java/spoon/test/template/testclasses/InvocationTemplate.java"
)
)
;
spoon
.
buildModel
(
)
;
Factory
factory
=
spoon
.
getFactory
(
)
;
CtClass
<
?
>
resultKlass
=
factory
.
Class
(
)
.
create
(
"Result"
)
;
new
InvocationTemplate
(
factory
.
Type
(
)
.
OBJECT
,
"hashCode"
)
.
apply
(
resultKlass
)
;
CtMethod
<
?
>
templateMethod
=
(
CtMethod
<
?
>
)
resultKlass
.
getElements
(
new
NamedElementFilter
<
>
(
CtMethod
.
class
,
"invoke"
)
)
.
get
(
0
)
;
CtStatement
templateRoot
=
(
CtStatement
)
templateMethod
.
getBody
(
)
.
getStatement
(
0
)
;
assertEquals
(
"iface.hashCode()"
,
templateRoot
.
toString
(
)
)
;
}
