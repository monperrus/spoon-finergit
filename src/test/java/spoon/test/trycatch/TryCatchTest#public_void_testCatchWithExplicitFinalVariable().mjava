@Test
public
void
testCatchWithExplicitFinalVariable
(
)
throws
IOException
{
String
inputResource
=
"./src/test/java/spoon/test/trycatch/testclasses/Bar.java"
;
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
inputResource
)
;
launcher
.
getEnvironment
(
)
.
setComplianceLevel
(
5
)
;
launcher
.
buildModel
(
)
;
CtTry
tryStmt
=
launcher
.
getModel
(
)
.
getElements
(
new
TypeFilter
<
>
(
CtTry
.
class
)
)
.
get
(
0
)
;
List
<
CtCatch
>
catchers
=
tryStmt
.
getCatchers
(
)
;
assertEquals
(
1
,
catchers
.
size
(
)
)
;
CtCatchVariable
<
?
>
catchVariable
=
catchers
.
get
(
0
)
.
getParameter
(
)
;
assertTrue
(
catchVariable
.
hasModifier
(
ModifierKind
.
FINAL
)
)
;
Set
<
CtExtendedModifier
>
extendedModifierSet
=
catchVariable
.
getExtendedModifiers
(
)
;
assertEquals
(
1
,
extendedModifierSet
.
size
(
)
)
;
assertEquals
(
new
CtExtendedModifier
(
ModifierKind
.
FINAL
,
false
)
,
extendedModifierSet
.
iterator
(
)
.
next
(
)
)
;
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
inputResource
)
;
launcher
.
setSourceOutputDirectory
(
"./target/spoon-trycatch"
)
;
launcher
.
getEnvironment
(
)
.
setShouldCompile
(
true
)
;
launcher
.
getEnvironment
(
)
.
setComplianceLevel
(
5
)
;
launcher
.
run
(
)
;
File
f
=
new
File
(
"target/spoon-trycatch/spoon/test/trycatch/testclasses/Bar.java"
)
;
String
content
=
StringUtils
.
join
(
Files
.
readAllLines
(
f
.
toPath
(
)
)
,
"\n"
)
;
assertTrue
(
content
.
contains
(
"catch (final java.lang.Exception e)"
)
)
;
}
