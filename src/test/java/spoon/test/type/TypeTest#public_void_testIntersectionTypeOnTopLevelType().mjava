@Test
public
void
testIntersectionTypeOnTopLevelType
(
)
throws
Exception
{
final
CtType
<
Mole
>
aMole
=
buildClass
(
Mole
.
class
)
;
assertEquals
(
1
,
aMole
.
getFormalTypeParameters
(
)
.
size
(
)
)
;
assertTrue
(
aMole
.
getFormalTypeParameters
(
)
.
get
(
0
)
instanceof
CtTypeParameterReference
)
;
final
CtTypeParameterReference
ref
=
(
CtTypeParameterReference
)
aMole
.
getFormalTypeParameters
(
)
.
get
(
0
)
;
assertNotNull
(
ref
.
getBoundingType
(
)
)
;
assertTrue
(
ref
.
getBoundingType
(
)
instanceof
CtIntersectionTypeReference
)
;
assertEquals
(
2
,
ref
.
getBoundingType
(
)
.
asCtIntersectionTypeReference
(
)
.
getBounds
(
)
.
size
(
)
)
;
assertEquals
(
Number
.
class
,
ref
.
getBoundingType
(
)
.
asCtIntersectionTypeReference
(
)
.
getBounds
(
)
.
get
(
0
)
.
getActualClass
(
)
)
;
assertEquals
(
Comparable
.
class
,
ref
.
getBoundingType
(
)
.
asCtIntersectionTypeReference
(
)
.
getBounds
(
)
.
get
(
1
)
.
getActualClass
(
)
)
;
assertEquals
(
"public class Mole<NUMBER extends java.lang.Number & java.lang.Comparable<NUMBER>> {}"
,
aMole
.
toString
(
)
)
;
}
