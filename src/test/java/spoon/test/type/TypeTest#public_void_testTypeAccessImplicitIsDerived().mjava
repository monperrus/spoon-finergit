@Test
public
void
testTypeAccessImplicitIsDerived
(
)
throws
Exception
{
CtType
<
?
>
aPozole
=
ModelUtils
.
buildClass
(
Pozole
.
class
)
;
final
CtMethod
<
?
>
season
=
aPozole
.
getMethodsByName
(
"season"
)
.
get
(
0
)
;
CtTypeAccess
<
?
>
typeAccesses
=
season
.
getElements
(
new
TypeFilter
<
>
(
CtTypeAccess
.
class
)
)
.
get
(
0
)
;
assertFalse
(
typeAccesses
.
isImplicit
(
)
)
;
assertFalse
(
typeAccesses
.
getAccessedType
(
)
.
isImplicit
(
)
)
;
typeAccesses
.
getAccessedType
(
)
.
setImplicit
(
true
)
;
assertTrue
(
typeAccesses
.
isImplicit
(
)
)
;
assertTrue
(
typeAccesses
.
getAccessedType
(
)
.
isImplicit
(
)
)
;
typeAccesses
.
setImplicit
(
false
)
;
assertFalse
(
typeAccesses
.
isImplicit
(
)
)
;
assertFalse
(
typeAccesses
.
getAccessedType
(
)
.
isImplicit
(
)
)
;
}
