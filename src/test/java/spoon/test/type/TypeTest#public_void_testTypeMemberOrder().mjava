@Test
public
void
testTypeMemberOrder
(
)
{
final
String
target
=
"./target/type"
;
final
Launcher
launcher
=
new
Launcher
(
)
;
launcher
.
addInputResource
(
"./src/test/java/spoon/test/type/testclasses/TypeMembersOrder.java"
)
;
launcher
.
setSourceOutputDirectory
(
target
)
;
launcher
.
getEnvironment
(
)
.
setNoClasspath
(
true
)
;
launcher
.
run
(
)
;
Factory
f
=
launcher
.
getFactory
(
)
;
final
CtClass
<
?
>
aTypeMembersOrder
=
f
.
Class
(
)
.
get
(
TypeMembersOrder
.
class
)
;
{
List
<
String
>
typeMemberNames
=
new
ArrayList
<
>
(
)
;
for
(
CtTypeMember
typeMember
:
aTypeMembersOrder
.
getTypeMembers
(
)
)
{
typeMemberNames
.
add
(
typeMember
.
getSimpleName
(
)
)
;
}
assertEquals
(
Arrays
.
asList
(
"<init>"
,
"method1"
,
"field2"
,
"TypeMembersOrder"
,
"method4"
,
"field5"
,
""
,
"nestedType6"
,
"field7"
,
"method8"
)
,
typeMemberNames
)
;
}
{
f
.
createMethod
(
aTypeMembersOrder
,
Collections
.
singleton
(
ModifierKind
.
PUBLIC
)
,
f
.
Type
(
)
.
voidType
(
)
,
"method9"
,
Collections
.
emptyList
(
)
,
Collections
.
emptySet
(
)
)
;
List
<
String
>
typeMemberNames
=
new
ArrayList
<
>
(
)
;
for
(
CtTypeMember
typeMember
:
aTypeMembersOrder
.
getTypeMembers
(
)
)
{
typeMemberNames
.
add
(
typeMember
.
getSimpleName
(
)
)
;
}
assertEquals
(
Arrays
.
asList
(
"<init>"
,
"method1"
,
"field2"
,
"TypeMembersOrder"
,
"method4"
,
"field5"
,
""
,
"nestedType6"
,
"field7"
,
"method8"
,
"method9"
)
,
typeMemberNames
)
;
}
}
