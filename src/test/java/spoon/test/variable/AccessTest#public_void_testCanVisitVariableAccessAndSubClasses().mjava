@Test
public
void
testCanVisitVariableAccessAndSubClasses
(
)
throws
Exception
{
final
Factory
factory
=
TestUtils
.
build
(
VariableAccessSample
.
class
)
;
final
List
<
CtVariableRead
<
?
>
>
variablesRead
=
Query
.
getElements
(
factory
,
new
AbstractFilter
<
CtVariableRead
<
?
>
>
(
CtVariableRead
.
class
)
{
@Override
public
boolean
matches
(
CtVariableRead
<
?
>
element
)
{
return
super
.
matches
(
element
)
;
}
}
)
;
assertEquals
(
2
,
variablesRead
.
size
(
)
)
;
final
List
<
CtVariableWrite
<
?
>
>
variablesWrite
=
Query
.
getElements
(
factory
,
new
AbstractFilter
<
CtVariableWrite
<
?
>
>
(
CtVariableWrite
.
class
)
{
@Override
public
boolean
matches
(
CtVariableWrite
<
?
>
element
)
{
return
super
.
matches
(
element
)
;
}
}
)
;
assertEquals
(
1
,
variablesWrite
.
size
(
)
)
;
final
List
<
CtVariableAccess
<
?
>
>
variablesAccess
=
Query
.
getElements
(
factory
,
new
AbstractFilter
<
CtVariableAccess
<
?
>
>
(
CtVariableAccess
.
class
)
{
@Override
public
boolean
matches
(
CtVariableAccess
<
?
>
element
)
{
return
super
.
matches
(
element
)
;
}
}
)
;
assertEquals
(
3
,
variablesAccess
.
size
(
)
)
;
}
