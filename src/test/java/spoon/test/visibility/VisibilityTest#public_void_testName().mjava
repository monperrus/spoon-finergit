@Test
public
void
testName
(
)
throws
Exception
{
final
SpoonAPI
launcher
=
new
Launcher
(
)
;
launcher
.
run
(
new
String
[
]
{
"-i"
,
"./src/test/java/spoon/test/visibility/testclasses/Tacos.java"
,
"-o"
,
"./target/spooned/visibility"
}
)
;
final
List
<
CtFieldReference
<
?
>
>
references
=
Query
.
getReferences
(
launcher
.
getFactory
(
)
,
new
AbstractReferenceFilter
<
CtFieldReference
<
?
>
>
(
CtFieldReference
.
class
)
{
@Override
public
boolean
matches
(
CtFieldReference
<
?
>
reference
)
{
return
"x"
.
equals
(
reference
.
getSimpleName
(
)
)
;
}
}
)
;
assertEquals
(
1
,
references
.
size
(
)
)
;
final
CtFieldReference
<
?
>
field
=
references
.
get
(
0
)
;
assertNotNull
(
field
.
getDeclaration
(
)
)
;
final
CtClass
<
?
>
tacos
=
launcher
.
getFactory
(
)
.
Class
(
)
.
get
(
"spoon.test.visibility.testclasses.Tacos"
)
;
assertEquals
(
tacos
,
field
.
getDeclaringType
(
)
.
getDeclaration
(
)
)
;
assertEquals
(
tacos
.
getFields
(
)
.
get
(
0
)
,
field
.
getDeclaration
(
)
)
;
}
