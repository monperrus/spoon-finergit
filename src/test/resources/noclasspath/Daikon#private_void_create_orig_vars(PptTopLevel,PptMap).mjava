/** 
 * Add orig() variables to the given EXIT/EXITnn point, Does nothing if exit_ppt is not an EXIT/EXITnn.
 */
private
static
void
create_orig_vars
(
PptTopLevel
exit_ppt
,
PptMap
ppts
)
{
if
(
!
exit_ppt
.
ppt_name
.
isExitPoint
(
)
)
{
return
;
}
if
(
debugInit
.
isLoggable
(
Level
.
FINE
)
)
{
debugInit
.
fine
(
"Doing create and relate orig vars for: "
+
exit_ppt
.
name
(
)
)
;
}
PptTopLevel
entry_ppt
=
ppts
.
get
(
exit_ppt
.
ppt_name
.
makeEnter
(
)
)
;
Assert
.
assertTrue
(
entry_ppt
!=
null
,
exit_ppt
.
name
(
)
)
;
exit_ppt
.
num_orig_vars
=
entry_ppt
.
num_tracevars
;
VarInfo
[
]
new_vis
=
new
VarInfo
[
]
;
{
VarInfo
[
]
entry_ppt_vis
=
entry_ppt
.
var_infos
;
int
new_vis_index
=
0
;
for
(
int
k
=
0
;
k
<
entry_ppt
.
num_declvars
;
k
++
)
{
VarInfo
vi
=
entry_ppt_vis
[
k
]
;
Assert
.
assertTrue
(
!
vi
.
isDerived
(
)
,
"Derived when making orig(): "
+
vi
.
name
(
)
)
;
if
(
vi
.
isStaticConstant
(
)
)
continue
;
VarInfo
origvar
=
VarInfo
.
origVarInfo
(
vi
)
;
VarInfo
postvar
=
exit_ppt
.
find_var_by_name
(
vi
.
name
(
)
)
;
if
(
postvar
==
null
)
{
System
.
out
.
printf
(
"Cant find var %s in exit of ppt %s%n"
,
vi
,
exit_ppt
.
name
(
)
)
;
for
(
VarInfo
cvi
:
entry_ppt
.
var_infos
)
System
.
out
.
printf
(
"  entry var = %s%n"
,
cvi
)
;
for
(
VarInfo
cvi
:
exit_ppt
.
var_infos
)
System
.
out
.
printf
(
"  exit var = %s%n"
,
cvi
)
;
assert
false
:
;
throw
new
RuntimeException
(
"this can't happen: postvar is null"
)
;
}
origvar
.
postState
=
postvar
;
origvar
.
comparability
=
postvar
.
comparability
.
makeAlias
(
)
;
new_vis
[
new_vis_index
]
=
origvar
;
new_vis_index
++
;
}
Assert
.
assertTrue
(
new_vis_index
==
exit_ppt
.
num_orig_vars
)
;
}
exit_ppt
.
addVarInfos
(
new_vis
)
;
}
