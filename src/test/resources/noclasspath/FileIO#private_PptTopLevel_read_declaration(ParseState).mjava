private
static
PptTopLevel
read_declaration
(
ParseState
state
)
throws
IOException
{
String
ppt_name
=
state
.
reader
.
readLine
(
)
;
if
(
ppt_name
==
null
)
{
throw
new
Daikon
.
TerminationMessage
(
"File ends with \"DECLARE\" with no following program point name"
,
state
.
reader
,
state
.
filename
)
;
}
ppt_name
=
ppt_name
.
intern
(
)
;
VarInfo
[
]
vi_array
=
read_VarInfos
(
state
,
ppt_name
)
;
if
(
state
.
all_ppts
.
containsName
(
ppt_name
)
)
{
if
(
state
.
ppts_are_new
)
{
PptTopLevel
existing_ppt
=
state
.
all_ppts
.
get
(
ppt_name
)
;
VarInfo
[
]
existing_vars
=
existing_ppt
.
var_infos
;
if
(
existing_ppt
.
num_declvars
!=
vi_array
.
length
)
{
throw
new
Daikon
.
TerminationMessage
(
"Duplicate declaration of program point \""
+
ppt_name
+
"\" with a different number of VarInfo objects: old VarInfo number="
+
existing_ppt
.
num_declvars
+
", new VarInfo number="
+
vi_array
.
length
,
state
.
reader
,
state
.
filename
)
;
}
for
(
int
i
=
0
;
i
<
vi_array
.
length
;
i
++
)
{
String
oldName
=
existing_vars
[
i
]
.
str_name
(
)
;
String
newName
=
vi_array
[
i
]
.
str_name
(
)
;
if
(
!
oldName
.
equals
(
newName
)
)
{
throw
new
Daikon
.
TerminationMessage
(
"Duplicate declaration of program point \""
+
ppt_name
+
"\" with two different VarInfo: old VarInfo="
+
oldName
+
", new VarInfo="
+
newName
,
state
.
reader
,
state
.
filename
)
;
}
}
}
else
{
return
state
.
all_ppts
.
get
(
ppt_name
)
;
}
}
if
(
!
ppt_included
(
ppt_name
)
)
{
omitted_declarations
++
;
return
null
;
}
PptTopLevel
newppt
=
new
PptTopLevel
(
ppt_name
,
vi_array
)
;
return
newppt
;
}
