private
static
void
warn_if_hierarchy_mismatch
(
PptMap
all_ppts
)
{
boolean
some_program_points
=
false
;
boolean
all_program_points
=
true
;
for
(
Iterator
<
PptTopLevel
>
all_ppts_iter
=
all_ppts
.
ppt_all_iterator
(
)
;
all_ppts_iter
.
hasNext
(
)
;
)
{
PptTopLevel
ppt_top_level
=
all_ppts_iter
.
next
(
)
;
boolean
is_program_point
=
(
ppt_top_level
.
ppt_name
.
isExitPoint
(
)
||
ppt_top_level
.
ppt_name
.
isEnterPoint
(
)
||
ppt_top_level
.
ppt_name
.
isThrowsPoint
(
)
||
ppt_top_level
.
ppt_name
.
isObjectInstanceSynthetic
(
)
||
ppt_top_level
.
ppt_name
.
isClassStaticSynthetic
(
)
||
ppt_top_level
.
ppt_name
.
isGlobalPoint
(
)
)
;
all_program_points
=
all_program_points
&&
is_program_point
;
some_program_points
=
some_program_points
||
is_program_point
;
}
if
(
Daikon
.
use_dataflow_hierarchy
&&
(
!
all_program_points
)
&&
some_program_points
)
{
System
.
out
.
println
(
"Warning: Daikon is using a dataflow"
+
" hierarchy analysis on a data trace"
+
" that does not appear to be over a"
+
" program execution, consider running"
+
" Daikon with the --nohierarchy flag."
)
;
}
}
