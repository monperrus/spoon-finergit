/** 
 * Print each call that does not have a matching exit
 */
public
static
void
process_unmatched_procedure_entries
(
)
{
if
(
dkconfig_unmatched_procedure_entries_quiet
)
return
;
int
unmatched_count
=
call_stack
.
size
(
)
+
call_hashmap
.
size
(
)
;
if
(
(
!
call_stack
.
empty
(
)
)
||
(
!
call_hashmap
.
isEmpty
(
)
)
)
{
System
.
out
.
println
(
)
;
System
.
out
.
print
(
"No return from procedure observed "
+
UtilMDE
.
nplural
(
unmatched_count
,
"time"
)
+
"."
)
;
if
(
Daikon
.
use_dataflow_hierarchy
)
{
System
.
out
.
print
(
"  Unmatched entries are ignored!"
)
;
}
System
.
out
.
println
(
)
;
if
(
!
call_hashmap
.
isEmpty
(
)
)
{
System
.
out
.
println
(
"Unterminated calls:"
)
;
if
(
dkconfig_verbose_unmatched_procedure_entries
)
{
TreeSet
<
Integer
>
keys
=
new
TreeSet
<
Integer
>
(
call_hashmap
.
keySet
(
)
)
;
ArrayList
<
Invocation
>
invocations
=
new
ArrayList
<
Invocation
>
(
)
;
for
(
Integer
i
:
keys
)
{
invocations
.
add
(
call_hashmap
.
get
(
i
)
)
;
}
print_invocations_verbose
(
invocations
)
;
}
else
{
print_invocations_grouped
(
call_hashmap
.
values
(
)
)
;
}
}
if
(
!
call_stack
.
empty
(
)
)
{
if
(
dkconfig_verbose_unmatched_procedure_entries
)
{
System
.
out
.
println
(
"Remaining "
+
UtilMDE
.
nplural
(
unmatched_count
,
"stack"
)
+
" call summarized below."
)
;
print_invocations_verbose
(
call_stack
)
;
}
else
{
print_invocations_grouped
(
call_stack
)
;
}
}
System
.
out
.
print
(
"End of report for procedures not returned from."
)
;
if
(
Daikon
.
use_dataflow_hierarchy
)
{
System
.
out
.
print
(
"  Unmatched entries are ignored!"
)
;
}
System
.
out
.
println
(
)
;
}
}
