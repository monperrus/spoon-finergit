private
void
simpleSimplification
(
IVecInt
conflictToReduce
)
{
int
i
,
j
,
p
;
final
boolean
[
]
seen
=
this
.
mseen
;
IConstr
r
;
for
(
i
=
j
=
1
;
i
<
conflictToReduce
.
size
(
)
;
i
++
)
{
r
=
this
.
voc
.
getReason
(
conflictToReduce
.
get
(
i
)
)
;
if
(
r
==
null
||
r
.
canBePropagatedMultipleTimes
(
)
)
{
conflictToReduce
.
moveTo
(
j
++
,
i
)
;
}
else
{
for
(
int
k
=
0
;
k
<
r
.
size
(
)
;
k
++
)
{
p
=
r
.
get
(
k
)
;
if
(
!
seen
[
p
>>
1
]
&&
this
.
voc
.
isFalsified
(
p
)
&&
this
.
voc
.
getLevel
(
p
)
!=
0
)
{
conflictToReduce
.
moveTo
(
j
++
,
i
)
;
break
;
}
}
}
}
conflictToReduce
.
shrink
(
i
-
j
)
;
this
.
stats
.
reducedliterals
=
i
-
j
;
}
