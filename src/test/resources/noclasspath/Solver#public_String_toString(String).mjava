public
String
toString
(
String
prefix
)
{
StringBuffer
stb
=
new
StringBuffer
(
)
;
Object
[
]
objs
=
{
this
.
dsfactory
,
this
.
learner
,
this
.
params
,
this
.
order
,
this
.
simplifier
,
this
.
restarter
,
this
.
learnedConstraintsDeletionStrategy
}
;
stb
.
append
(
prefix
)
;
stb
.
append
(
"--- Begin Solver configuration ---"
)
;
stb
.
append
(
"\n"
)
;
for
(
Object
o
:
objs
)
{
stb
.
append
(
prefix
)
;
stb
.
append
(
o
.
toString
(
)
)
;
stb
.
append
(
"\n"
)
;
}
stb
.
append
(
prefix
)
;
stb
.
append
(
"timeout="
)
;
if
(
this
.
timeBasedTimeout
)
{
stb
.
append
(
this
.
timeout
/
1000
)
;
stb
.
append
(
"s\n"
)
;
}
else
{
stb
.
append
(
this
.
timeout
)
;
stb
.
append
(
" conflicts\n"
)
;
}
stb
.
append
(
prefix
)
;
stb
.
append
(
"DB Simplification allowed="
)
;
stb
.
append
(
this
.
isDBSimplificationAllowed
)
;
stb
.
append
(
"\n"
)
;
stb
.
append
(
prefix
)
;
if
(
isSolverKeptHot
(
)
)
{
stb
.
append
(
"Heuristics kept accross calls (keep the solver \"hot\")\n"
)
;
stb
.
append
(
prefix
)
;
}
stb
.
append
(
"Listener: "
)
;
stb
.
append
(
slistener
)
;
stb
.
append
(
"\n"
)
;
stb
.
append
(
prefix
)
;
stb
.
append
(
"--- End Solver configuration ---"
)
;
return
stb
.
toString
(
)
;
}
