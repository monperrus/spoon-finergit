protected
Vector
calculateWeaponAttacks
(
Entity
en
,
Mounted
mw
,
boolean
best_only
)
{
int
from
=
en
.
getId
(
)
;
int
weaponID
=
en
.
getEquipmentNum
(
mw
)
;
Vector
result
=
new
Vector
(
)
;
Enumeration
ents
=
game
.
getValidTargets
(
en
)
.
elements
(
)
;
AttackOption
a
=
null
;
AttackOption
max
=
new
AttackOption
(
null
,
null
,
0
,
null
)
;
while
(
ents
.
hasMoreElements
(
)
)
{
Entity
e
=
(
Entity
)
ents
.
nextElement
(
)
;
CEntity
enemy
=
centities
.
get
(
e
)
;
ToHitData
th
=
WeaponAttackAction
.
toHit
(
game
,
from
,
e
,
weaponID
)
;
if
(
th
.
getValue
(
)
!=
ToHitData
.
IMPOSSIBLE
&&
!
(
th
.
getValue
(
)
>=
13
)
)
{
double
expectedDmg
;
if
(
en
instanceof
Infantry
)
{
Infantry
inf
=
(
Infantry
)
en
;
expectedDmg
=
inf
.
getDamage
(
inf
.
getShootingStrength
(
)
)
;
}
else
{
expectedDmg
=
CEntity
.
getExpectedDamage
(
(
WeaponType
)
mw
.
getType
(
)
)
;
}
if
(
e
instanceof
Infantry
)
{
IHex
e_hex
=
game
.
getBoard
(
)
.
getHex
(
e
.
getPosition
(
)
)
;
if
(
!
e_hex
.
containsTerrain
(
Terrains
.
WOODS
)
&&
!
e_hex
.
containsTerrain
(
Terrains
.
BUILDING
)
)
{
expectedDmg
=
2
;
}
}
a
=
new
AttackOption
(
enemy
,
mw
,
expectedDmg
,
th
)
;
if
(
a
.
value
>
max
.
value
)
{
if
(
best_only
)
{
max
=
a
;
}
else
{
result
.
add
(
0
,
a
)
;
}
}
else
{
result
.
add
(
a
)
;
}
}
}
if
(
best_only
&&
max
.
target
!=
null
)
{
result
.
add
(
max
)
;
}
if
(
result
.
size
(
)
>
0
)
{
result
.
add
(
new
AttackOption
(
null
,
mw
,
0
,
null
)
)
;
}
return
result
;
}
