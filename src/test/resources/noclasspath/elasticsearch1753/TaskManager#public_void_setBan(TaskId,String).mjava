/** 
 * Bans all tasks with the specified parent task from execution, cancels all tasks that are currently executing. <p> This method is called when a parent task that has children is cancelled.
 */
public
void
setBan
(
TaskId
parentTaskId
,
String
reason
)
{
logger
.
trace
(
"setting ban for the parent task {} {}"
,
parentTaskId
,
reason
)
;
synchronized
(
banedParents
)
{
if
(
lastDiscoveryNodes
.
nodeExists
(
parentTaskId
.
getNodeId
(
)
)
)
{
banedParents
.
put
(
parentTaskId
,
reason
)
;
}
}
for
(
Map
.
Entry
<
Long
,
CancellableTaskHolder
>
taskEntry
:
cancellableTasks
.
entrySet
(
)
)
{
CancellableTaskHolder
holder
=
taskEntry
.
getValue
(
)
;
if
(
holder
.
hasParent
(
parentTaskId
)
)
{
holder
.
cancel
(
reason
)
;
}
}
}
