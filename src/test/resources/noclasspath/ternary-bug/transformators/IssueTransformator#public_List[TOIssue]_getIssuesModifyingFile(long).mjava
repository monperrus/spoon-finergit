public
List
<
TOIssue
>
getIssuesModifyingFile
(
long
fileId
)
throws
InvalidIDException
{
Filename
filename
=
persistence
.
checkID
(
Filename
.
class
,
fileId
)
;
List
<
Condition
>
conditions
=
Collections
.
singletonList
(
new
Condition
(
"filename"
,
filename
)
)
;
return
persistence
.
getAll
(
FilenameVersion
.
class
,
conditions
)
.
stream
(
)
.
map
(
FilenameVersion
::
getStartVersion
)
.
map
(
Version
::
getIssues
)
.
flatMap
(
Set
::
stream
)
.
map
(
this
::
createIssue
)
.
collect
(
Collectors
.
toList
(
)
)
;
}
